<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>여러가지 개발정보를 공유하는 블로그 입니다.</title>
    <link>https://playneko.github.io/</link>
    
    <atom:link href="https://playneko.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Sat, 26 Dec 2020 11:01:14 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>라즈베리파이에서 Nyan Cat 테마 설치후 사용하기</title>
      <link>https://playneko.github.io/2020/09/14/rasberry-pi/rasberry-pi-048/</link>
      <guid>https://playneko.github.io/2020/09/14/rasberry-pi/rasberry-pi-048/</guid>
      <pubDate>Sun, 13 Sep 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에서 Nyan Cat 테마 설치후 사용하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이에서 Nyan Cat 테마 설치후 사용하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에서-Nyan-Cat-테마-설치후-사용하기"><a href="#라즈베리파이에서-Nyan-Cat-테마-설치후-사용하기" class="headerlink" title="라즈베리파이에서 Nyan Cat 테마 설치후 사용하기"></a>라즈베리파이에서 Nyan Cat 테마 설치후 사용하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라즈베리파이에서 Nyan Cat 테마 설치후 사용하기 입니다.</p><p>Nyan Cat이란 오픈소스 라이선스 프로그램으로</p><p>라즈베리파이 또는 리눅스의 터미널상에서 명령어 한번으로 간단하게 재밌는 테마를 감상 하실수 있습니다.</p><p>그럼 어떻게 설치하고 실행해 보는지 해보도록 하겠습니다.</p><p>라즈베리파이를 VNC로 접속하시고 터미널을 실행해 주시기 바랍니다.</p><p><img src="001.png" alt="image"></p><p>그리고 아래의 명령어를 차례대로 입력하시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 패키지 리스트 최신 업데이트</span></span><br><span class="line">$ sudo apt-get update</span><br><span class="line"><span class="comment"># Nyan Cat 설치하기</span></span><br><span class="line">$ sudo apt-get install nyancat</span><br></pre></td></tr></table></figure><p><img src="002.png" alt="image"></p><p><img src="003.png" alt="image"></p><p>위와같이 나오게 되시면 모든 설치가 완료가 된것 입니다.</p><p>이제 Nyan Cat을 실행을 해보도록 하겠습니다.</p><p>아래와 같이 명령어를 입력해 주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Nyan Cat 실행 명령어</span></span><br><span class="line">pi@Rasppi$ nyancat</span><br></pre></td></tr></table></figure><p>명령어는 어디에서든 상관없이 입력해 주시면 실행이 됩니다.</p><p><img src="004.png" alt="image"></p><p><img src="005.png" alt="image"><br><a href="https://playneko.com/wp-content/uploads/2020/09/005.mp4">실행 영상</a></p><p>실행후 종료를 하시려면 아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 컨트롤 + C키를 눌러주시면 Nyan Cat이 종료 됩니다.</span></span><br><span class="line">Ctrl + C</span><br></pre></td></tr></table></figure><p>지루하게 느껴질수 있는 터미널에서 잠시 테마를 실행후 보시거나</p><p>자리를 비우실 경우에 화면보호기용으로 실행을 해주셔도 좋습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Linux/">Linux</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/linux/">linux</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4/">오픈소스</category>
      
      <category domain="https://playneko.github.io/tags/Linux-%EB%AA%85%EB%A0%B9%EC%A4%84/">Linux 명령줄</category>
      
      <category domain="https://playneko.github.io/tags/Nyan-Cat/">Nyan Cat</category>
      
      <category domain="https://playneko.github.io/tags/nyancat/">nyancat</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B3%A0%EC%96%91%EC%9D%B4/">고양이</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%9D%B4%EC%84%A0%EC%8A%A4/">라이선스</category>
      
      <category domain="https://playneko.github.io/tags/%EB%AC%B4%EC%A7%80%EA%B0%9C/">무지개</category>
      
      <category domain="https://playneko.github.io/tags/%ED%85%8C%EB%A7%88/">테마</category>
      
      
      <comments>https://playneko.github.io/2020/09/14/rasberry-pi/rasberry-pi-048/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에서 파이드OS(Fyde OS) 설치하기</title>
      <link>https://playneko.github.io/2020/08/18/rasberry-pi/rasberry-pi-047/</link>
      <guid>https://playneko.github.io/2020/08/18/rasberry-pi/rasberry-pi-047/</guid>
      <pubDate>Mon, 17 Aug 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에서 파이드OS(Fyde OS) 설치하기&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에서-파이드OS-Fyde-OS-설치하기"><a href="#라즈베리파이에서-파이드OS-Fyde-OS-설치하기" class="headerlink" title="라즈베리파이에서 파이드OS(Fyde OS) 설치하기"></a>라즈베리파이에서 파이드OS(Fyde OS) 설치하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라즈베리파이에 파이드OS(Fyde OS) 설치하기 입니다.</p><p>파이드OS(Fyde OS)는 구글의 크롬OS를 기반으로 개발된 플린트 OS를 중국이 인수를 해서</p><p>개량을 많이 거친게 파이드OS 입니다.</p><p>그래서 어떻게 설치 하는것인지에 대해서만 설명을 드리며</p><p>중국에서 만들었기에 보안이나 여러가지 문제가 생길가능성이 있으며</p><p>이 설명은 어디까지나 어떻게 설치하는지에 대해서만 설명을 드리도록 하겠습니다.</p><p>사용에 대해서는 각자의 판단에 맡기도록 하겠습니다.</p><p>그럼 파이드 OS를 다운로드 하시기 위해 아래의 링크를 눌러주세요.</p><p><a href="https://github.com/FydeOS/chromium_os-raspberry_pi/releases">https://github.com/FydeOS/chromium_os-raspberry_pi/releases</a></p><p>라즈베리파이가 3인지 4인지에 따라서 맞는 파일을 다운로드를 해주시기 바랍니다.</p><p><img src="001-3.png" alt="image"></p><p>위와같이 다운로드가 되셨으면 설치를 하는방법은 라즈베리파이 OS설치와 동일 합니다.</p><p>SD카드를 삽입후 balenaEtcher를 실행을 하시기 바랍니다.</p><p><img src="002-3.png" alt="image"></p><p>첫번째는 다운로드하신 파이드OS 이미지파일을 선택을 하신후</p><p>두번째는 사입하신 SD카드를 선택하시고 Flash!버튼을 눌러주시면 됩니다.</p><p><img src="003-3.png" alt="image"></p><p><img src="004-3.png" alt="image"></p><p><img src="005-3.png" alt="image"></p><p>진행이 끝날때까지 기다리신후 위와같이 나오시면 SD카드를 추출하시고 라즈베리파이에 삽입을 하신후</p><p>라즈베리파이을 기동을 하시면 되겠습니다.</p><p><img src="006-1.jpg" alt="image"></p><p>처음 기동을 하시면 위와같이 나오게 됩니다.</p><p><img src="007.jpg" alt="image"></p><p>위와같이 나오시면 언어를 변경후 시작하기를 눌러주세요.</p><p><img src="008.jpg" alt="image"></p><p>파이드OS를 사용하실려면 기본적으로 인터넷이 되야만 사용이 가능 합니다.</p><p>와이파이를 선택후 접속을 해주시기 바랍니다.</p><p><img src="009.jpg" alt="image"></p><p><img src="010.jpg" alt="image"></p><p><img src="011.jpg" alt="image"></p><p><img src="013.jpg" alt="image"></p><p>업데이트 확인이 되시고 위와같이 나오시면 구글의 아이디를 입력해 주시기 바랍니다.</p><p><img src="014.jpg" alt="image"></p><p>비밀번호를 입력하시고 다음을 눌러주시기 바랍니다.</p><p><img src="015.jpg" alt="image"></p><p>구글 계정이 인증이 되시면 위와같이 나오게 되며 잠시 기다리시면 됩니다.</p><p><img src="016.jpg" alt="image"></p><p>위와같이 설정 완료가 나오시면 시작하기를 눌러서 이제 본격적으로 사용하실수 있습니다.</p><p><img src="017.jpg" alt="image"></p><p>위와같이 나오면 파이드OS를 제대로 사용하실수 있게 되겠습니다.</p><p>라즈베리파이3B에서 동작 확인을 해본 결과 너무 반응이 느려서</p><p>사용하기에는 무리가 있을듯 싶습니다.</p><p>최소한 사용하시려면 라즈베리파이4에서 구동을 하시는것을 추천해 드립니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/linux/">linux</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/balenaEtcher/">balenaEtcher</category>
      
      <category domain="https://playneko.github.io/tags/SD%EC%B9%B4%EB%93%9C/">SD카드</category>
      
      <category domain="https://playneko.github.io/tags/Fyde-OS/">Fyde OS</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B3%B4%EC%95%88/">보안</category>
      
      <category domain="https://playneko.github.io/tags/%EC%99%80%EC%9D%B4%ED%8C%8C%EC%9D%B4/">와이파이</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%B4%EB%AF%B8%EC%A7%80%ED%8C%8C%EC%9D%BC/">이미지파일</category>
      
      <category domain="https://playneko.github.io/tags/%ED%81%AC%EB%A1%ACOS/">크롬OS</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8C%8C%EC%9D%B4%EB%93%9COS/">파이드OS</category>
      
      <category domain="https://playneko.github.io/tags/%ED%94%8C%EB%A6%B0%ED%8A%B8OS/">플린트OS</category>
      
      
      <comments>https://playneko.github.io/2020/08/18/rasberry-pi/rasberry-pi-047/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에서 파이썬을 이용해서 Socket통신 해보기</title>
      <link>https://playneko.github.io/2020/08/05/rasberry-pi/rasberry-pi-046/</link>
      <guid>https://playneko.github.io/2020/08/05/rasberry-pi/rasberry-pi-046/</guid>
      <pubDate>Tue, 04 Aug 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에서 파이썬을 이용해서 Socket통신 해보기&lt;br&gt;이번에 소개할 내용은 라즈베리파이에서 파이썬을 이용해서 Socket통신 해보기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에서-파이썬을-이용해서-Socket통신-해보기"><a href="#라즈베리파이에서-파이썬을-이용해서-Socket통신-해보기" class="headerlink" title="라즈베리파이에서 파이썬을 이용해서 Socket통신 해보기"></a>라즈베리파이에서 파이썬을 이용해서 Socket통신 해보기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라즈베리파이에서 파이썬을 이용해서 Socket통신 해보기 입니다.</p><p>파이썬을 이용해서 간단하게 소켓 서버를 구축하고</p><p>PHP를 이용한 클라이언트를 제작후 웹에서 파이썬 서버로 데이터를 주고 받는것을 해보도록 하겠습니다.</p><p>그럼 우선 Visual Studio Code(비주얼 스튜디오 코드)를 실행해 주시기 바랍니다.</p><p>실행을 하셨으면 아래의 파일들을 추가를 해주시기 바랍니다.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php_socket_send.php</span><br><span class="line">python_socket_server.py</span><br></pre></td></tr></table></figure><p><img src="001-1.png" alt="image"></p><p>파일들을 추가를 하셨으면 php_socket_send.php에 아래와 같이 코딩을 해주시기 바랍니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    error_reporting(E_ALL);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$address</span> = <span class="string">&quot;127.0.0.1&quot;</span>; <span class="comment">// 접속할 IP</span></span><br><span class="line">    <span class="variable">$port</span> = <span class="number">7779</span>; <span class="comment">// 접속할 PORT</span></span><br><span class="line">    <span class="variable">$socket</span> = socket_create(AF_INET, SOCK_STREAM, SOL_TCP); <span class="comment">// TCP 통신용 소켓 생성</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$socket</span> === <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;socket_create() 실패! 이유: &quot;</span> . socket_strerror(socket_last_error()) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;socket 성공적으로 생성.\n&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;다음 IP &#x27;<span class="subst">$address</span>&#x27; 와 Port &#x27;<span class="subst">$port</span>&#x27; 으로 접속중...&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 소켓 연결 및 $result에 접속값 지정</span></span><br><span class="line">    <span class="variable">$result</span> = socket_connect(<span class="variable">$socket</span>, <span class="variable">$address</span>, <span class="variable">$port</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span> === <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;socket_connect() 실패.\nReason: (<span class="subst">$result</span>) &quot;</span> . socket_strerror(socket_last_error(<span class="variable">$socket</span>)) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;다음 주소로 연결 성공 : <span class="subst">$address</span>.\n&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sendData</span> = <span class="string">&quot;Hello, AkibaTV!&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;서버로 보내는 메세지 : <span class="subst">$sendData</span>\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 실제로 소켓으로 보내는 명령어</span></span><br><span class="line">    socket_write(<span class="variable">$socket</span>, <span class="variable">$sendData</span>, strlen(<span class="variable">$sendData</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 소켓으로 부터 받은 REQUEST 정보를 $input에 지정</span></span><br><span class="line">    <span class="variable">$input</span> = socket_read(<span class="variable">$socket</span>, <span class="number">1024</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Could not read from Socket\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// REQUEST 정보 출력</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$input</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 소켓 클로즈</span></span><br><span class="line">    socket_close(<span class="variable">$socket</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="002-1.png" alt="image"></p><p>python_socket_server.py파일을 여시고 아래와 같이 코딩해 주세요.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> _ast <span class="keyword">import</span> If</span><br><span class="line"><span class="keyword">from</span> _thread <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> operator <span class="keyword">import</span> eq</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">S_HOST = <span class="string">&#x27;10.0.1.30&#x27;</span></span><br><span class="line">S_PORT = <span class="number">7779</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">threaded</span>(<span class="params">client_socket, addr</span>):</span> </span><br><span class="line"></span><br><span class="line">    print(<span class="string">&#x27;Connected by :&#x27;</span>, addr[<span class="number">0</span>], <span class="string">&#x27;:&#x27;</span>, addr[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        data = client_socket.recv(<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line">        print(<span class="string">&#x27;Get Message &#x27;</span> + data.decode())</span><br><span class="line"></span><br><span class="line">        client_socket.send(data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">&#x27;Exception by &#x27;</span> + addr[<span class="number">0</span>],<span class="string">&#x27;:&#x27;</span>,addr[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    client_socket.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">global</span> S_HOST, S_PORT</span><br><span class="line"></span><br><span class="line">    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class="number">1</span>)</span><br><span class="line">    server_socket.bind((S_HOST, S_PORT))</span><br><span class="line">    server_socket.listen()</span><br><span class="line"></span><br><span class="line">    print(<span class="string">&#x27;server start&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">        print(<span class="string">&#x27;wait&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        client_socket, addr = server_socket.accept()</span><br><span class="line">        start_new_thread(threaded, (client_socket, addr))</span><br><span class="line"></span><br><span class="line">    server_socket.close()</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p><img src="003-1.png" alt="image"></p><p>라즈베리파이의 적당한곳에 작성하신 두개의 소스파일을 올려주시기 바랍니다.</p><p><img src="004-1.png" alt="image"></p><p>아래의 명령어로 파이썬 소켓서버를 실행을 해주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬 3.x버전대</span></span><br><span class="line">$ sudo python3 python_socket_server.py</span><br></pre></td></tr></table></figure><p><img src="005-2.png" alt="image"></p><p>소켓서버를 실행을 하시면 접속대기 상태가 나오게 됩니다.</p><p>이제 정상적으로 소켓통신이 이루어지는지 테스트를 해보도록 하겠습니다.</p><p>웹브라우저를 실행하시고 http://라즈베리파이서버 IP/php_socket_send.php</p><p>위의 주소를 실행해 주시기 바랍니다.</p><p><img src="006.png" alt="image"></p><p>실행을 하시면 위와같이 서버에 접속과 동시에</p><p>Hello, AkibaTV!를 전송하고 다시 받은것을 확인하실수 있습니다.</p><p><img src="007.png" alt="image"></p><p>서버에서도 Hello, AkibaTV!를 받은것을 확인 하실수 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Python/">Python</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/%EC%84%9C%EB%B2%84/">서버</category>
      
      <category domain="https://playneko.github.io/tags/linux/">linux</category>
      
      <category domain="https://playneko.github.io/tags/nginx/">nginx</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EC%84%9C%EB%B2%84/">웹서버</category>
      
      <category domain="https://playneko.github.io/tags/Python/">Python</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/apache/">apache</category>
      
      <category domain="https://playneko.github.io/tags/chown/">chown</category>
      
      <category domain="https://playneko.github.io/tags/NPM/">NPM</category>
      
      <category domain="https://playneko.github.io/tags/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/Hello/">Hello</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%94%A9/">코딩</category>
      
      <category domain="https://playneko.github.io/tags/localhost/">localhost</category>
      
      <category domain="https://playneko.github.io/tags/www/">www</category>
      
      <category domain="https://playneko.github.io/tags/%EC%86%8C%EC%8A%A4%ED%8C%8C%EC%9D%BC/">소스파일</category>
      
      <category domain="https://playneko.github.io/tags/%ED%85%8C%EC%8A%A4%ED%8A%B8/">테스트</category>
      
      <category domain="https://playneko.github.io/tags/AkibaTV/">AkibaTV</category>
      
      <category domain="https://playneko.github.io/tags/Socket/">Socket</category>
      
      <category domain="https://playneko.github.io/tags/%EC%86%8C%EC%BC%93%EC%84%9C%EB%B2%84/">소켓서버</category>
      
      <category domain="https://playneko.github.io/tags/%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8/">클라이언트</category>
      
      <category domain="https://playneko.github.io/tags/%ED%86%B5%EC%8B%A0/">통신</category>
      
      
      <comments>https://playneko.github.io/2020/08/05/rasberry-pi/rasberry-pi-046/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 에서 파이썬을 이용해서 초간단 웹서버 구축하기</title>
      <link>https://playneko.github.io/2020/08/03/rasberry-pi/rasberry-pi-045/</link>
      <guid>https://playneko.github.io/2020/08/03/rasberry-pi/rasberry-pi-045/</guid>
      <pubDate>Sun, 02 Aug 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 에서 파이썬을 이용해서 초간단 웹서버 구축하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이 에서 파이썬을 이용해서 초간단 웹서버 구축하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-에서-파이썬을-이용해서-초간단-웹서버-구축하기"><a href="#라즈베리파이-에서-파이썬을-이용해서-초간단-웹서버-구축하기" class="headerlink" title="라즈베리파이 에서 파이썬을 이용해서 초간단 웹서버 구축하기"></a>라즈베리파이 에서 파이썬을 이용해서 초간단 웹서버 구축하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라즈베리파이 에서 파이썬을 이용해서 초간단 웹서버 구축하기 입니다.</p><p>html파일과 자바스크립트를 이용해 웹서버에서 간단하게 테스트를 하고싶지만</p><p>서버를 구축하고 설정하고 해야되는 번거로움이 많은경우가 있습니다.</p><p>단순히 확인만 하고 싶었을 뿐이지만요…</p><p>그럴경우에는 파이썬을 이용해서 초간단하게 웹서버를 구축을 해보실수가 있습니다.</p><p>어떻게 하는지 해보도록 하겠습니다.</p><p>우선 간단한 html파일을 만들어 보도록 하겠습니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)로 실행하신후 python_webserver.html로 파일을 추가해 주시기 바랍니다.</p><p><img src="001.png" alt="image"></p><p>추가를 하셨으면 아래와 같이 코딩을 해주시기 바랍니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>AkibaTV<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello, AkibaTV<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="002.png" alt="image"></p><p>실제로 제대로 동작을 하는지 확인을 해보도록 하겠습니다.</p><p>작성을 하신 소스파일을 라즈베리파이에 올려주시기 바랍니다.</p><p><img src="003.png" alt="image"></p><p>서버에 파일이 올라간것을 확인이 되셨으면 아래와 같이 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 포트번호는 임의대로</span></span><br><span class="line"><span class="comment"># 명령어는 html을 배치한 폴더에서 실행을 해주시기 바랍니다.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 파이썬을 2.x버전대이신 분은 아래의 명령어를 입력해 주세요.</span></span><br><span class="line">$ python -m http.server 9000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 파이썬을 3.x버전대이신 분은 아래의 명령어를 입력해 주세요.</span></span><br><span class="line">$ python3 -m http.server 9000</span><br></pre></td></tr></table></figure><p><img src="004.png" alt="image"></p><p>서버가 기동이 되셨으면 웹브라우저를 실행하시고 http://라즈베리파이서버 IP:포트번호/python_webserver.html</p><p>위의 주소를 실행해 주시기 바랍니다.</p><p><img src="005.png" alt="image"></p><p>접속을 하시면 위와같이 등록해놓은 html파일이 웹브라우저에서 실행되는것을 확인 하실수 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Python/">Python</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/%EC%84%9C%EB%B2%84/">서버</category>
      
      <category domain="https://playneko.github.io/tags/linux/">linux</category>
      
      <category domain="https://playneko.github.io/tags/nginx/">nginx</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EC%84%9C%EB%B2%84/">웹서버</category>
      
      <category domain="https://playneko.github.io/tags/Python/">Python</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/apache/">apache</category>
      
      <category domain="https://playneko.github.io/tags/chown/">chown</category>
      
      <category domain="https://playneko.github.io/tags/NPM/">NPM</category>
      
      <category domain="https://playneko.github.io/tags/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/html/">html</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%94%A9/">코딩</category>
      
      <category domain="https://playneko.github.io/tags/localhost/">localhost</category>
      
      <category domain="https://playneko.github.io/tags/www/">www</category>
      
      <category domain="https://playneko.github.io/tags/http-server/">http.server</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B4%88%EA%B0%84%EB%8B%A8/">초간단</category>
      
      <category domain="https://playneko.github.io/tags/%ED%85%8C%EC%8A%A4%ED%8A%B8/">테스트</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8F%AC%ED%8A%B8/">포트</category>
      
      
      <comments>https://playneko.github.io/2020/08/03/rasberry-pi/rasberry-pi-045/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에 GPIO Python PWM Servo Motor 4개 제어하기</title>
      <link>https://playneko.github.io/2020/07/28/rasberry-pi/rasberry-pi-044/</link>
      <guid>https://playneko.github.io/2020/07/28/rasberry-pi/rasberry-pi-044/</guid>
      <pubDate>Mon, 27 Jul 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에 GPIO Python PWM Servo Motor 4개 제어하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이에서 GPIO Python PWM컨트롤러(PCA9685)로 Servo Motor 4개 제어하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에-GPIO-Python-PWM-Servo-Motor-4개-제어하기"><a href="#라즈베리파이에-GPIO-Python-PWM-Servo-Motor-4개-제어하기" class="headerlink" title="라즈베리파이에 GPIO Python PWM Servo Motor 4개 제어하기"></a>라즈베리파이에 GPIO Python PWM Servo Motor 4개 제어하기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 라즈베리파이에서 GPIO Python PWM컨트롤러(PCA9685)로 Servo Motor 4개 제어하기 입니다.</p><p>기존의 라즈베리파이에 GPIO Python PWM Servo Motor 제어하기에 이어서 한번에 4개를 움직이는것을 해보도록 하겠습니다.</p><p>점퍼케이블 설정에 관해서는 라즈베리파이에 GPIO Python PWM Servo Motor 제어하기를 참고해 주시기 바랍니다.</p><p>이번에 사용한 서보모터는 Miuzei サーボモーター マイクロサーボ 9g 5個セット デジタル・サーボ라는 서보모터를 사용했습니다.</p><p>그럼 바로 코딩으로 들어가 보도록 하겠습니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)를 실행을 하신후 기존에 만들어둔 gpio_pwm_servo_motor.py에 추가로 코드를 작성해 보도록 하겠습니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"><span class="keyword">import</span> Adafruit_PCA9685</span><br><span class="line"></span><br><span class="line"><span class="comment"># SG92R를 컨트롤하기 위한 클래스</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SG90_92R_Class</span>:</span></span><br><span class="line">    <span class="comment"># mPin : GPIO Number (PWM)</span></span><br><span class="line">    <span class="comment"># mPwm : PWM컨트롤러용 인스턴스</span></span><br><span class="line">    <span class="comment"># m_Zero_offset_duty</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, Channel, ZeroOffset</span>):</span></span><br><span class="line">        self.mChannel = Channel</span><br><span class="line">        self.m_ZeroOffset = ZeroOffset</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Adafruit_PCA9685 초기화</span></span><br><span class="line">        <span class="comment"># address : PCA9685의 I2C Channel 0x40</span></span><br><span class="line">        self.mPwm = Adafruit_PCA9685.PCA9685(address = <span class="number">0x40</span>)</span><br><span class="line">        <span class="comment"># 50Hz로 설정하셔야 하지만 60Hz로 하시는게 좀더 좋습니다.</span></span><br><span class="line">        self.mPwm.set_pwm_freq(<span class="number">60</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 서보모터 위치 설정</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">SetPos</span>(<span class="params">self, pos</span>):</span></span><br><span class="line">        pulse = (<span class="number">650</span> - <span class="number">150</span>) * pos / <span class="number">180</span> + <span class="number">150</span> + self.m_ZeroOffset</span><br><span class="line">        self.mPwm.set_pwm(self.mChannel, <span class="number">0</span>, <span class="built_in">int</span>(pulse))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 종료처리</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Cleanup</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 서보모터를 90도로 재설정</span></span><br><span class="line">        self.SetPos(<span class="number">90</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 여기가 시작하는 메인 입니다.</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    Servo0 = SG90_92R_Class(Channel = <span class="number">0</span>, ZeroOffset = -<span class="number">10</span>)</span><br><span class="line">    Servo4 = SG90_92R_Class(Channel = <span class="number">4</span>, ZeroOffset = -<span class="number">10</span>)</span><br><span class="line">    Servo8 = SG90_92R_Class(Channel = <span class="number">8</span>, ZeroOffset = -<span class="number">10</span>)</span><br><span class="line">    Servo12 = SG90_92R_Class(Channel = <span class="number">12</span>, ZeroOffset = -<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            Servo0.SetPos(<span class="number">0</span>)</span><br><span class="line">            Servo4.SetPos(<span class="number">0</span>)</span><br><span class="line">            Servo8.SetPos(<span class="number">0</span>)</span><br><span class="line">            Servo12.SetPos(<span class="number">0</span>)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            Servo0.SetPos(<span class="number">90</span>)</span><br><span class="line">            Servo4.SetPos(<span class="number">90</span>)</span><br><span class="line">            Servo8.SetPos(<span class="number">90</span>)</span><br><span class="line">            Servo12.SetPos(<span class="number">90</span>)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            Servo0.SetPos(<span class="number">180</span>)</span><br><span class="line">            Servo4.SetPos(<span class="number">180</span>)</span><br><span class="line">            Servo8.SetPos(<span class="number">180</span>)</span><br><span class="line">            Servo12.SetPos(<span class="number">180</span>)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            Servo0.SetPos(<span class="number">90</span>)</span><br><span class="line">            Servo4.SetPos(<span class="number">90</span>)</span><br><span class="line">            Servo8.SetPos(<span class="number">90</span>)</span><br><span class="line">            Servo12.SetPos(<span class="number">90</span>)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Ctrl + C키를 누르면 종료 됩니다.</span></span><br><span class="line">    <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">        print(<span class="string">&quot;Ctrl + C&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="built_in">str</span>(e))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        Servo0.SetPos(<span class="number">0</span>)</span><br><span class="line">        Servo4.SetPos(<span class="number">0</span>)</span><br><span class="line">        Servo8.SetPos(<span class="number">0</span>)</span><br><span class="line">        Servo12.SetPos(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        Servo0.Cleanup()</span><br><span class="line">        Servo4.Cleanup()</span><br><span class="line">        Servo8.Cleanup()</span><br><span class="line">        Servo12.Cleanup()</span><br><span class="line"></span><br><span class="line">        print(<span class="string">&quot;exit program&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="001-13.png" alt="image"></p><p><img src="002-12.png" alt="image"></p><p>코드 작성이 끝나셨으면 라즈베리파이의 적당한 위치에 올려주시기 바랍니다.</p><p>그리고 VNC로 라즈베리파이에 접속후 터미널을 실행해 주세요.</p><p><img src="003-12.png" alt="image"></p><p>아래의 명령으로 gpio_pwm_servo_motor.py를 실행하도록 하겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬을 2.x버전대이신 분은 아래의 명령어를 입력해 주세요.</span></span><br><span class="line">$ sudo python gpio_pwm_servo_motor.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 파이썬을 3.x버전대이신 분은 아래의 명령어를 입력해 주세요.</span></span><br><span class="line">$ sudo python3 gpio_pwm_servo_motor.py</span><br></pre></td></tr></table></figure><p><img src="004-12.png" alt="image"></p><p>실행을 하시면 서보모터가 움직이는것을 확인 하실수 있습니다.</p><p>프로그램을 종료를 하실려면 Ctrl + C키를 누르면 종료 됩니다.</p><p><img src="005-10.png" alt="image"></p><p><a href="https://youtu.be/jYtGXbBa5J4"><img src="http://img.youtube.com/vi/jYtGXbBa5J4/0.jpg" alt="AkibaTV"></a></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Python/">Python</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/Servo-Motor/">Servo Motor</category>
      
      <category domain="https://playneko.github.io/tags/GPIO/">GPIO</category>
      
      <category domain="https://playneko.github.io/tags/Python/">Python</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/%EC%84%9C%EB%B3%B4%EB%AA%A8%ED%84%B0/">서보모터</category>
      
      <category domain="https://playneko.github.io/tags/I2C/">I2C</category>
      
      <category domain="https://playneko.github.io/tags/PCA9685/">PCA9685</category>
      
      <category domain="https://playneko.github.io/tags/PWM/">PWM</category>
      
      <category domain="https://playneko.github.io/tags/PWM%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC/">PWM컨트롤러</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC/">컨트롤러</category>
      
      
      <comments>https://playneko.github.io/2020/07/28/rasberry-pi/rasberry-pi-044/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라인(LINE) LINE Message API 챗봇 만들기</title>
      <link>https://playneko.github.io/2020/07/27/chatbot/chatbot-005/</link>
      <guid>https://playneko.github.io/2020/07/27/chatbot/chatbot-005/</guid>
      <pubDate>Sun, 26 Jul 2020 15:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라인(LINE) LINE Message API 챗봇 만들기&lt;br&gt;이번에 소개할 내용은 라인(LINE) LINE Message API 챗봇 만들기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라인-LINE-LINE-Message-API-챗봇-만들기"><a href="#라인-LINE-LINE-Message-API-챗봇-만들기" class="headerlink" title="라인(LINE) LINE Message API 챗봇 만들기"></a>라인(LINE) LINE Message API 챗봇 만들기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라인(LINE) LINE Message API 챗봇 만들기 입니다.</p><p>라인(LINE) Message API 개발자 등록하기에 이어서</p><p>본격적으로 라인 챗봇을 만드는 방법을 알아 보도록 하겠습니다.</p><p>텔레그램 챗봇에 이어 라인 챗봇까지 만드는 방법을 알게 되시면</p><p>누구나 쉽게 챗봇을 만드실수가 있게 됩니다.</p><p>라인 챗봇을 만들기 위해 PHP를 이용해서 메세지를 보내보도록 하겠습니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)로 실행하신후 line_webhook.php로 파일을 추가해 주시기 바랍니다.</p><p><img src="001-1-2.png" alt="image"></p><p>추가를 하셨으면 아래와 같이 코딩을 해주시기 바랍니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 억세스토큰값은 라인 개발자 페이지를 참고를 해주시기 바랍니다.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// 유저로부터 메세지를 받습니다.</span></span><br><span class="line">    <span class="variable">$json_string</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">    <span class="variable">$jsonObj</span> = json_decode(<span class="variable">$json_string</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$type</span> = <span class="variable">$jsonObj</span>-&gt;&#123;<span class="string">&quot;events&quot;</span>&#125;[<span class="number">0</span>]-&gt;&#123;<span class="string">&quot;message&quot;</span>&#125;-&gt;&#123;<span class="string">&quot;type&quot;</span>&#125;;</span><br><span class="line">    <span class="comment">// 메세지 취득</span></span><br><span class="line">    <span class="variable">$text</span> = trim(<span class="variable">$jsonObj</span>-&gt;&#123;<span class="string">&quot;events&quot;</span>&#125;[<span class="number">0</span>]-&gt;&#123;<span class="string">&quot;message&quot;</span>&#125;-&gt;&#123;<span class="string">&quot;text&quot;</span>&#125;);</span><br><span class="line">    <span class="comment">// ReplyToken취득</span></span><br><span class="line">    <span class="variable">$replyToken</span> = <span class="variable">$jsonObj</span>-&gt;&#123;<span class="string">&quot;events&quot;</span>&#125;[<span class="number">0</span>]-&gt;&#123;<span class="string">&quot;replyToken&quot;</span>&#125;;</span><br><span class="line">    <span class="comment">//UserID</span></span><br><span class="line">    <span class="variable">$userId</span> = <span class="variable">$jsonObj</span>-&gt;&#123;<span class="string">&quot;events&quot;</span>&#125;[<span class="number">0</span>]-&gt;&#123;<span class="string">&quot;source&quot;</span>&#125;-&gt;&#123;<span class="string">&quot;userId&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 텍스트 메세지 이외는 처리를 하지 않습니다.</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$type</span> != <span class="string">&quot;text&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$apiUrl</span> = <span class="string">&quot;https://api.line.me/v2/bot/message/reply&quot;</span>;</span><br><span class="line">    <span class="variable">$accessToken</span> = <span class="string">&quot;Line 토큰정보&quot;</span>;</span><br><span class="line">    <span class="variable">$messages</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;type&#x27;</span> =&gt; <span class="string">&#x27;text&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;text&#x27;</span> =&gt; <span class="string">&#x27;알수없는 명령어 입니다.&#x27;</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$text</span>)) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$text</span> == <span class="string">&quot;하이&quot;</span> || <span class="variable">$text</span> == <span class="string">&quot;안녕&quot;</span>) &#123;</span><br><span class="line">            <span class="variable">$snedMessage</span> = <span class="string">&quot;안녕하세요. AkibaTV입니다.&quot;</span>;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$text</span> == <span class="string">&quot;도움말&quot;</span>) &#123;</span><br><span class="line">            <span class="variable">$snedMessage</span> = <span class="string">&quot;도움말 입니다.\n&quot;</span>;</span><br><span class="line">            <span class="variable">$snedMessage</span> .= <span class="string">&quot;현재 사용가능한 명령어는\n&quot;</span>;</span><br><span class="line">            <span class="variable">$snedMessage</span> .= <span class="string">&quot;하이, 안녕, 도움말이 있습니다.\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$snedMessage</span> = <span class="string">&quot;등록 되어있지 않은 명령어 입니다.&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$messages</span>[<span class="string">&#x27;text&#x27;</span>] = <span class="variable">$snedMessage</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$messages</span>)) &#123;</span><br><span class="line">        <span class="variable">$post_data</span> = [</span><br><span class="line">            <span class="string">&quot;replyToken&quot;</span> =&gt; <span class="variable">$replyToken</span>,</span><br><span class="line">            <span class="string">&quot;messages&quot;</span> =&gt; [<span class="variable">$messages</span>]</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="variable">$ch</span> = curl_init(<span class="variable">$apiUrl</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_POST, <span class="literal">true</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_CUSTOMREQUEST, <span class="string">&#x27;POST&#x27;</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="literal">true</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, json_encode(<span class="variable">$post_data</span>));</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;Content-Type: application/json; charser=UTF-8&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Authorization: Bearer &#x27;</span> . <span class="variable">$accessToken</span></span><br><span class="line">        ));</span><br><span class="line">        <span class="variable">$result</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="002-1-2.jpg" alt="image"></p><p>실제로 제대로 동작을 하는지 확인을 해보도록 하겠습니다.</p><p>라인봇을 동작하기 위해선 웹훅을 올려놓을 서버가 반듯이 https를 지원하는 서버이어야만 합니다.</p><p>저의 경우 웹호스팅 서버가 https를 지원하기에 웹호스팅 서버에 올려놓도록 하겠습니다.</p><p><img src="003-2.jpg" alt="image"></p><p>라인 개발자 페이지에 로그인을 해주시기 바랍니다.</p><p><img src="004-3.jpg" alt="image"></p><p>Messaging API탭으로 이동을 하신후 스크롤을 해주시면</p><p><img src="005-3.jpg" alt="image"></p><p>Webhook setting이 나오게 됩니다. 그럼 Webhook URL의 Edit버튼을 눌러주시고</p><p><img src="006-2.jpg" alt="image"></p><p>line_webhook.php을 작성하신 URL을 적어주시면 되겠습니다.</p><p>그리고 Update버튼을 눌러주시기 바랍니다.</p><p><img src="007-2.jpg" alt="image"></p><p>Verity버튼을 눌러서 등록하신 URL이 정상 작동하는지 체크를 합니다.</p><p>Success가 나오면 문제없이 작동하고 있는것 입니다.</p><p><img src="008-2.jpg" alt="image"></p><p>Use webhook을 활성화 시켜주셔서 웹훅을 사용가능하게 변경해 줍니다.</p><p><img src="009-2.jpg" alt="image"></p><p>Channal access token입니다만 이것은 코딩을 하실때 여기에 나오는 억세스 토큰을 입력해 주시기 바랍니다.</p><p>위의 과정까지 다 하셨으면 일단 모든 과정은 끝났습니다.</p><p>실제 라인에서 동작 확인을 해보도록 하기 위해서</p><p>위에 QR코드를 이용해서 친구 등록을 해주시면 아래와 같이 챗봇의 채팅방이 개설이 됩니다.</p><p><img src="010-2.jpg" alt="image"></p><p>채팅방이 개설이 된후 채팅방으로 들어가시면</p><p><img src="011-1.jpg" alt="image"></p><p>위와같이 기본 환영 메세지가 나오게 됩니다.</p><p><img src="012-1.jpg" alt="image"></p><p>코딩시에 등록한 명령어들을 입력을 하시면 위와같이 챗봇이 반응을하고</p><p>답변을 주는 형태로 되어 있습니다.</p><p>일본어로 나오는 메세지에 대해서는 설정문제로 계속 나옵니다만</p><p>문제가 해결되면 해결방안에 대해서 설명을 올리도록 하겠습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%B1%97%EB%B4%87-ChatBot/">챗봇(ChatBot)</category>
      
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/API/">API</category>
      
      <category domain="https://playneko.github.io/tags/Bot/">Bot</category>
      
      <category domain="https://playneko.github.io/tags/PC/">PC</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A9%94%EC%84%B8%EC%A7%80/">메세지</category>
      
      <category domain="https://playneko.github.io/tags/%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98/">어플리케이션</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B1%84%ED%8C%85%EB%B0%A9/">채팅방</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B1%97%EB%B4%87/">챗봇</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4%ED%86%A1/">카카오톡</category>
      
      <category domain="https://playneko.github.io/tags/%ED%95%B8%EB%93%9C%ED%8F%B0/">핸드폰</category>
      
      <category domain="https://playneko.github.io/tags/line/">line</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%9D%B8/">라인</category>
      
      <category domain="https://playneko.github.io/tags/channel/">channel</category>
      
      <category domain="https://playneko.github.io/tags/Developers/">Developers</category>
      
      <category domain="https://playneko.github.io/tags/Messaging/">Messaging</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A9%94%EC%8B%A0%EC%A0%80/">메신저</category>
      
      
      <comments>https://playneko.github.io/2020/07/27/chatbot/chatbot-005/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라인(LINE) Message API 개발자 등록하기</title>
      <link>https://playneko.github.io/2020/07/24/chatbot/chatbot-004/</link>
      <guid>https://playneko.github.io/2020/07/24/chatbot/chatbot-004/</guid>
      <pubDate>Thu, 23 Jul 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라인(LINE) Message API 개발자 등록하기&lt;br&gt;이번에 소개할 내용은 라인(LINE) Message API 개발자 등록하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라인-LINE-Message-API-개발자-등록하기"><a href="#라인-LINE-Message-API-개발자-등록하기" class="headerlink" title="라인(LINE) Message API 개발자 등록하기"></a>라인(LINE) Message API 개발자 등록하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라인(LINE) Message API 개발자 등록하기 입니다.</p><p>라인 메신저를 이용한 챗봇 개발을 알아보고 어떤식으로</p><p>개발자를 등록과 API사용법등을 알아보도록 하겠습니다.</p><p>우선 개발자를 등록하기 위해서 아래의 링크를 타고 들어가 주세요.</p><p><a href="https://developers.line.biz/ja/services/messaging-api/">https://developers.line.biz/ja/services/messaging-api/</a></p><p><img src="001-12.png" alt="image"></p><p>상단의 로그인 버튼을 눌러주시기 바랍니다.</p><p><img src="002-11.png" alt="image"></p><p>계정이 있으신 분은 라인아이디로 로그인을 해주시기 바라며</p><p>계정을 가지고 계시지 않은 분들은 라인에서 아이디를 등록후 [<a href="https://account.line.biz/signup">アカウントを作成</a>]를 클릭해 주세요.</p><p><img src="003-11.png" alt="image"></p><p>계정을 등록하기 위해서 [LINEアカウント登録]버튼을 눌러주시기 바랍니다.</p><p><img src="004-2.jpg" alt="image"></p><p>라인에서 생성하신 메일계정과 비밀번호를 입력하시고 로그인을 눌러주시기 바랍니다.</p><p><img src="005-2.jpg" alt="image"></p><p>로그인하신후 위와같이 나오시면 Create버튼을 눌러주시기 바랍니다.</p><p><img src="006-1.jpg" alt="image"></p><p>프로바이더명을 입력을 하시고 Create버튼을 눌러주시기 바랍니다.</p><p><img src="007-1.jpg" alt="image"></p><p>라인 챗봇을 만들기 위해서 Create a Messaging API channel을 선택해 주시기 바랍니다.</p><p><img src="008-1.jpg" alt="image"></p><p><img src="009-1.jpg" alt="image"></p><p><img src="010-1.jpg" alt="image"></p><p>필요한 정보를 입력후 Create버튼을 눌러주시기 바랍니다.</p><p><img src="011.jpg" alt="image"></p><p>이용규약에 동의를 눌러주시기 바랍니다.</p><p><img src="012.jpg" alt="image"></p><p>라인 챗봇을 만들기 위한 개발자 등록이 완료 되었습니다.</p><p>이걸로 챗봇을 만들기 위한 준비는 되었습니다.</p><p>다음에는 라인 챗봇 API를 연동해서 메세지를 주고 받기를 해보도록 하겠습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%B1%97%EB%B4%87-ChatBot/">챗봇(ChatBot)</category>
      
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/API/">API</category>
      
      <category domain="https://playneko.github.io/tags/Bot/">Bot</category>
      
      <category domain="https://playneko.github.io/tags/PC/">PC</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A9%94%EC%84%B8%EC%A7%80/">메세지</category>
      
      <category domain="https://playneko.github.io/tags/%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98/">어플리케이션</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B1%84%ED%8C%85%EB%B0%A9/">채팅방</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B1%97%EB%B4%87/">챗봇</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4%ED%86%A1/">카카오톡</category>
      
      <category domain="https://playneko.github.io/tags/%ED%95%B8%EB%93%9C%ED%8F%B0/">핸드폰</category>
      
      <category domain="https://playneko.github.io/tags/line/">line</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%9D%B8/">라인</category>
      
      <category domain="https://playneko.github.io/tags/channel/">channel</category>
      
      <category domain="https://playneko.github.io/tags/Developers/">Developers</category>
      
      <category domain="https://playneko.github.io/tags/Messaging/">Messaging</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A9%94%EC%8B%A0%EC%A0%80/">메신저</category>
      
      
      <comments>https://playneko.github.io/2020/07/24/chatbot/chatbot-004/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에서 PHP를 이용해서 텔레그램 메세지 보내기</title>
      <link>https://playneko.github.io/2020/07/23/rasberry-pi/rasberry-pi-043/</link>
      <guid>https://playneko.github.io/2020/07/23/rasberry-pi/rasberry-pi-043/</guid>
      <pubDate>Wed, 22 Jul 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에서 PHP를 이용해서 텔레그램 메세지 보내기&lt;br&gt;이번에 소개할 내용은 라즈베리파이에서 PHP를 이용해서 텔레그램 메세지 보내기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에서-PHP를-이용해서-텔레그램-메세지-보내기"><a href="#라즈베리파이에서-PHP를-이용해서-텔레그램-메세지-보내기" class="headerlink" title="라즈베리파이에서 PHP를 이용해서 텔레그램 메세지 보내기"></a>라즈베리파이에서 PHP를 이용해서 텔레그램 메세지 보내기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라즈베리파이에서 PHP를 이용해서 텔레그램 메세지 보내기 입니다.</p><p>저번에 텔레그램 챗봇 API를 이용한 메세지 보내기를 했습니다만</p><p>이번에는 좀더 응용을 해서 PHP를 이용해서 메세지를 보내보도록 하겠습니다.</p><p>그럼 바로 해보도록 하겠습니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)로 실행하신후 telegram_message_send.php로 파일을 추가해 주시기 바랍니다.</p><p><img src="001-11.png" alt="image"></p><p>추가를 하셨으면 아래와 같이 코딩을 해주시기 바랍니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$botToken</span> = <span class="string">&quot;텔레그램 토큰정보&quot;</span>;</span><br><span class="line"><span class="variable">$apiUrl</span> = <span class="string">&quot;https://api.telegram.org/bot&quot;</span> . <span class="variable">$botToken</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$params</span>=[</span><br><span class="line">    <span class="string">&#x27;chat_id&#x27;</span> =&gt; <span class="string">&#x27;채팅방ID&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;text&#x27;</span> =&gt; <span class="string">&#x27;AkibaTV! PHP Send Test!&#x27;</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="variable">$ch</span> = curl_init(<span class="variable">$apiUrl</span> . <span class="string">&#x27;/sendMessage&#x27;</span>);</span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="literal">false</span>);</span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, CURLOPT_POST, <span class="number">1</span>);</span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, (<span class="variable">$params</span>));</span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER, <span class="literal">false</span>);</span><br><span class="line"><span class="variable">$result</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">curl_close(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$json_data</span> = json_decode(<span class="variable">$result</span>);</span><br><span class="line">print_r(<span class="variable">$json_data</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="002-1-1.jpg" alt="image"></p><p>실제로 제대로 동작을 하는지 확인을 해보도록 하겠습니다.</p><p>작성을 하신 소스파일을 라즈베리파이 웹서버에 업로드를 해주시기 바랍니다.</p><p><img src="003-10.png" alt="image"></p><p>서버에 파일이 올라간것을 확인이 되셨으면 웹브라우저를 실행해 주세요.</p><p>웹브라우저의 URL에 http://라즈베리파이URL/telegram_message_send.php 를 실행해 주세요.</p><p><img src="004-11.png" alt="image"></p><p>위와같이 나오게 되시면 정상적으로 메세지가 전송된것 입니다.</p><p>이제 텔레그램 메신저에서 메세지가 도착 했는지 확인해 보도록 하겠습니다.</p><p><img src="005-1.jpg" alt="image"></p><p>텔레그램 메신저에도 정상적으로 메세지가 도착한것을 확인이 되었습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/%EC%B1%97%EB%B4%87-ChatBot/">챗봇(ChatBot)</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/%EC%B1%97%EB%B4%87-ChatBot/PHP/">PHP</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/linux/">linux</category>
      
      <category domain="https://playneko.github.io/tags/nginx/">nginx</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EC%84%9C%EB%B2%84/">웹서버</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/apache/">apache</category>
      
      <category domain="https://playneko.github.io/tags/chown/">chown</category>
      
      <category domain="https://playneko.github.io/tags/NPM/">NPM</category>
      
      <category domain="https://playneko.github.io/tags/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%94%A9/">코딩</category>
      
      <category domain="https://playneko.github.io/tags/localhost/">localhost</category>
      
      <category domain="https://playneko.github.io/tags/www/">www</category>
      
      <category domain="https://playneko.github.io/tags/API/">API</category>
      
      <category domain="https://playneko.github.io/tags/Bot/">Bot</category>
      
      <category domain="https://playneko.github.io/tags/BotFather/">BotFather</category>
      
      <category domain="https://playneko.github.io/tags/PC/">PC</category>
      
      <category domain="https://playneko.github.io/tags/Telegram/">Telegram</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%9D%B8%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라인라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A9%94%EC%84%B8%EC%A7%80/">메세지</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B4%87%ED%8C%8C%EB%8D%94/">봇파더</category>
      
      <category domain="https://playneko.github.io/tags/%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98/">어플리케이션</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B1%84%ED%8C%85%EB%B0%A9/">채팅방</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B1%97%EB%B4%87/">챗봇</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4%ED%86%A1/">카카오톡</category>
      
      <category domain="https://playneko.github.io/tags/%ED%85%94%EB%A0%88%EA%B7%B8%EB%9E%A8/">텔레그램</category>
      
      <category domain="https://playneko.github.io/tags/%ED%95%B8%EB%93%9C%ED%8F%B0/">핸드폰</category>
      
      
      <comments>https://playneko.github.io/2020/07/23/rasberry-pi/rasberry-pi-043/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>텔레그램 챗봇 API를 이용한 메세지 보내기</title>
      <link>https://playneko.github.io/2020/07/22/chatbot/chatbot-003/</link>
      <guid>https://playneko.github.io/2020/07/22/chatbot/chatbot-003/</guid>
      <pubDate>Tue, 21 Jul 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;텔레그램 챗봇 API를 이용한 메세지 보내기&lt;br&gt;이번에 소개할 내용은 텔레그램 챗봇 API를 이용한 메세지 보내기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="텔레그램-챗봇-API를-이용한-메세지-보내기"><a href="#텔레그램-챗봇-API를-이용한-메세지-보내기" class="headerlink" title="텔레그램 챗봇 API를 이용한 메세지 보내기"></a>텔레그램 챗봇 API를 이용한 메세지 보내기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 텔레그램 챗봇 API를 이용한 메세지 보내기 입니다.</p><p>저번시간에는 챗봇 만들기에 이어서 이번에는 메세지를 보내고</p><p>채팅방에서 메세지를 받는것을 해보도록 하겠습니다.</p><p>우선 채팅방 아이디를 취득을 위해서 웹브라우저를 실행을 하신후 아래의 주소를 입력해 주시기 바랍니다.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># $&#123;telegramBotToken&#125;에는 봇파더로부터 받으신 토크값을 넣어주세요.</span><br><span class="line">https://api.telegram.org/bot$&#123;telegramBotToken&#125;/getMe</span><br></pre></td></tr></table></figure><p><img src="001-1.jpg" alt="image"></p><p>위와같이 정보가 나오시면 id값이 채팅방 ID가 됩니다.</p><p>채팅정보를 취득을 위해서 아래와 같이 입력을 해주시기 바랍니다.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># $&#123;telegramBotToken&#125; : 토큰값</span><br><span class="line">https://api.telegram.org/bot$&#123;telegramBotToken&#125;/getUpdates</span><br></pre></td></tr></table></figure><p><img src="002-1.jpg" alt="image"></p><p>아래와 같이 웹브라우저에 입력후 메세지를 전송해 보도록 하겠습니다.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># $&#123;telegramBotToken&#125; : 토큰값</span><br><span class="line"># $&#123;telegramChatId&#125; : 채팅방 ID</span><br><span class="line"># $&#123;text&#125; : 전송할 메세지</span><br><span class="line">https://api.telegram.org/bot$&#123;telegramBotToken&#125;/sendMessage?chat_id=$&#123;telegramChatId&#125;&amp;text=$&#123;text&#125;</span><br></pre></td></tr></table></figure><p><img src="003-1.jpg" alt="image"></p><p>메세지를 전송을 하게 되면 위와같이 나오면 성공적으로 된것 입니다.</p><p>텔레그램 메신저를 확인해서 메세지가 왔는지 확인해 보도록 하겠습니다.</p><p><img src="004-1.jpg" alt="image"></p><p>위와같이 메세지가 전송된것을 확인 하실수 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%B1%97%EB%B4%87-ChatBot/">챗봇(ChatBot)</category>
      
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/API/">API</category>
      
      <category domain="https://playneko.github.io/tags/Bot/">Bot</category>
      
      <category domain="https://playneko.github.io/tags/BotFather/">BotFather</category>
      
      <category domain="https://playneko.github.io/tags/PC/">PC</category>
      
      <category domain="https://playneko.github.io/tags/Telegram/">Telegram</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A9%94%EC%84%B8%EC%A7%80/">메세지</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B4%87%ED%8C%8C%EB%8D%94/">봇파더</category>
      
      <category domain="https://playneko.github.io/tags/%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98/">어플리케이션</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B1%84%ED%8C%85%EB%B0%A9/">채팅방</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B1%97%EB%B4%87/">챗봇</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4%ED%86%A1/">카카오톡</category>
      
      <category domain="https://playneko.github.io/tags/%ED%85%94%EB%A0%88%EA%B7%B8%EB%9E%A8/">텔레그램</category>
      
      <category domain="https://playneko.github.io/tags/%ED%95%B8%EB%93%9C%ED%8F%B0/">핸드폰</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%9D%B8/">라인</category>
      
      
      <comments>https://playneko.github.io/2020/07/22/chatbot/chatbot-003/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>텔레그램 봇파더를 이용한 챗봇 만들어 보기</title>
      <link>https://playneko.github.io/2020/07/21/chatbot/chatbot-002/</link>
      <guid>https://playneko.github.io/2020/07/21/chatbot/chatbot-002/</guid>
      <pubDate>Mon, 20 Jul 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;텔레그램 봇파더를 이용한 챗봇 만들어 보기&lt;br&gt;이번에 소개할 내용은 텔레그램 봇파더를 이용한 챗봇 만들어 보기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="텔레그램-봇파더를-이용한-챗봇-만들어-보기"><a href="#텔레그램-봇파더를-이용한-챗봇-만들어-보기" class="headerlink" title="텔레그램 봇파더를 이용한 챗봇 만들어 보기"></a>텔레그램 봇파더를 이용한 챗봇 만들어 보기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 텔레그램 봇파더를 이용한 챗봇 만들어 보기 입니다.</p><p>라인이나 카카오톡과 같이 복잡한 절차를 거쳐서 챗봇을 만드는게 아닌</p><p>핸드폰으로 간단하게 챗봇을 생성후 <a href="https://core.telegram.org/bots/api">API</a>를 조금만 다루시면 손쉽게 챗봇을 만드실수가 있습니다.</p><p>어떻게 챗봇을 만드는지 알아보도록 하겠습니다.</p><p>핸드폰 또는 PC에서 텔레그램 어플리케이션을 다운로드 받으신후 실행해 주세요.</p><p><img src="001.jpg" alt="image"></p><p>친구 검색에 BotFather를 입력해 주신후 첫번째 봇파더를 선택해 주세요.</p><p><img src="002.jpg" alt="image"></p><p>봇파더를 선택하신후 위와같이 나오시면 [시작] 버튼을 눌러주세요.</p><p><img src="003.jpg" alt="image"></p><p>시작을 누르시면 위와같이 무엇을 할것인지에 대한 목록이 나오게 됩니다.</p><p><img src="004.jpg" alt="image"></p><p>그럼 /newbot을 입력해 주시기 바랍니다.</p><p>그러면 사용할 챗봇명을 입력하라고 나오게 됩니다.</p><p>원하시는 챗봇명을 입력해 주시면 됩니다만 마지막에 bot을 반듯이 입력을 해주셔야만 합니다.</p><p><img src="005.jpg" alt="image"></p><p><img src="006.jpg" alt="image"></p><p>저는 AkibaTVBot이라고 입력을 했습니다.</p><p>원하는 챗봇명을 입력후 챗봇이 생성이 되면 토큰값이 발급이 됩니다.</p><p>t.me/AkibaTVBot을 클릭하시면 채팅방에 참가를 하게 됩니다.</p><p><img src="007.jpg" alt="image"></p><p>채팅방에 접속후 시작을 눌러주시기 바랍니다.</p><p><img src="008.jpg" alt="image"></p><p>챗봇과 대화를 할수있는 상태가 되었습니다.</p><p><img src="009.jpg" alt="image"></p><p>그럼 적당히 챗봇에 명령을 해보지만 반응은 없습니다.</p><p>아래의 명령어를 웹브라우저에 입력을 해주시기 바랍니다.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 챗봇 생성 확인</span><br><span class="line">https://api.telegram.org/bot$&#123;telegramBotToken&#125;/getUpdates</span><br></pre></td></tr></table></figure><p><img src="010.jpg" alt="image"></p><p>위와같이 나오면 정상적으로 챗봇이 등록된것입니다.</p><p>다음에는 챗봇을 이용해 메세지 전송을 해보도록 하겠습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%B1%97%EB%B4%87-ChatBot/">챗봇(ChatBot)</category>
      
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/API/">API</category>
      
      <category domain="https://playneko.github.io/tags/Bot/">Bot</category>
      
      <category domain="https://playneko.github.io/tags/BotFather/">BotFather</category>
      
      <category domain="https://playneko.github.io/tags/PC/">PC</category>
      
      <category domain="https://playneko.github.io/tags/Telegram/">Telegram</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A9%94%EC%84%B8%EC%A7%80/">메세지</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B4%87%ED%8C%8C%EB%8D%94/">봇파더</category>
      
      <category domain="https://playneko.github.io/tags/%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98/">어플리케이션</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B1%84%ED%8C%85%EB%B0%A9/">채팅방</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B1%97%EB%B4%87/">챗봇</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4%ED%86%A1/">카카오톡</category>
      
      <category domain="https://playneko.github.io/tags/%ED%85%94%EB%A0%88%EA%B7%B8%EB%9E%A8/">텔레그램</category>
      
      <category domain="https://playneko.github.io/tags/%ED%95%B8%EB%93%9C%ED%8F%B0/">핸드폰</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%9D%B8/">라인</category>
      
      
      <comments>https://playneko.github.io/2020/07/21/chatbot/chatbot-002/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에서 JAVA에서 만든 JAR파일 실행하기</title>
      <link>https://playneko.github.io/2020/07/20/rasberry-pi/rasberry-pi-042/</link>
      <guid>https://playneko.github.io/2020/07/20/rasberry-pi/rasberry-pi-042/</guid>
      <pubDate>Sun, 19 Jul 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에서 JAVA에서 만든 JAR파일 실행하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이에서 JAVA에서 만든 JAR파일 실행하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에서-JAVA에서-만든-JAR파일-실행하기"><a href="#라즈베리파이에서-JAVA에서-만든-JAR파일-실행하기" class="headerlink" title="라즈베리파이에서 JAVA에서 만든 JAR파일 실행하기"></a>라즈베리파이에서 JAVA에서 만든 JAR파일 실행하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라즈베리파이에서 JAVA에서 만든 JAR파일 실행하기 입니다.</p><p>자바를 이용해서 배치프로그램을 개발을 하신후 라즈베리파이 또는 리눅스에서</p><p>실행을 위해선 JAR파일을 만드시거나 클래스파일을 그대로 올리고 실행을 해주셔야만 합니다.</p><p>제가 소개할 내용은 JAR파일을 만든후 실행하기를 해보도록 하겠습니다.</p><p>JAVA에서 개발한 프로젝트 JAR파일로 만들기를 아직 안보신분은 참고를 해주시기 바랍니다.</p><p>우선 이클립스를 실행후 JAVA에서 개발한 프로젝트 JAR파일로 만들기에 덧붙여서 하겠습니다.</p><p><img src="001-10.png" alt="image"></p><p>이클립스를 실행을 하시고 기존에 만들어둔 AkibaTV프로젝트를 이용을 하겠습니다.</p><p>이상태로 JAR파일을 만드셔서 실행을 하셔도 실행은 되시겠지만</p><p>추가 라이브러리가 있을경우에는 추가 라이브러리도 JAR파일에서 인식이 되게끔</p><p>추가를 해주실 필요가 있습니다.</p><p>우선 META-INF폴더를 추가를 해주시기 바랍니다.</p><p><img src="002-10.png" alt="image"></p><p>폴더 생성을 선택을 해주시기 바랍니다.</p><p><img src="003-9.png" alt="image"></p><p>META-INF를 입력후 Finish를 눌러주시기 바랍니다.</p><p><img src="004-9.png" alt="image"></p><p>META-INF폴더가 생성된것을 확인 하실수 있습니다.</p><p>이번에는 META-INF폴더에 MANIFEST.MF파일을 추가를 하겠습니다.</p><p><img src="005-8.png" alt="image"></p><p>File을 선택을 하시기 바랍니다.</p><p><img src="006-5.png" alt="image"></p><p>MANIFEST.MF를 입력후 Finish를 눌러주시기 바랍니다.</p><p><img src="007-4.png" alt="image"></p><p>MANIFEST.MF파일이 생성된것을 확인이 되었습니다.</p><p>lib폴더에 외부 mariadb-java-client-2.6.0.jar를 MANIFEST.MF파일에 추가를 해주도록 하겠습니다.</p><p>아래와 같이 입력을 해주시기 바랍니다.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Manifest-Version: 0.1</span><br><span class="line">Class-Path: lib/mariadb-java-client-2.5.1.jar</span><br><span class="line">Main-Class: test</span><br></pre></td></tr></table></figure><p><img src="008-4.png" alt="image"></p><p>이제 이상태로 JAR파일을 만들어 주시기 바랍니다.</p><p><img src="009-3.png" alt="image"></p><p><img src="010-2.png" alt="image"></p><p><img src="011-2.png" alt="image"></p><p><img src="012-2.png" alt="image"></p><p>위의 화면에 오시면 Use existing manifest from workspace를 선택후</p><p>추가하신 MANIFEST.MF를 선택후 Finish를 눌러주시기 바랍니다.</p><p><img src="013-2.png" alt="image"></p><p>JAR파일이 만들어진것을 확인후 파일을 라즈베리파이의 적당한 폴더에 올려주시기 바랍니다.</p><p><img src="014-2.png" alt="image"></p><p>JAR파일이 올라간것을 확인되셨으면 권한을 실행권한인 755로 설정을 해주시기 바랍니다.</p><p><img src="015-2.png" alt="image"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 실행 권한을 755로 설정합니다.</span></span><br><span class="line">$ chmod 755 AkibaTV.jar</span><br></pre></td></tr></table></figure><p><img src="016-2.png" alt="image"></p><p>권한이 바뀐것을 확인 하실수 있습니다.</p><p>실행을 위해 아래와 같이 명령어를 입력해 주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 실행 메모리는 프로그램 크기를 생각하셔서 해주시기 바랍니다.</span></span><br><span class="line"><span class="comment"># 경로는 절대경로를 해주시기 바랍니다.</span></span><br><span class="line">$ java -jar -XX:MaxPermSize=32m -Xms128m -Xmx128m <span class="string">&quot;/home/www/batch/AkibaTV.jar&quot;</span></span><br></pre></td></tr></table></figure><p><img src="017-2.png" alt="image"></p><p>JAR파일을 실행을 합니다.</p><p><img src="018.png" alt="image"></p><p>JAR파일이 실행되고 Hello, AkibaTV!가 출력이 되신것을 확인 하실수 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Linux/">Linux</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Linux/Java/">Java</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/Java/">Java</category>
      
      <category domain="https://playneko.github.io/tags/OpenJDK/">OpenJDK</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9E%90%EB%B0%94/">자바</category>
      
      <category domain="https://playneko.github.io/tags/chmod/">chmod</category>
      
      <category domain="https://playneko.github.io/tags/chmod-755/">chmod 755</category>
      
      <category domain="https://playneko.github.io/tags/Export/">Export</category>
      
      <category domain="https://playneko.github.io/tags/jar/">jar</category>
      
      <category domain="https://playneko.github.io/tags/JAR-file/">JAR file</category>
      
      <category domain="https://playneko.github.io/tags/java-jar/">java -jar</category>
      
      <category domain="https://playneko.github.io/tags/jdk/">jdk</category>
      
      <category domain="https://playneko.github.io/tags/library/">library</category>
      
      <category domain="https://playneko.github.io/tags/MANIFEST-MF/">MANIFEST.MF</category>
      
      <category domain="https://playneko.github.io/tags/META-INF/">META-INF</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC/">라이브러리</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B0%B0%EC%B9%98%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8/">배치프로그램</category>
      
      <category domain="https://playneko.github.io/tags/%EC%86%8C%EC%8A%A4%ED%8C%8C%EC%9D%BC/">소스파일</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4/">이클립스</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%98%EC%86%94/">콘솔</category>
      
      <category domain="https://playneko.github.io/tags/%ED%81%B4%EB%9E%98%EC%8A%A4/">클래스</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8C%8C%EC%9D%BC/">파일</category>
      
      <category domain="https://playneko.github.io/tags/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/">프로젝트</category>
      
      
      <comments>https://playneko.github.io/2020/07/20/rasberry-pi/rasberry-pi-042/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 웹서버에서 JavaScript로 UserAgent 취득하기</title>
      <link>https://playneko.github.io/2020/07/17/rasberry-pi/rasberry-pi-041/</link>
      <guid>https://playneko.github.io/2020/07/17/rasberry-pi/rasberry-pi-041/</guid>
      <pubDate>Thu, 16 Jul 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 웹서버에서 JavaScript로 UserAgent 취득하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이 웹서버에서 JavaScript로 UserAgent 취득하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-웹서버에서-JavaScript로-UserAgent-취득하기"><a href="#라즈베리파이-웹서버에서-JavaScript로-UserAgent-취득하기" class="headerlink" title="라즈베리파이 웹서버에서 JavaScript로 UserAgent 취득하기"></a>라즈베리파이 웹서버에서 JavaScript로 UserAgent 취득하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라즈베리파이 웹서버에서 JavaScript로 UserAgent 취득하기 입니다.</p><p>UserAgent는 브라우저에 설정되어 있는 공유의 정보값으로</p><p>어떤 브라우저로 접속하며 버전은 몇인지에 대한 정보를 담고 있습니다.</p><p>어떻게 UserAgent를 취득하며 어떻게 브라우저를 판단 하는것인지를 알아보도록 하겠습니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)로 실행하신후 javascript_useragent.html로 파일을 추가해 주시기 바랍니다.</p><p>추가를 하셨으면 아래와 같이 코딩을 해주시기 바랍니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>AkibaTV<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">load</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> browser;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> userAgent = navigator.userAgent.toLowerCase();</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (userAgent.indexOf(<span class="string">&#x27;edge&#x27;</span>) &gt; -<span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">            browser = <span class="string">&quot;IE Edge&quot;</span>;</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (userAgent.indexOf(<span class="string">&#x27;chrome&#x27;</span>) &gt; -<span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">            browser = <span class="string">&quot;Google Chrome&quot;</span>;</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (userAgent.indexOf(<span class="string">&#x27;firefox&#x27;</span>) &gt; -<span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">            browser = <span class="string">&quot;Fire Fox&quot;</span>;</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (userAgent.indexOf(<span class="string">&#x27;safari&#x27;</span>) &gt; -<span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">            browser = <span class="string">&quot;Safari&quot;</span>;</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            browser = <span class="string">&quot;Internet Explorer&quot;</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> text1 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;browser&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> text2 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;userAgent&#x27;</span>);</span></span><br><span class="line">        text1.innerText = browser;</span><br><span class="line">        text2.innerText = userAgent;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">&quot;load();&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;browser&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;userAgent&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="001-8.png" alt="image"></p><p>실제로 제대로 동작을 하는지 확인을 해보도록 하겠습니다.</p><p>작성을 하신 소스파일을 라즈베리파이 웹서버 또는 개인서버, 호스팅서버에 업로드를 해주시기 바랍니다.</p><p>저는 라즈베리파이에 웹서버를 구축을 해두었기때문에 라즈베리파이 웹서버를 이용하도록 하겠습니다.</p><p><img src="002-8.png" alt="image"></p><p>서버에 파일이 올라간것을 확인이 되셨으면 웹브라우저를 실행해 주세요.</p><p>웹브라우저의 URL에 http://각웹서버URL/javascript_useragent.html 를 실행해 주세요.</p><p>우선 크롬으로 실행을 해보도록 하겠습니다.</p><h5 id="Google-크롬"><a href="#Google-크롬" class="headerlink" title="Google 크롬"></a>Google 크롬</h5><p><img src="003-7.png" alt="image"></p><p><img src="004-8.png" alt="image"></p><p>마이크로소프트 뉴 엣지 브라우저 새로나온 엣지 브라우저는 크롬을 기반으로 만들어져 있기에</p><p>UserAgent정보도 크롬하고 동일하게 나오게 됩니다.</p><h5 id="마이크로소프트-인터넷-익스플로러"><a href="#마이크로소프트-인터넷-익스플로러" class="headerlink" title="마이크로소프트 인터넷 익스플로러"></a>마이크로소프트 인터넷 익스플로러</h5><p><img src="005-7.png" alt="image"></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/JavaScript/">JavaScript</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/server/">server</category>
      
      <category domain="https://playneko.github.io/tags/nginx/">nginx</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EC%84%9C%EB%B2%84/">웹서버</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/apache/">apache</category>
      
      <category domain="https://playneko.github.io/tags/NPM/">NPM</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/html/">html</category>
      
      <category domain="https://playneko.github.io/tags/jQuery/">jQuery</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/Google/">Google</category>
      
      <category domain="https://playneko.github.io/tags/URL/">URL</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B0%9C%EC%9D%B8%EC%84%9C%EB%B2%84/">개인서버</category>
      
      <category domain="https://playneko.github.io/tags/%ED%98%B8%EC%8A%A4%ED%8C%85%EC%84%9C%EB%B2%84/">호스팅서버</category>
      
      <category domain="https://playneko.github.io/tags/Google-%ED%81%AC%EB%A1%AC/">Google 크롬</category>
      
      <category domain="https://playneko.github.io/tags/JavaScript/">JavaScript</category>
      
      <category domain="https://playneko.github.io/tags/UserAgent/">UserAgent</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%86%8C%ED%94%84%ED%8A%B8/">마이크로소프트</category>
      
      <category domain="https://playneko.github.io/tags/%EC%97%A3%EC%A7%80-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">엣지 브라우저</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%B8%ED%84%B0%EB%84%B7-%EC%9D%B5%EC%8A%A4%ED%94%8C%EB%A1%9C%EB%9F%AC/">인터넷 익스플로러</category>
      
      <category domain="https://playneko.github.io/tags/%ED%81%AC%EB%A1%AC/">크롬</category>
      
      
      <comments>https://playneko.github.io/2020/07/17/rasberry-pi/rasberry-pi-041/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 웹서버에서 jQuery Resizable 사용해 보기</title>
      <link>https://playneko.github.io/2020/07/16/rasberry-pi/rasberry-pi-040/</link>
      <guid>https://playneko.github.io/2020/07/16/rasberry-pi/rasberry-pi-040/</guid>
      <pubDate>Wed, 15 Jul 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 웹서버에서 jQuery Resizable 사용해 보기&lt;br&gt;이번에 소개할 내용은 jQuery Resizable 사용해 보기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-웹서버에서-jQuery-Resizable-사용해-보기"><a href="#라즈베리파이-웹서버에서-jQuery-Resizable-사용해-보기" class="headerlink" title="라즈베리파이 웹서버에서 jQuery Resizable 사용해 보기"></a>라즈베리파이 웹서버에서 jQuery Resizable 사용해 보기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 jQuery Resizable 사용해 보기 입니다.</p><p>사이트를 개발을 하시다 보시면 div또는 iframe의 화면크기를 늘리거나 줄이는 방법을</p><p>필요로 할때가 있습니다.</p><p>그런 경우를 위해서 간단하게 리사이징을 하는 방법을 알아보도록 하겠습니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)로 실행하신후 jquery_Resizable.html로 파일을 추가해 주시기 바랍니다.</p><p>추가를 하셨으면 아래와 같이 코딩을 해주시기 바랍니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>AkibaTV<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/resources/demos/style.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#resizable</span> &#123;</span></span><br><span class="line">width: 150px;</span><br><span class="line">height: 150px;</span><br><span class="line">padding: 0.5em;</span><br><span class="line">border: 1px solid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#resizable</span> <span class="selector-tag">h3</span> &#123;</span></span><br><span class="line">text-align: center;</span><br><span class="line">margin: 0;</span><br><span class="line">&#125; </span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-1.12.4.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/ui/1.12.1/jquery-ui.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">$( <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">$( <span class="string">&quot;#resizable&quot;</span> ).resizable();</span></span><br><span class="line">&#125; );</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;resizable&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ui-widget-content&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;ui-widget-header&quot;</span>&gt;</span>리사이징<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="001-1-1.png" alt="image"></p><p>실제로 제대로 동작을 하는지 확인을 해보도록 하겠습니다.</p><p>작성을 하신 소스파일을 라즈베리파이 웹서버 또는 개인서버, 호스팅서버에 업로드를 해주시기 바랍니다.</p><p>저는 라즈베리파이에 웹서버를 구축을 해두었기때문에 라즈베리파이 웹서버를 이용하도록 하겠습니다.</p><p><img src="002-7.png" alt="image"></p><p>서버에 파일이 올라간것을 확인이 되셨으면 웹브라우저를 실행해 주세요.</p><p>웹브라우저의 URL에 http://각웹서버URL/jquery_Resizable.html 를 실행해 주세요.</p><p><img src="003-1-1.png" alt="image"></p><p>초기에는 가로세로 150픽셀 사이즈의 박스형태가 나오게 됩니다.</p><p><img src="004-1-1.png" alt="image"></p><p>마우스를 끝을 잡고 움직이시면 리상징이 되는것을 확인 하실수 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/JavaScript/">JavaScript</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/server/">server</category>
      
      <category domain="https://playneko.github.io/tags/nginx/">nginx</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EC%84%9C%EB%B2%84/">웹서버</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/apache/">apache</category>
      
      <category domain="https://playneko.github.io/tags/NPM/">NPM</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/html/">html</category>
      
      <category domain="https://playneko.github.io/tags/jQuery/">jQuery</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/div/">div</category>
      
      <category domain="https://playneko.github.io/tags/iframe/">iframe</category>
      
      <category domain="https://playneko.github.io/tags/URL/">URL</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B0%9C%EC%9D%B8%EC%84%9C%EB%B2%84/">개인서버</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95/">리사이징</category>
      
      <category domain="https://playneko.github.io/tags/%ED%98%B8%EC%8A%A4%ED%8C%85%EC%84%9C%EB%B2%84/">호스팅서버</category>
      
      <category domain="https://playneko.github.io/tags/%ED%99%94%EB%A9%B4%ED%81%AC%EA%B8%B0/">화면크기</category>
      
      <category domain="https://playneko.github.io/tags/Resizable/">Resizable</category>
      
      
      <comments>https://playneko.github.io/2020/07/16/rasberry-pi/rasberry-pi-040/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA에서 개발한 프로젝트 JAR파일로 만들기</title>
      <link>https://playneko.github.io/2020/07/15/java/java-011/</link>
      <guid>https://playneko.github.io/2020/07/15/java/java-011/</guid>
      <pubDate>Tue, 14 Jul 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;JAVA에서 개발한 프로젝트 JAR파일로 만들기&lt;br&gt;이번에 소개할 내용은 JAVA에서 개발한 프로젝트 JAR파일로 만들기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="JAVA에서-개발한-프로젝트-JAR파일로-만들기"><a href="#JAVA에서-개발한-프로젝트-JAR파일로-만들기" class="headerlink" title="JAVA에서 개발한 프로젝트 JAR파일로 만들기"></a>JAVA에서 개발한 프로젝트 JAR파일로 만들기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 JAVA에서 개발한 프로젝트 JAR파일로 만들기 입니다.</p><p>자바에서 자바 어플리케이션으로 프로젝트를 개발을 하시면</p><p>이 프로그램을 서버에 올려놓고 콘솔로 구동을 해야만 합니다만</p><p>소스파일을 일일이 올리고 돌리는 방법도 있겠습니다만</p><p>이건 소스관리도 그렇고 매번 클래스 파일 하나하나 올리는것도 비효율적이기 때문에</p><p>JAR파일로 하나의 파일로 만드는 방법을 알아보도록 하겠습니다.</p><p>우선 이클립스를 실행을 해주시기 바랍니다.</p><p><img src="001-7.png" alt="image"></p><p>이클립스를 실행 하셨으면 기존에 만들어둔 AkibaTV를 JAR로 만들어 보도록 하겠습니다.</p><p><img src="002-6.png" alt="image"></p><p>AkibaTV를 선택후 Export를 선택해 주시기 바랍니다.</p><p><img src="003-6.png" alt="image"></p><p>위와같이 나오시면 JAVA의 JAR file을 선택하시고 Next를 눌러주세요.</p><p><img src="005-6.png" alt="image"></p><p>위와같이 나오시면 체크 부분을 위와 동일하게 체크를 하시고</p><p>JAR파일을 저장하실 경로를 지정을 해주시고 Finish를 눌러주시면</p><p>JAR파일이 만들기가 끝나게 됩니다.</p><p><img src="005-6.png" alt="image"></p><p>위와같이 JAR파일이 만들어진것을 확인 하실수 있습니다.</p><p>다음에는 JAR파일을 이용해서 서버환경에서 실행하는 방법을 알아보도록 하겠습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Java/">Java</category>
      
      
      <category domain="https://playneko.github.io/tags/%ED%81%AC%EB%A1%A4%EB%A7%81/">크롤링</category>
      
      <category domain="https://playneko.github.io/tags/Java/">Java</category>
      
      <category domain="https://playneko.github.io/tags/OpenJDK/">OpenJDK</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9E%90%EB%B0%94/">자바</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/Export/">Export</category>
      
      <category domain="https://playneko.github.io/tags/jar/">jar</category>
      
      <category domain="https://playneko.github.io/tags/JAR-file/">JAR file</category>
      
      <category domain="https://playneko.github.io/tags/jdk/">jdk</category>
      
      <category domain="https://playneko.github.io/tags/library/">library</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC/">라이브러리</category>
      
      <category domain="https://playneko.github.io/tags/%EC%86%8C%EC%8A%A4%ED%8C%8C%EC%9D%BC/">소스파일</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4/">이클립스</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%98%EC%86%94/">콘솔</category>
      
      <category domain="https://playneko.github.io/tags/%ED%81%B4%EB%9E%98%EC%8A%A4/">클래스</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8C%8C%EC%9D%BC/">파일</category>
      
      <category domain="https://playneko.github.io/tags/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/">프로젝트</category>
      
      <category domain="https://playneko.github.io/tags/JSOUP/">JSOUP</category>
      
      <category domain="https://playneko.github.io/tags/%EC%82%AC%EC%9D%B4%ED%8A%B8/">사이트</category>
      
      
      <comments>https://playneko.github.io/2020/07/15/java/java-011/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 NPM에서 크롤링한 NAVER 웹툰 웹에 출력하기</title>
      <link>https://playneko.github.io/2020/07/14/rasberry-pi/rasberry-pi-039/</link>
      <guid>https://playneko.github.io/2020/07/14/rasberry-pi/rasberry-pi-039/</guid>
      <pubDate>Mon, 13 Jul 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 NPM에서 크롤링한 NAVER 웹툰 웹에 출력하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이 NPM에서 크롤링한 NAVER 웹툰을 웹에 출력하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-NPM에서-크롤링한-NAVER-웹툰-웹에-출력하기"><a href="#라즈베리파이-NPM에서-크롤링한-NAVER-웹툰-웹에-출력하기" class="headerlink" title="라즈베리파이 NPM에서 크롤링한 NAVER 웹툰 웹에 출력하기"></a>라즈베리파이 NPM에서 크롤링한 NAVER 웹툰 웹에 출력하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라즈베리파이 NPM에서 크롤링한 NAVER 웹툰을 웹에 출력하기 입니다.</p><p>저번시간에 JAVA에서 NAVER 웹툰 크롤링후 DB에 저장하기를 아직 못보신 분들은</p><p>우선 크롤링을 하는 방법을 먼저 보고 오시기 바랍니다.</p><p>크롤링한 데이터를 웹에 출력하기 위해서 우선 Visual Studio Code(비주얼 스튜디오 코드)를 실행해 주시기 바랍니다.</p><p>실행을 하셨으면 파일명을 php_naver_webtoon.php로 추가를 해주시기 바랍니다.</p><p><img src="001-6.png" alt="image"></p><p>아래와 같이 코딩을 해주시기 비랍니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">    <span class="variable">$username</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line">    <span class="variable">$password</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line">    <span class="variable">$dbname</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 데이터베이스 생성</span></span><br><span class="line">    <span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 데이터베이스 접속</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;connect_error) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;데이터베이스 접속 실패 : &quot;</span> . <span class="variable">$conn</span>-&gt;connect_error);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot; SELECT count(day) cnt &quot;</span>;</span><br><span class="line"><span class="variable">$sql</span> .= <span class="string">&quot; FROM webtoon &quot;</span>;</span><br><span class="line"><span class="variable">$sql</span> .= <span class="string">&quot; GROUP BY day &quot;</span>;</span><br><span class="line"><span class="variable">$sql</span> .= <span class="string">&quot; LIMIT 0, 1 &quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$conn</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$line</span> = <span class="variable">$result</span>-&gt;fetch_assoc()[<span class="string">&#x27;cnt&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot; SELECT no, day, title, url, thumb &quot;</span>;</span><br><span class="line"><span class="variable">$sql</span> .= <span class="string">&quot; FROM webtoon &quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$conn</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$arrayMon</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$arrayTue</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$arrayWed</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$arrayThu</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$arrayFri</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$arraySat</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$arraySun</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$result</span>-&gt;num_rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span> = <span class="variable">$result</span>-&gt;fetch_assoc()) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$row</span>[<span class="string">&#x27;day&#x27;</span>] == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="variable">$arrayMon</span>[] = <span class="variable">$row</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$row</span>[<span class="string">&#x27;day&#x27;</span>] == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="variable">$arrayTue</span>[] = <span class="variable">$row</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$row</span>[<span class="string">&#x27;day&#x27;</span>] == <span class="number">2</span>) &#123;</span><br><span class="line"><span class="variable">$arrayWed</span>[] = <span class="variable">$row</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$row</span>[<span class="string">&#x27;day&#x27;</span>] == <span class="number">3</span>) &#123;</span><br><span class="line"><span class="variable">$arrayThu</span>[] = <span class="variable">$row</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$row</span>[<span class="string">&#x27;day&#x27;</span>] == <span class="number">4</span>) &#123;</span><br><span class="line"><span class="variable">$arrayFri</span>[] = <span class="variable">$row</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$row</span>[<span class="string">&#x27;day&#x27;</span>] == <span class="number">5</span>) &#123;</span><br><span class="line"><span class="variable">$arraySat</span>[] = <span class="variable">$row</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$row</span>[<span class="string">&#x27;day&#x27;</span>] == <span class="number">6</span>) &#123;</span><br><span class="line"><span class="variable">$arraySun</span>[] = <span class="variable">$row</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;AkibaTV&lt;/title&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">th &#123; background-color: <span class="comment">#eeeeee; &#125;</span></span><br><span class="line">td &#123; width: <span class="number">83</span>px; word-<span class="keyword">break</span>: <span class="keyword">break</span>-word; vertical-align: baseline; border: <span class="number">1</span>px solid <span class="comment">#bdbdbd; &#125;</span></span><br><span class="line">td &gt; div:last-child &#123; font-size: <span class="number">9</span>pt; &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;table&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;th&gt;월요일&lt;/th&gt;</span><br><span class="line">&lt;th&gt;화요일&lt;/th&gt;</span><br><span class="line">&lt;th&gt;수요일&lt;/th&gt;</span><br><span class="line">&lt;th&gt;목요일&lt;/th&gt;</span><br><span class="line">&lt;th&gt;금요일&lt;/th&gt;</span><br><span class="line">&lt;th&gt;토요일&lt;/th&gt;</span><br><span class="line">&lt;th&gt;일요일&lt;/th&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$line</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$line</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;tr&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$arrayMon</span>[<span class="variable">$i</span>])) &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;div&gt;&lt;img src=<span class="string">&quot;&lt;?=<span class="subst">$arrayMon</span>[<span class="subst">$i</span>][&#x27;thumb&#x27;]?&gt;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;<span class="meta">&lt;?=</span><span class="variable">$arrayMon</span>[<span class="variable">$i</span>][<span class="string">&#x27;title&#x27;</span>]<span class="meta">?&gt;</span>&lt;/div&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$arrayTue</span>[<span class="variable">$i</span>])) &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;div&gt;&lt;img src=<span class="string">&quot;&lt;?=<span class="subst">$arrayTue</span>[<span class="subst">$i</span>][&#x27;thumb&#x27;]?&gt;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;<span class="meta">&lt;?=</span><span class="variable">$arrayTue</span>[<span class="variable">$i</span>][<span class="string">&#x27;title&#x27;</span>]<span class="meta">?&gt;</span>&lt;/div&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$arrayWed</span>[<span class="variable">$i</span>])) &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;div&gt;&lt;img src=<span class="string">&quot;&lt;?=<span class="subst">$arrayWed</span>[<span class="subst">$i</span>][&#x27;thumb&#x27;]?&gt;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;<span class="meta">&lt;?=</span><span class="variable">$arrayWed</span>[<span class="variable">$i</span>][<span class="string">&#x27;title&#x27;</span>]<span class="meta">?&gt;</span>&lt;/div&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$arrayThu</span>[<span class="variable">$i</span>])) &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;div&gt;&lt;img src=<span class="string">&quot;&lt;?=<span class="subst">$arrayThu</span>[<span class="subst">$i</span>][&#x27;thumb&#x27;]?&gt;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;<span class="meta">&lt;?=</span><span class="variable">$arrayThu</span>[<span class="variable">$i</span>][<span class="string">&#x27;title&#x27;</span>]<span class="meta">?&gt;</span>&lt;/div&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$arrayFri</span>[<span class="variable">$i</span>])) &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;div&gt;&lt;img src=<span class="string">&quot;&lt;?=<span class="subst">$arrayFri</span>[<span class="subst">$i</span>][&#x27;thumb&#x27;]?&gt;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;<span class="meta">&lt;?=</span><span class="variable">$arrayFri</span>[<span class="variable">$i</span>][<span class="string">&#x27;title&#x27;</span>]<span class="meta">?&gt;</span>&lt;/div&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$arraySat</span>[<span class="variable">$i</span>])) &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;div&gt;&lt;img src=<span class="string">&quot;&lt;?=<span class="subst">$arraySat</span>[<span class="subst">$i</span>][&#x27;thumb&#x27;]?&gt;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;<span class="meta">&lt;?=</span><span class="variable">$arraySat</span>[<span class="variable">$i</span>][<span class="string">&#x27;title&#x27;</span>]<span class="meta">?&gt;</span>&lt;/div&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$arraySun</span>[<span class="variable">$i</span>])) &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;div&gt;&lt;img src=<span class="string">&quot;&lt;?=<span class="subst">$arraySun</span>[<span class="subst">$i</span>][&#x27;thumb&#x27;]?&gt;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;<span class="meta">&lt;?=</span><span class="variable">$arraySun</span>[<span class="variable">$i</span>][<span class="string">&#x27;title&#x27;</span>]<span class="meta">?&gt;</span>&lt;/div&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/tr&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$conn</span>-&gt;close(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="20200711_184317.png" alt="image"></p><p>작성을 하셨으면 작성하신 소스파일을 라즈베리파이의 웹폴더에 올려주시기 바랍니다.</p><p><img src="003-5.png" alt="image"></p><p>웹브라우저를 실행하시고 http://라즈베리파이서버 IP/php_naver_webtoon.php</p><p>위의 주소를 실행해 주시기 바랍니다.</p><p><img src="004-6.png" alt="image"></p><p>실행을 하시면 위와같이 기존 JAVA에서 크롤링한후 데이터베이스에 저장해둔</p><p>네이버 웹툰 데이터를 웹으로 출력한것을 보실수 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Linux/">Linux</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Linux/PHP/">PHP</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/linux/">linux</category>
      
      <category domain="https://playneko.github.io/tags/nginx/">nginx</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EC%84%9C%EB%B2%84/">웹서버</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/apache/">apache</category>
      
      <category domain="https://playneko.github.io/tags/chown/">chown</category>
      
      <category domain="https://playneko.github.io/tags/NPM/">NPM</category>
      
      <category domain="https://playneko.github.io/tags/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/%ED%81%AC%EB%A1%A4%EB%A7%81/">크롤링</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%94%A9/">코딩</category>
      
      <category domain="https://playneko.github.io/tags/localhost/">localhost</category>
      
      <category domain="https://playneko.github.io/tags/www/">www</category>
      
      <category domain="https://playneko.github.io/tags/NAVER/">NAVER</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%ED%88%B0/">웹툰</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B6%9C%EB%A0%A5/">출력</category>
      
      <category domain="https://playneko.github.io/tags/crawling/">crawling</category>
      
      <category domain="https://playneko.github.io/tags/webtoon/">webtoon</category>
      
      <category domain="https://playneko.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/">데이터베이스</category>
      
      
      <comments>https://playneko.github.io/2020/07/14/rasberry-pi/rasberry-pi-039/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA에서 NAVER 웹툰 크롤링후 DB에 저장하기</title>
      <link>https://playneko.github.io/2020/07/13/java/java-010/</link>
      <guid>https://playneko.github.io/2020/07/13/java/java-010/</guid>
      <pubDate>Sun, 12 Jul 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;JAVA에서 NAVER 웹툰 크롤링후 DB에 저장하기&lt;br&gt;이번에 소개할 내용은 JAVA에서 NAVER 웹툰 크롤링후 DB에 저장하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="JAVA에서-NAVER-웹툰-크롤링후-DB에-저장하기"><a href="#JAVA에서-NAVER-웹툰-크롤링후-DB에-저장하기" class="headerlink" title="JAVA에서 NAVER 웹툰 크롤링후 DB에 저장하기"></a>JAVA에서 NAVER 웹툰 크롤링후 DB에 저장하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 JAVA에서 NAVER 웹툰 크롤링후 DB에 저장하기 입니다.</p><p>저번의 JAVA에서 JSOUP을 이용한 사이트 크롤링 처리에 이어서</p><p>크롤링에 대해서 좀더 다양하게 하는 방법을 알아보도록 하겠습니다.</p><p>이클립스를 실행을 하시고 기존에 만든 크롤링 처리 프로젝트에</p><p>이어서 클래스와 DB테이블을 생성해서 Insert를 해보도록 하겠습니다.</p><p>코딩에 들어가기에 앞서 어떤것을 크롤링 할것인지 설명해 드리도록 하겠습니다.</p><p><img src="001.png" alt="image"></p><p>네이버 웹툰의 요일별 웹툰의 리스트를 추출해서</p><p>타이틀, 썸네일, 링크URL을 DB에 저장하도록 하겠습니다.</p><p>크롬의 개발자 툴을 실행 하시고 어떤 부분을 크롤링 대상으로 할것인지 확인해 보도록 하겠습니다.</p><p><img src="000-1.png" alt="image"></p><p>개발자툴을 실행하시고 태그를 확인하시면 월요일의 웹툰 부분을 기준으로 설명 하겠습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 이부분을 기준으로 클래스명으로</span><br><span class="line"># 크롤링을 하면 요일별로 전부 추출이 가능 합니다.</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col_inner&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># 추출한 리스트에서 요일부분만</span><br><span class="line"># 다시 추출해서 무슨 요일인지 체크후</span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;mon&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># thumb클래스명을 가진 태그의</span><br><span class="line"># 썸네일 이미지와 URL을 추출 합니다.</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;thumb&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># 그다음 마지막으로</span><br><span class="line"># 태그안의 글자만 출력 부분을 추출합니다.</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p>우선 이클립스를 실행해 주시고 아래와 같이 파일들을 추가를 해주시기 바랍니다.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 추가 자바 클래스 파일</span><br><span class="line">connection.java</span><br><span class="line">insert.java</span><br><span class="line">select.java</span><br><span class="line">webtoon.java</span><br><span class="line"></span><br><span class="line"># 라이브러리</span><br><span class="line"># 빌드패스에 추가해 주시기 바랍니다.</span><br><span class="line">mariadb-java-client-2.6.0.jar</span><br></pre></td></tr></table></figure><p><img src="001-5.png" alt="image"></p><p>클래스 파일과 라이브러리를 추가를 하셨으면 각 파일에 맞게 아래와 같이 코딩을 해주시기 바랍니다.</p><p>##### connection.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> crawling;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">connection</span> </span>&#123;</span><br><span class="line">    Connection conn;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">connection</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// mariaDB 드라이버 설정</span></span><br><span class="line">Class.forName(<span class="string">&quot;org.mariadb.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 접속할 DB주소 설정</span></span><br><span class="line">String url = <span class="string">&quot;jdbc:mysql://데이터베이스URL/DB명&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 접속할 아이디, 비밀번호 설정</span></span><br><span class="line">conn = DriverManager.getConnection(url, <span class="string">&quot;아이디&quot;</span>, <span class="string">&quot;비밀번호&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;DB 연결 성공&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;mariaDB Driver를 찾을수 없습니다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Database 연결중 에러가 발생 했습니다.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> PreparedStatement <span class="title">prepareStatement</span><span class="params">(String sql)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="keyword">return</span> conn.prepareStatement(sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isClosed</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="keyword">return</span> conn.isClosed();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="002-5.png" alt="image"></p><p>##### insert.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> crawling;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">insert</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertQuery</span><span class="params">(<span class="keyword">int</span> day, String title, String url, String thumb)</span> </span>&#123;</span><br><span class="line">connection conn = <span class="keyword">new</span> connection();</span><br><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// Insert문 ?부분은 아래의 입력값이 자동으로 변환이 됩니다.</span></span><br><span class="line">String sql = <span class="string">&quot; INSERT INTO webtoon (no, day, title, url, thumb) VALUES (0, ?, ?, ?, ?) &quot;</span>;</span><br><span class="line">pstmt = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> index = <span class="number">1</span>;</span><br><span class="line">pstmt.setInt(index++, day);</span><br><span class="line">pstmt.setString(index++, title);</span><br><span class="line">pstmt.setString(index++, url);</span><br><span class="line">pstmt.setString(index++, thumb);</span><br><span class="line"></span><br><span class="line"><span class="comment">// SQL실행</span></span><br><span class="line"><span class="keyword">int</span> count = pstmt.executeUpdate();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;데이터값에 이상이 있습니다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;데이터 Insert 성공!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Database 연결중 에러가 발생 했습니다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span> &amp;&amp; !conn.isClosed()) &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="003-4.png" alt="image"></p><p>##### select.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> crawling;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">select</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">selectQuery</span><span class="params">(String title)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">connection conn = <span class="keyword">new</span> connection();</span><br><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span><br><span class="line">    ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// Select 쿼리문</span></span><br><span class="line">String sql = <span class="string">&quot; SELECT count(*) as cnt FROM webtoon where title = ? &quot;</span>;</span><br><span class="line">pstmt = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> pstmtIndex = <span class="number">1</span>;</span><br><span class="line">pstmt.setString(pstmtIndex++, title);</span><br><span class="line"></span><br><span class="line"><span class="comment">// SQL실행</span></span><br><span class="line">rs = pstmt.executeQuery();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 결과값 출력</span></span><br><span class="line"><span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">result = rs.getInt(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Database 연결중 에러가 발생 했습니다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span> &amp;&amp; !conn.isClosed()) &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="004-5.png" alt="image"></p><p>##### webtoon.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> crawling;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.jsoup.Connection;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.select.Elements;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">webtoon</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">select selectSql = <span class="keyword">new</span> select();</span><br><span class="line">insert insertSql = <span class="keyword">new</span> insert();</span><br><span class="line"></span><br><span class="line">Document doc = <span class="keyword">null</span>;</span><br><span class="line">Elements elemList = <span class="keyword">new</span> Elements();</span><br><span class="line">String URL = <span class="string">&quot;https://comic.naver.com/webtoon/weekday.nhn&quot;</span>;</span><br><span class="line">String[] dateArr = &#123;<span class="string">&quot;h4.mon&quot;</span>,<span class="string">&quot;h4.tue&quot;</span>,<span class="string">&quot;h4.wed&quot;</span>,<span class="string">&quot;h4.thu&quot;</span>,<span class="string">&quot;h4.fri&quot;</span>,<span class="string">&quot;h4.sat&quot;</span>,<span class="string">&quot;h4.sun&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Connection connection = Jsoup.connect(URL)</span><br><span class="line">.userAgent(<span class="string">&quot;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36&quot;</span>)</span><br><span class="line">.header(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;text/html&quot;</span>)</span><br><span class="line">        .header(<span class="string">&quot;Accept-Encoding&quot;</span>, <span class="string">&quot;gzip,deflate&quot;</span>)</span><br><span class="line">        .header(<span class="string">&quot;Accept-Language&quot;</span>, <span class="string">&quot;it-IT,en;q=0.8,en-US;q=0.6,de;q=0.4,it;q=0.2,es;q=0.2&quot;</span>)</span><br><span class="line">        .header(<span class="string">&quot;Connection&quot;</span>, <span class="string">&quot;keep-alive&quot;</span>)</span><br><span class="line">        .ignoreContentType(<span class="keyword">true</span>)</span><br><span class="line">        .timeout(<span class="number">30000</span>);</span><br><span class="line">doc = connection.get();</span><br><span class="line">elemList = doc.select(<span class="string">&quot;.col_inner&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (elemList.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; elemList.size(); i++) &#123;</span><br><span class="line">Elements elems = elemList.get(i).children();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (elems.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; dateArr.length; j++) &#123;</span><br><span class="line">Elements elemTitle = <span class="keyword">new</span> Elements();</span><br><span class="line">Elements elemUl = <span class="keyword">new</span> Elements();</span><br><span class="line">elemTitle = elems.select(dateArr[j]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (elemTitle != <span class="keyword">null</span> &amp;&amp; !elemTitle.isEmpty()) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;------------------&quot;</span>);</span><br><span class="line">System.out.println(elemTitle.text());</span><br><span class="line">System.out.println(<span class="string">&quot;------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">elemUl = elems.select(<span class="string">&quot;ul &gt; li&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (elemUl.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; elemUl.size(); k++) &#123;</span><br><span class="line">Elements elemLi = elemUl.get(k).children();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (selectSql.selectQuery(elemLi.text()) &lt; <span class="number">1</span>) &#123;</span><br><span class="line">Elements elemHref = elemLi.select(<span class="string">&quot;.thumb &gt; a&quot;</span>);</span><br><span class="line">Elements elemImg = elemLi.select(<span class="string">&quot;.thumb &gt; a &gt; img&quot;</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(elemLi.text());</span><br><span class="line">System.out.println(elemImg.attr(<span class="string">&quot;src&quot;</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">insertSql.insertQuery(j, elemLi.text(), elemHref.attr(<span class="string">&quot;href&quot;</span>), elemImg.attr(<span class="string">&quot;src&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="005-5.png" alt="image"></p><p>위와같이 작성을 해서 코딩은 일단 끝났습니다.</p><p>이제 데이터베이스에 테이블을 생성을 해야만 합니다.</p><p>데이터베이스 관리툴을 실행하신후 아래와 같이 데이터베이스를 추가를 해주시기 바랍니다.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 테이블명, 칼럼, 종류, 사이즈등을 설정을 해주시기 바랍니다.</span><br><span class="line">----------+---------+--------+--------+----------------</span><br><span class="line"> Name     | Type    | Size   | Default| Add</span><br><span class="line">----------+---------+--------+--------+----------------</span><br><span class="line"> no       | INT     | 10     |        | AUTO_INCREMENT</span><br><span class="line">----------+---------+--------+--------+----------------</span><br><span class="line"> day      | TINYINT | 1      | 0      |</span><br><span class="line">----------+---------+--------+--------+----------------</span><br><span class="line"> title    | VARCHAR | 30     |        |</span><br><span class="line">----------+---------+--------+--------+----------------</span><br><span class="line"> url      | VARCHAR | 255    |        |</span><br><span class="line">----------+---------+--------+--------+----------------</span><br><span class="line"> thumb    | VARCHAR | 2000   |        |</span><br><span class="line">----------+---------+--------+--------+----------------</span><br></pre></td></tr></table></figure><p><img src="006-4.png" alt="image"></p><p>데이터베이스도 추가가 되셨으면 이클립스에서</p><p>webtoon.java를 실행해서 정상 등록 되는지 확인해 보도록 하겠습니다.</p><p><img src="007-3.png" alt="image"></p><p><img src="008-3.png" alt="image"></p><p>자바 프로그램을 실행을 하시게 되시면 위와같이 콘솔창에</p><p>DB 연결 성공, 데이터 Insert 성공!이 나오게 되시면 문제없이 되신것 입니다.</p><p>이제 실제로 데이터베이스도 데이터가 Insert되었는지 확인해 보도록 하겠습니다.</p><p><img src="009-2.png" alt="image"></p><p>위와같이 데이터베이스에도 정상적으로 Insert가 된것을 확인이 되었습니다.</p><p>다음에는 데이터베이스의 데이터를 이용한 출력에 대해 설명을 해보도록 하겠습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Java/">Java</category>
      
      
      <category domain="https://playneko.github.io/tags/MariaDB/">MariaDB</category>
      
      <category domain="https://playneko.github.io/tags/%ED%81%AC%EB%A1%A4%EB%A7%81/">크롤링</category>
      
      <category domain="https://playneko.github.io/tags/Java/">Java</category>
      
      <category domain="https://playneko.github.io/tags/OpenJDK/">OpenJDK</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9E%90%EB%B0%94/">자바</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%B4%EB%AF%B8%EC%A7%80/">이미지</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%94%A9/">코딩</category>
      
      <category domain="https://playneko.github.io/tags/%ED%83%9C%EA%B7%B8/">태그</category>
      
      <category domain="https://playneko.github.io/tags/connection/">connection</category>
      
      <category domain="https://playneko.github.io/tags/insert/">insert</category>
      
      <category domain="https://playneko.github.io/tags/select/">select</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A7%88%EB%A6%AC%EC%95%84DB/">마리아DB</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%ED%88%B0/">웹툰</category>
      
      <category domain="https://playneko.github.io/tags/crawling/">crawling</category>
      
      <category domain="https://playneko.github.io/tags/%ED%81%AC%EB%A1%AC/">크롬</category>
      
      <category domain="https://playneko.github.io/tags/jdk/">jdk</category>
      
      <category domain="https://playneko.github.io/tags/library/">library</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC/">라이브러리</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4/">이클립스</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%98%EC%86%94/">콘솔</category>
      
      <category domain="https://playneko.github.io/tags/%ED%81%B4%EB%9E%98%EC%8A%A4/">클래스</category>
      
      <category domain="https://playneko.github.io/tags/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/">프로젝트</category>
      
      <category domain="https://playneko.github.io/tags/%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98/">어플리케이션</category>
      
      <category domain="https://playneko.github.io/tags/JSOUP/">JSOUP</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B2%80%EC%83%89%EC%B0%BD/">검색창</category>
      
      <category domain="https://playneko.github.io/tags/%EB%84%A4%EC%9D%B4%EB%B2%84/">네이버</category>
      
      <category domain="https://playneko.github.io/tags/%EC%82%AC%EC%9D%B4%ED%8A%B8/">사이트</category>
      
      <category domain="https://playneko.github.io/tags/DB%ED%85%8C%EC%9D%B4%EB%B8%94/">DB테이블</category>
      
      <category domain="https://playneko.github.io/tags/NAVER-%EC%9B%B9%ED%88%B0/">NAVER 웹툰</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B0%9C%EB%B0%9C%EC%9E%90%ED%88%B4/">개발자툴</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B4%80%EB%A6%AC%ED%88%B4/">관리툴</category>
      
      
      <comments>https://playneko.github.io/2020/07/13/java/java-010/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA에서 JSOUP을 이용한 사이트 크롤링 처리</title>
      <link>https://playneko.github.io/2020/07/10/java/java-009/</link>
      <guid>https://playneko.github.io/2020/07/10/java/java-009/</guid>
      <pubDate>Thu, 09 Jul 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;JAVA에서 JSOUP을 이용한 사이트 크롤링 처리&lt;br&gt;이번에 소개할 내용은 JAVA에서 JSOUP을 이용한 사이트 크롤링을 해보도록 하겠습니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="JAVA에서-JSOUP을-이용한-사이트-크롤링-처리"><a href="#JAVA에서-JSOUP을-이용한-사이트-크롤링-처리" class="headerlink" title="JAVA에서 JSOUP을 이용한 사이트 크롤링 처리"></a>JAVA에서 JSOUP을 이용한 사이트 크롤링 처리</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 JAVA에서 JSOUP을 이용한 사이트 크롤링을 해보도록 하겠습니다.</p><p>크롤링이란 사이트에서 원하는 부부분을 추출해서 여러 형태로 데이터를 가공하는 방식 입니다.</p><p>우선 어떻게 사용하는지 해보도록 하겠습니다.</p><p>이클립스를 실행을 하시고 프로젝트를 하나 만들도록 하겠습니다.</p><p>이클립스가 아직 설치가 되지 않으셨으면</p><p>JAVA 프로그램 개발을 위한 이클립스 환경 구축을 참고해 주시기 바랍니다.</p><p><img src="001-4.png" alt="image"></p><p>이클립스를 실행 하신후 프로젝트를 추가를 하도록 하겠습니다.</p><p>아직 JDK를 설치하지 않으셨으면 라즈베리파이 또는 리눅스에서 OpenJDK 설치하기를 해주시기 바랍니다.</p><p><img src="002-4.png" alt="image"></p><p>신규로 프로젝트를 선택해 주세요.</p><p><img src="003-3.png" alt="image"></p><p>자바 프로젝트를 선택하시기 바랍니다.</p><p><img src="004-4.png" alt="image"></p><p>프로젝트명을 crawling로 하시고 Finish를 선택해 주세요.</p><p><img src="005-4.png" alt="image"></p><p>프로젝트가 생성되셨으면 JSOUP을 사용하기 위한 라이브러리를 추가를 하셔야만 합니다.</p><p>아래의 사이트에서 JSOUP 라이브러리를 다운로드 해주시기 바랍니다.</p><p><a href="https://jsoup.org/download">https://jsoup.org/download</a></p><p><img src="006-3.png" alt="image"></p><p>jsoup-1.13.1.jar core library를 선택하시어 다운로드 해주시기 바랍니다.</p><p><img src="007-2.png" alt="image"></p><p>다운로드하신 라이브러리를 이클립스의 프로젝트에 추가를 해주시기 바랍니다.</p><p><img src="008-2.png" alt="image"></p><p>이클립스에 추가한 라이브러리를 빌드패스에 등록을 해주시기 바랍니다.</p><p><img src="009-1.png" alt="image"></p><p>위와같이 JSOUP를 빌드패스에 등록하시면 본격적으로 JAVA에서 JSOUP을 사용하실수 있게 됩니다.</p><p>그럼 클래스 파일을 하나 추가를 하도록 하겠습니다.</p><p><img src="010-1.png" alt="image"></p><p><img src="011-1.png" alt="image"></p><p>클래스명은 test를 적어주시고 public static void main(String[] args)에 체크를 해주시기 바랍니다.</p><p><img src="012-1.png" alt="image"></p><p>그럼 네이버의 검색창의 이미지를 가져오는것을 해보도록 하겠습니다.</p><p><img src="013-1.png" alt="image"></p><p><img src="014-1.png" alt="image"></p><p>아래와 같이 코딩을 해주시기 바랍니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> crawling;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.jsoup.Connection;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.select.Elements;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Document doc = <span class="keyword">null</span>;</span><br><span class="line">Elements elem = <span class="keyword">new</span> Elements();</span><br><span class="line">String URL = <span class="string">&quot;https://www.naver.com/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Connection connection = Jsoup.connect(URL)</span><br><span class="line">.userAgent(<span class="string">&quot;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36&quot;</span>)</span><br><span class="line">.header(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;text/html&quot;</span>)</span><br><span class="line">                .header(<span class="string">&quot;Accept-Encoding&quot;</span>, <span class="string">&quot;gzip,deflate&quot;</span>)</span><br><span class="line">                .header(<span class="string">&quot;Accept-Language&quot;</span>, <span class="string">&quot;it-IT,en;q=0.8,en-US;q=0.6,de;q=0.4,it;q=0.2,es;q=0.2&quot;</span>)</span><br><span class="line">                .header(<span class="string">&quot;Connection&quot;</span>, <span class="string">&quot;keep-alive&quot;</span>)</span><br><span class="line">                .ignoreContentType(<span class="keyword">true</span>)</span><br><span class="line">                .timeout(<span class="number">30000</span>);</span><br><span class="line">doc = connection.get();</span><br><span class="line">      # .special_img_fold는 위의 개발툴에 나오는 클래스명을 입력해 주시기 바랍니다.</span><br><span class="line">elem = doc.select(<span class="string">&quot;.special_img_fold&quot;</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(elem.attr(<span class="string">&quot;src&quot;</span>));</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="015-1.png" alt="image"></p><p>코딩을 하셨으면 실행을 해서 확인을 해보도록 하겠습니다.</p><p><img src="016-1.png" alt="image"></p><p>자바 어플리케이션으로 실행을 해주시기 바랍니다.</p><p><img src="017-1.png" alt="image"></p><p>실행을 하면 콘솔창에 지정한 태그의 이미지 주소가 추출 된것을 확인 하실수 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Java/">Java</category>
      
      
      <category domain="https://playneko.github.io/tags/%ED%81%AC%EB%A1%A4%EB%A7%81/">크롤링</category>
      
      <category domain="https://playneko.github.io/tags/Java/">Java</category>
      
      <category domain="https://playneko.github.io/tags/OpenJDK/">OpenJDK</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9E%90%EB%B0%94/">자바</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%B4%EB%AF%B8%EC%A7%80/">이미지</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%94%A9/">코딩</category>
      
      <category domain="https://playneko.github.io/tags/%ED%83%9C%EA%B7%B8/">태그</category>
      
      <category domain="https://playneko.github.io/tags/crawling/">crawling</category>
      
      <category domain="https://playneko.github.io/tags/jdk/">jdk</category>
      
      <category domain="https://playneko.github.io/tags/library/">library</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC/">라이브러리</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4/">이클립스</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%98%EC%86%94/">콘솔</category>
      
      <category domain="https://playneko.github.io/tags/%ED%81%B4%EB%9E%98%EC%8A%A4/">클래스</category>
      
      <category domain="https://playneko.github.io/tags/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/">프로젝트</category>
      
      <category domain="https://playneko.github.io/tags/%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98/">어플리케이션</category>
      
      <category domain="https://playneko.github.io/tags/JSOUP/">JSOUP</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B2%80%EC%83%89%EC%B0%BD/">검색창</category>
      
      <category domain="https://playneko.github.io/tags/%EB%84%A4%EC%9D%B4%EB%B2%84/">네이버</category>
      
      <category domain="https://playneko.github.io/tags/%EC%82%AC%EC%9D%B4%ED%8A%B8/">사이트</category>
      
      
      <comments>https://playneko.github.io/2020/07/10/java/java-009/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 웹서버에서 jQuery ScrollToTop 사용하기</title>
      <link>https://playneko.github.io/2020/07/08/rasberry-pi/rasberry-pi-038/</link>
      <guid>https://playneko.github.io/2020/07/08/rasberry-pi/rasberry-pi-038/</guid>
      <pubDate>Tue, 07 Jul 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 웹서버에서 jQuery ScrollToTop 사용하기&lt;br&gt;이번에 소개할 내용은 jQuery를 이용해서 만들어진 사이트를 보시다 보시면&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-웹서버에서-jQuery-ScrollToTop-사용하기"><a href="#라즈베리파이-웹서버에서-jQuery-ScrollToTop-사용하기" class="headerlink" title="라즈베리파이 웹서버에서 jQuery ScrollToTop 사용하기"></a>라즈베리파이 웹서버에서 jQuery ScrollToTop 사용하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 jQuery를 이용해서 만들어진 사이트를 보시다 보시면</p><p>스크롤을 한참 내리고서 왼쪽 또는 오른쪽에 Top으로 바로 올라갈수있는 버튼을 보신적이</p><p>있으실 겁니다. 어떻게 버튼을 눌러서 Top으로 한번에 다시 돌아가는 지에 대해서</p><p>jQuery의 API함수를 이용해 간단하게 구현을 해보도록 하겠습니다.</p><h5 id="scrollTop-이란"><a href="#scrollTop-이란" class="headerlink" title=".scrollTop()이란"></a>.scrollTop()이란</h5><p>일치하는 요소 집합에서 첫 번째 요소에 대한 스크롤 막대의 현재 세로 위치를 가져 오거나</p><p>일치하는 모든 요소에 대한 스크롤 막대의 세로 위치를 설정하십시오.</p><p>그럼 어떻게 하는지 해보도록 하겠습니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)를 실행해 주시기 바랍니다.</p><p>실행을 하셨으면 파일명을 jquery_scrollTop.html로 추가를 해주시기 바랍니다.</p><p><img src="001-3.png" alt="image"></p><p>아래의 코드를 작성해 주시기 바랍니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>AkibaTV<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="built_in">document</span>).ready( <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#button&#x27;</span>).click( <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;html, body&#x27;</span>).animate(&#123;</span></span><br><span class="line">                scrollTop: 0</span><br><span class="line">            &#125;, 600);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    header &#123;</span><br><span class="line">        height: 1000px;</span><br><span class="line">    &#125;</span><br><span class="line">    article &#123;</span><br><span class="line">        height: 2000px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span>Header<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">article</span>&gt;</span>Article<span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">        Footer<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;버튼&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>헤더를 1000px만큼 간격을 주시고 본문을 2000px만큼 간격을 줍니다.</p><p>마지막에 하단에서 버튼을 누르면 헤더가 있는 부분까지 부드럽게 스크롤이</p><p>올라가는 코딩을 해보았습니다.</p><p>실제로 제대로 동작을 하는지 확인을 해보도록 하겠습니다.</p><p>작성을 하신 소스파일을 라즈베리파이 웹서버 또는 개인서버, 호스팅서버에 업로드를 해주시기 바랍니다.</p><p>저는 라즈베리파이에 웹서버를 구축을 해두었기때문에 라즈베리파이 웹서버를 이용하도록 하겠습니다.</p><p><img src="002-3.png" alt="image"></p><p>서버에 파일이 올라간것을 확인이 되셨으면 웹브라우저를 실행해 주세요.</p><p>웹브라우저의 URL에 http://각웹서버URL/jquery_scrollTop.html 를 실행해 주세요.</p><p><img src="003-2.png" alt="image"></p><h5 id="헤더부분"><a href="#헤더부분" class="headerlink" title="헤더부분"></a>헤더부분</h5><p><img src="004-3.png" alt="image"></p><h5 id="본문부분"><a href="#본문부분" class="headerlink" title="본문부분"></a>본문부분</h5><p><img src="005-3.png" alt="image"></p><h5 id="하단부분과-버튼"><a href="#하단부분과-버튼" class="headerlink" title="하단부분과 버튼"></a>하단부분과 버튼</h5><p>버튼을 클릭하시면 자연스럽게 상단으로 스크롤되며 올라가는걸 확인 하실수 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/JavaScript/">JavaScript</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/linux/">linux</category>
      
      <category domain="https://playneko.github.io/tags/nginx/">nginx</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EC%84%9C%EB%B2%84/">웹서버</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/apache/">apache</category>
      
      <category domain="https://playneko.github.io/tags/chown/">chown</category>
      
      <category domain="https://playneko.github.io/tags/NPM/">NPM</category>
      
      <category domain="https://playneko.github.io/tags/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/jQuery/">jQuery</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%94%A9/">코딩</category>
      
      <category domain="https://playneko.github.io/tags/localhost/">localhost</category>
      
      <category domain="https://playneko.github.io/tags/www/">www</category>
      
      <category domain="https://playneko.github.io/tags/API/">API</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8A%A4%ED%81%AC%EB%A1%A4/">스크롤</category>
      
      <category domain="https://playneko.github.io/tags/scrollTop/">scrollTop</category>
      
      <category domain="https://playneko.github.io/tags/ScrollToTop/">ScrollToTop</category>
      
      
      <comments>https://playneko.github.io/2020/07/08/rasberry-pi/rasberry-pi-038/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>PHP에서 PHPExcel를 이용한 엑셀 다운로드 하기</title>
      <link>https://playneko.github.io/2020/07/07/php/php-005/</link>
      <guid>https://playneko.github.io/2020/07/07/php/php-005/</guid>
      <pubDate>Mon, 06 Jul 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;PHP에서 PHPExcel를 이용한 엑셀 다운로드 하기&lt;br&gt;이번에 소개할 내용은 PHP에서 디비의 데이터등을 가공후…&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="PHP에서-PHPExcel를-이용한-엑셀-다운로드-하기"><a href="#PHP에서-PHPExcel를-이용한-엑셀-다운로드-하기" class="headerlink" title="PHP에서 PHPExcel를 이용한 엑셀 다운로드 하기"></a>PHP에서 PHPExcel를 이용한 엑셀 다운로드 하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 PHP에서 디비의 데이터등을 가공후</p><p>엑셀파일로 다운로드 하는 방법을 소개해 드리도록 하겠습니다.</p><p>데이터를 엑셀파일로 만들기 위해서 오픈소스인 PHPExcel를 이용합니다.</p><p>PHPExcel를 이용하여 PHPExcel에서 제공해주는 함수를 이용 하시면</p><p>간단하고 쉽게 엑셀파일로 가공후 다운로드를 하실수가 있습니다.</p><p>그럼 코딩을 하기에 앞서 깃허브에서 PHPExcel를 다운로드 하겠습니다.</p><p><a href="https://github.com/PHPOffice/PHPExcel">https://github.com/PHPOffice/PHPExcel</a></p><p><img src="https://playneko.com/wp-content/uploads/2020/07/001-1.png" alt="image"></p><p>다운로드 받으신 PHPExcel를 적당한곳에 압축을 푸시고</p><p>Visual Studio Code(비주얼 스튜디오 코드)로 실행하신후 php_excel.php로 파일을 추가해 주시기 바랍니다.</p><p><strong>(php_excel.php파일은 PHPExcel를 압축을 푸신곳에 같이 놔두시기 바랍니다.)</strong></p><p><img src="https://playneko.com/wp-content/uploads/2020/07/002-2.png" alt="image"></p><p>DB에 등록한 데이터를 엑셀로 출력을 위해서 디비에 기본 데이터를 추가를 해주도록 하겠습니다.</p><p>PHP에서 DB를 사용하는 방법에 대해서는 아래의 내용을 참고해 주시기 바랍니다.</p><p><a href="https://playneko.github.io/2020/06/26/rasberry-pi/rasberry-pi-031/">라즈베리파이 또는 리눅스 PHP에서 MariaDB 사용하기</a></p><p><img src="https://playneko.com/wp-content/uploads/2020/07/004-2.png" alt="image"></p><p>DB에는 2건의 데이터를 추가를 해두었습니다.</p><p>엑셀을 다운로드를 위해서 아래와 같이 코딩을 해주시기 바랍니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;./PHPExcel-1.8/Classes/PHPExcel.php&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">    <span class="variable">$username</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line">    <span class="variable">$password</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line">    <span class="variable">$dbname</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 데이터베이스 생성</span></span><br><span class="line">    <span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 데이터베이스 접속</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;connect_error) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;데이터베이스 접속 실패 : &quot;</span> . <span class="variable">$conn</span>-&gt;connect_error);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$phpExcel</span> = <span class="keyword">new</span> PHPExcel();</span><br><span class="line"></span><br><span class="line">    <span class="variable">$phpExcel</span>-&gt;setActiveSheetIndex(<span class="number">0</span>);</span><br><span class="line">    <span class="variable">$phpExcel</span>-&gt;getActiveSheet()</span><br><span class="line">    -&gt;setCellValue(<span class="string">&quot;A1&quot;</span>, <span class="string">&quot;NO.&quot;</span>)</span><br><span class="line">    -&gt;setCellValue(<span class="string">&quot;B1&quot;</span>, <span class="string">&quot;이름&quot;</span>)</span><br><span class="line">    -&gt;setCellValue(<span class="string">&quot;C1&quot;</span>, <span class="string">&quot;나이&quot;</span>)</span><br><span class="line">    -&gt;setCellValue(<span class="string">&quot;D1&quot;</span>, <span class="string">&quot;생년월일&quot;</span>)</span><br><span class="line">    -&gt;setCellValue(<span class="string">&quot;E1&quot;</span>, <span class="string">&quot;사이트URL&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot; SELECT * FROM test2 &quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="variable">$conn</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span>-&gt;num_rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable">$no</span> = <span class="number">1</span>;</span><br><span class="line">        <span class="variable">$line</span> = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="variable">$row</span> = <span class="variable">$result</span>-&gt;fetch_assoc()) &#123;</span><br><span class="line">            <span class="variable">$phpExcel</span>-&gt;setActiveSheetIndex(<span class="number">0</span>)</span><br><span class="line">            -&gt;setCellValue(<span class="string">&quot;A&quot;</span>.<span class="variable">$line</span>, <span class="variable">$no</span>)</span><br><span class="line">            -&gt;setCellValue(<span class="string">&quot;B&quot;</span>.<span class="variable">$line</span>, <span class="variable">$row</span>[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line">            -&gt;setCellValue(<span class="string">&quot;C&quot;</span>.<span class="variable">$line</span>, <span class="variable">$row</span>[<span class="string">&#x27;age&#x27;</span>])</span><br><span class="line">            -&gt;setCellValue(<span class="string">&quot;D&quot;</span>.<span class="variable">$line</span>, <span class="variable">$row</span>[<span class="string">&#x27;birthday&#x27;</span>])</span><br><span class="line">            -&gt;setCellValue(<span class="string">&quot;E&quot;</span>.<span class="variable">$line</span>, <span class="variable">$row</span>[<span class="string">&#x27;site_url&#x27;</span>]);</span><br><span class="line">            <span class="variable">$no</span>++;</span><br><span class="line">            <span class="variable">$line</span>++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    header(<span class="string">&#x27;Content-Type: application/vnd.ms-excel&#x27;</span>);</span><br><span class="line">    header(<span class="string">&#x27;Content-Disposition: attachment;filename=&quot;AkibaTV.xls&quot;&#x27;</span>);</span><br><span class="line">    header(<span class="string">&#x27;Cache-Control: max-age=0&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$objWriter</span> = PHPExcel_IOFactory::createWriter(<span class="variable">$phpExcel</span>, <span class="string">&#x27;Excel5&#x27;</span>);</span><br><span class="line">    <span class="variable">$objWriter</span>-&gt;save(<span class="string">&#x27;php://output&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$conn</span>-&gt;close();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">Excel Download</span><br></pre></td></tr></table></figure><p><img src="https://playneko.com/wp-content/uploads/2020/07/004-2-1.png" alt="image"></p><p>위와같이 작성을 하셨으면 확인을 해보도록 하겠습니다.</p><p>소스파일을 라즈베리파이의 웹폴더에 올려주시기 바랍니다.</p><p><img src="https://playneko.com/wp-content/uploads/2020/07/005-2.png" alt="image"></p><p>소스를 올려주셨으면 웹브라우저를 실행하시고 서버에 올린 PHP파일로 접속을 해주시기 바랍니다.</p><p>http://라즈베리파이서버 IP/php_excel/php_excel.php</p><p><img src="https://playneko.com/wp-content/uploads/2020/07/006-2.png" alt="image"></p><p>위와같이 엑셀파일이 다운로드 된것을 보실수 있습니다.</p><p>엑셀파일을 열어주셔서 확인을 해보도록 하겠습니다.</p><p><img src="https://playneko.com/wp-content/uploads/2020/07/007-1-1.png" alt="image"></p><p>DB에 등록한 데이터가 엑셀에 정상적으로 출력이 된것을 확인 하실수 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/categories/PHP/Rasberry-Pi/">Rasberry Pi</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/linux/">linux</category>
      
      <category domain="https://playneko.github.io/tags/nginx/">nginx</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EC%84%9C%EB%B2%84/">웹서버</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B9%83%ED%97%88%EB%B8%8C/">깃허브</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/apache/">apache</category>
      
      <category domain="https://playneko.github.io/tags/chown/">chown</category>
      
      <category domain="https://playneko.github.io/tags/MariaDB/">MariaDB</category>
      
      <category domain="https://playneko.github.io/tags/NPM/">NPM</category>
      
      <category domain="https://playneko.github.io/tags/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%94%A9/">코딩</category>
      
      <category domain="https://playneko.github.io/tags/localhost/">localhost</category>
      
      <category domain="https://playneko.github.io/tags/www/">www</category>
      
      <category domain="https://playneko.github.io/tags/UNLNK/">UNLNK</category>
      
      <category domain="https://playneko.github.io/tags/DB/">DB</category>
      
      <category domain="https://playneko.github.io/tags/PHPExcel/">PHPExcel</category>
      
      <category domain="https://playneko.github.io/tags/%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C/">다운로드</category>
      
      <category domain="https://playneko.github.io/tags/%EC%95%95%EC%B6%95/">압축</category>
      
      <category domain="https://playneko.github.io/tags/%EC%97%91%EC%85%80%ED%8C%8C%EC%9D%BC/">엑셀파일</category>
      
      
      <comments>https://playneko.github.io/2020/07/07/php/php-005/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>PHP에서 UNLNK 함수를 이용한 일정기간 지난 파일 삭제하기</title>
      <link>https://playneko.github.io/2020/07/06/php/php-004/</link>
      <guid>https://playneko.github.io/2020/07/06/php/php-004/</guid>
      <pubDate>Sun, 05 Jul 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;PHP에서 UNLNK 함수를 이용한 일정기간 지난 파일 삭제하기&lt;br&gt;이번에 소개할 내용은 PHP에서 UNLNK 함수를 이용한 일정기간 지난 파일 삭제하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="PHP에서-UNLNK-함수를-이용한-일정기간-지난-파일-삭제하기"><a href="#PHP에서-UNLNK-함수를-이용한-일정기간-지난-파일-삭제하기" class="headerlink" title="PHP에서 UNLNK 함수를 이용한 일정기간 지난 파일 삭제하기"></a>PHP에서 UNLNK 함수를 이용한 일정기간 지난 파일 삭제하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 PHP에서 UNLNK 함수를 이용한 일정기간 지난 파일 삭제하기 입니다.</p><p>웹서버를 운영을 하시다 보시면 불필요한 로그파일이나 이미지파일등</p><p>오래되고 불필요한 데이터가 많이 쌓이게 됩니다.</p><p>불필요한 데이터가 많이 쌓일수록 서버의 성능도 저하될뿐 아니라 디스크의 용량 문제도</p><p>발생하기때문에 유지 관리비도 점점 상승하는 문제가 발생하게 됩니다.</p><p>그래서 PHP를 이용한 간단하게 해당하는 폴더안의 일정기간이 지난 데이터 파일을</p><p>삭제하는 방법을 알아보도록 하겠습니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)를 실행하시고 파일명은 php_old_file_delete.php로 만드시고</p><p>아래와 같이 코딩을 해주시기 바랍니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$fileName</span> = <span class="string">&quot;./test.txt&quot;</span>;</span><br><span class="line">    <span class="variable">$mtime</span> = filemtime(<span class="variable">$fileName</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 최종 수정일이 30일 이상인 파일만 삭제</span></span><br><span class="line">    <span class="keyword">if</span> (file_exists(<span class="variable">$fileName</span>) &amp;&amp; (time() - <span class="variable">$mtime</span> &gt;= <span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">30</span>)) &#123;</span><br><span class="line">        <span class="comment">// 삭제 처리</span></span><br><span class="line">        unlink(<span class="variable">$fileName</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://playneko.com/wp-content/uploads/2020/07/001-2.png" alt="image"></p><p>이제 정상적으로 삭제가 되는지 확인을 위해서</p><p>작성하신 소스파일을 라즈베리파이의 웹폴더에 올려주시기 바랍니다.</p><p>웹폴더에 테스트용 test.txt파일도 추가를 해주시기 바랍니다.</p><p><img src="https://playneko.com/wp-content/uploads/2020/07/002-1.png" alt="image"></p><p>test.txt파일은 새로 추가한 파일로서 현재의 날짜와 시간이 되겠습니다.</p><p>파일 삭제 PHP를 실행해도 삭제가 되지 않겠습니다.</p><p>웹브라우저를 실행하시고 http://라즈베리파이서버 IP/php_old_file_delete.php</p><p>위의 주소를 실행해 주시기 바랍니다.</p><p><img src="https://playneko.com/wp-content/uploads/2020/07/003-1.png" alt="image"></p><p>실행후 다시 test.txt파일을 확인해 보시면</p><p><img src="https://playneko.com/wp-content/uploads/2020/07/004-1.png" alt="image"></p><p>여전히 파일이 남아있는것을 확인 하실수 있습니다.</p><p>그러면 test.txt파일의 날짜와 시간이 30일 이전으로 돌려보도록 하겠습니다.</p><p>라즈베리파이에서 날짜와 시간을 변경을 하실때는 Touch명령어를 이용하게 됩니다.</p><p>라즈베리파이 또는 리눅스에서 TOUCH를 이용해 날짜 변경하기를 참고해 주시기 바랍니다.</p><p>아래의 명령어를 입력해서 날짜와 시간을 변경해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ touch -t 202005231530 ./test.txt</span><br></pre></td></tr></table></figure><p><img src="https://playneko.com/wp-content/uploads/2020/07/005-1.png" alt="image"></p><p><img src="https://playneko.com/wp-content/uploads/2020/07/006-1.png" alt="image"></p><p>test.txt파일의 날짜와 시간이 변경된것을 확인하실수 있습니다.</p><p>그러면 다시 웹브라우저를 실행하시고 http://라즈베리파이서버 IP/php_old_file_delete.php</p><p>위의 주소를 실행해 주시기 바랍니다.</p><p><img src="https://playneko.com/wp-content/uploads/2020/07/007-1.png" alt="image"></p><p><img src="https://playneko.com/wp-content/uploads/2020/07/008-1.png" alt="image"></p><p>위와같이 파일이 삭제가 된것을 확인하실수 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/categories/PHP/Rasberry-Pi/">Rasberry Pi</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/linux/">linux</category>
      
      <category domain="https://playneko.github.io/tags/nginx/">nginx</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EC%84%9C%EB%B2%84/">웹서버</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/apache/">apache</category>
      
      <category domain="https://playneko.github.io/tags/chown/">chown</category>
      
      <category domain="https://playneko.github.io/tags/NPM/">NPM</category>
      
      <category domain="https://playneko.github.io/tags/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%94%A9/">코딩</category>
      
      <category domain="https://playneko.github.io/tags/localhost/">localhost</category>
      
      <category domain="https://playneko.github.io/tags/www/">www</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%B4%EB%AF%B8%EC%A7%80%ED%8C%8C%EC%9D%BC/">이미지파일</category>
      
      <category domain="https://playneko.github.io/tags/UNLNK/">UNLNK</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A1%9C%EA%B7%B8%ED%8C%8C%EC%9D%BC/">로그파일</category>
      
      
      <comments>https://playneko.github.io/2020/07/06/php/php-004/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에서 mIRC 채팅서버 구축하기</title>
      <link>https://playneko.github.io/2020/07/03/rasberry-pi/rasberry-pi-037/</link>
      <guid>https://playneko.github.io/2020/07/03/rasberry-pi/rasberry-pi-037/</guid>
      <pubDate>Thu, 02 Jul 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에서 mIRC 채팅서버 구축하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이에서 mIRC 채팅서버 구축하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에서-mIRC-채팅서버-구축하기"><a href="#라즈베리파이에서-mIRC-채팅서버-구축하기" class="headerlink" title="라즈베리파이에서 mIRC 채팅서버 구축하기"></a>라즈베리파이에서 mIRC 채팅서버 구축하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라즈베리파이에서 mIRC 채팅서버 구축하기 입니다.</p><p>mIRC라면 생소한 분들도 많으실거라 생각 됩니다만 2010년대에 들어오기 전까지만해도</p><p>상당한 인기로 많은 사람들이 이용을 해온 채팅서버 입니다.</p><p>지금은 게임회사에서 게임내 채팅서버로 mIRC 채팅서버를 많이 활용하는걸로 알고 있습니다.</p><p>mIRC를 이용해서 불법 프로그램이나 여러가지 영상들을 공유하는 기능으로도 많이 사용했습니다.</p><p>그래서 라즈베리파이로 mIRC 채팅서버 구축하는 방법을 알아보도록 하겠습니다.</p><p>우선 라즈베리파이를 VNC로 접속후 터미널을 실행을 해주시기 바랍니다.</p><p><img src="001.png" alt="image"></p><p>irc프로그램을 설치를 위해서 아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install ircd-hybrid</span><br></pre></td></tr></table></figure><p><img src="002.png" alt="image"></p><p>위와같이 [Y/n]을 입력창이 나오게 되면 Y를 입력해 주세요.</p><p><img src="003.png" alt="image"></p><p>설치가 완료 되었으면 아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/ircd-hybrid/ircd.conf</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ircd.<span class="keyword">conf</span>를 <span class="keyword">vi</span>에디터로 여시고 한참 내리시다 보시면</span><br><span class="line"># 아래의 부분을 라즈베리파이의 IP주소로 변경해 주시기 바랍니다.</span><br><span class="line">host = &quot;127.0.0.1&quot;; # change this!</span><br></pre></td></tr></table></figure><p><img src="004.png" alt="image"></p><p>IP주소를 변경을 하셨으면 :wq를 입력해서 vi에디터를 저장후 종료를 하시기 바랍니다.</p><p>그리고 irc서버를 재기동하여 설정 정보를 적용을 해주어야만 합니다.</p><p>아래의 명령어를 입력해서 irc서버를 재기동 합니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># irc서버 중지</span></span><br><span class="line">$ sudo /etc/init.d/ircd-hybrid stop</span><br><span class="line"><span class="comment"># irc서버 시작</span></span><br><span class="line">$ sudo /etc/init.d/ircd-hybrid start</span><br></pre></td></tr></table></figure><p><img src="005.png" alt="image"></p><p>irc서버 재기동까지 완료를 하셨으면 mIRC프로그램을 받아서 설치를 해주시기 바랍니다.</p><p>mIRC프로그램은 공식 사이트에서 다운로드 받으실수가 있습니다.</p><p><a href="https://www.mirc.com/">https://www.mirc.com/</a></p><p><img src="007.png" alt="image"></p><p><img src="006.png" alt="image"></p><p><img src="008.png" alt="image"></p><p>다운로드하신 mIRC프로그램을 실행하시면 설치화면이 나오게 되며</p><p>설치를 해주시기 바랍니다.</p><p><img src="009.png" alt="image"></p><p><img src="010.png" alt="image"></p><p><img src="011.png" alt="image"></p><p><img src="012.png" alt="image"></p><p><img src="013.png" alt="image"></p><p><img src="014.png" alt="image"></p><p>처음 실행하시면 서버에 접속후 사용할 닉네임과 기본 정보를 입력하시고 Servers메뉴로 이동을 해주세요.</p><p><img src="015.png" alt="image"></p><p>Add버튼을 눌러서 서버를 추가 합니다.</p><p><img src="016.png" alt="image"></p><p>위와같이 자신의 라즈베리파이 서버에 맞게 입력을 해주시고 OK버튼을 눌러주세요.</p><p><img src="017.png" alt="image"></p><p>Select버튼을 누르시면 Connect메뉴로 돌아오게 됩니다.</p><p><img src="018-1.png" alt="image"></p><p>Connect버튼을 눌러주시기 바랍니다.</p><p><img src="019-3.png" alt="image"></p><p>접속을 하시면 라즈베리파이로 구축한 irc서버로 연결이 된것을 확인하실수 있습니다.</p><p>위와같이 나오게 되면 하단의 입력창에 /join #채널명을 입력해서 채팅을 만드시거나 접속 하실수 있습니다.</p><p><img src="020.png" alt="image"></p><p>위와같이 채널에 접속이 되는것이 확인 되었습니다.</p><p>이렇게 해서 라즈베리파이에서 mIRC 채팅서버 구축하기를 해보았습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/sudo/">sudo</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/IP%EC%A3%BC%EC%86%8C/">IP주소</category>
      
      <category domain="https://playneko.github.io/tags/irc%EC%84%9C%EB%B2%84/">irc서버</category>
      
      <category domain="https://playneko.github.io/tags/mIRC/">mIRC</category>
      
      <category domain="https://playneko.github.io/tags/vi%EC%97%90%EB%94%94%ED%84%B0/">vi에디터</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B1%84%ED%8C%85%EC%84%9C%EB%B2%84/">채팅서버</category>
      
      
      <comments>https://playneko.github.io/2020/07/03/rasberry-pi/rasberry-pi-037/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 4B에 WINDOWS 10 ARM64 설치하기</title>
      <link>https://playneko.github.io/2020/07/02/rasberry-pi/rasberry-pi-036/</link>
      <guid>https://playneko.github.io/2020/07/02/rasberry-pi/rasberry-pi-036/</guid>
      <pubDate>Wed, 01 Jul 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 4B에 WINDOWS 10 ARM64 설치하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이 4B에 WINDOWS 10 ARM64 설치하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-4B에-WINDOWS-10-ARM64-설치하기"><a href="#라즈베리파이-4B에-WINDOWS-10-ARM64-설치하기" class="headerlink" title="라즈베리파이 4B에 WINDOWS 10 ARM64 설치하기"></a>라즈베리파이 4B에 WINDOWS 10 ARM64 설치하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라즈베리파이 4B에 WINDOWS 10 ARM64 설치하기 입니다.</p><p>아직 ARM계열에 정식으로 설치파일이 아니기에</p><p>여러가지 문제점이 많이 발생하고 있으며 설치과정도 어렵기때문에</p><p>여유가 있으신 분들만 도전하시길 추천 드립니다.</p><h5 id="주의-사항"><a href="#주의-사항" class="headerlink" title="주의 사항"></a>주의 사항</h5><blockquote><p>전면 (USB3) 포트는 여전히 지원되지 않으므로 이 안내서에서는 Type-C 플러그를 통해 사용 할수있는<br>“레거시” DWC2 USB 컨트롤러용 MCCI 드라이버를 사용합니다.<br>DWC2 드라이버의 한계로 인해 Windows 10은 1GB의 RAM 만 사용할 수 있습니다.</p></blockquote><h5 id="준비물"><a href="#준비물" class="headerlink" title="준비물"></a>준비물</h5><blockquote><ul><li>최근 Windows 10 빌드가 설치된 PC</li><li>마이크로 SD 카드 리더기</li><li>GPIO 핀을 통해 Pi에 전원을 공급할 수 있는 경우 Type-C 마이크로 USB 어댑터 또는<br>Type-C 마이크로 USB 어댑터를 사용하여 마이크로 USB 허브에 전원을 공급할수있는 경우<br>Powered type-c USB 허브 또는 Type-C OTG 케이블</li><li>USB 마우스 및 키보드</li><li>16GB 이상의 마이크로 SD 카드 – 클래스 A1 또는 A2</li><li>라즈베리파이 4B</li><li>마이크로 HDMI 케이블</li><li>전원 공급 장치 (5V 3A +)</li></ul></blockquote><h5 id="다운로드"><a href="#다운로드" class="headerlink" title="다운로드"></a>다운로드</h5><p><a href="https://uup.rg-adguard.net/">https://uup.rg-adguard.net/</a>에서 arm64 용 Windows 10 설치 파일을 다운로드 하십시오.</p><p><img src="001-23.png" alt="image"></p><p>OneClick으로 ISO 컴파일러를 다운로드하십시오</p><p>다운로드 한 CMD 파일을 실행하십시오 (ISO.cmd 파일 작성 실행)</p><p>또는 aria2를 사용하여 <a href="https://uupdump.ml/">https://uupdump.ml/</a>를 통해 다운로드 하고 aria2_download_windows.cmd를 추출한 후 변환하십시오.</p><p>이러한 서비스 중 하나를 사용하면 ISO 파일을 생성하는 데 도움이되지만 ISO의 소스 폴더에서 install.wim 파일만 필요합니다.</p><p>문제없이 OOBE를 통과하는 모든 빌드는 괜찮습니다.</p><p><img src="002-21.png" alt="image"></p><p><img src="003-24.png" alt="image"></p><p>CMD파일을 실행을 하시면 위와같이 나오게 되면 실행을 눌러주시기 바랍니다.</p><p><img src="004-23.png" alt="image"></p><p>CMD창이 열리며 다운로드 준비를 하게 됩니다.</p><p><img src="005-18.png" alt="image"></p><p>위와같이 같이 나오게 되시면 그냥 엔터를 치면 됩니다.</p><p><img src="006-18.png" alt="image"></p><p><img src="007-15.png" alt="image"></p><p>그러면 위와같잉 무언가 열심히 다운을 받게 됩니다.</p><p>다 받아질때까지 기다려주시면 되겠습니다.</p><p><img src="009-10.png" alt="image"></p><p>다운로드가 완료되면 아무키나 누르시면 종료가 됩니다.</p><p>위의 과정이 끝나시면 WOR (windows on raspberry)를다운로드 해주세요.</p><p>WOR 사이트 <a href="https://worproject.ml/downloads">https://worproject.ml/downloads</a> 에서 (2.0.0-alpha.3)을 다운로드 해주시기 바랍니다.</p><p><img src="008-13.png" alt="image"></p><p><img src="010-10.png" alt="image"></p><h5 id="설치하기"><a href="#설치하기" class="headerlink" title="설치하기"></a>설치하기</h5><p>위의 사항이 모두 완료 되셨으면 다음의 사항을 진행해 주시기 바랍니다.</p><p>다운받으신 WoR을 실행을 해주시기 바랍니다.</p><h5 id="언어선택"><a href="#언어선택" class="headerlink" title="언어선택"></a>언어선택</h5><p><img src="011-9.png" alt="image"></p><p>프로그램을 처음 실행하시면 언어를 설정하실수 있습니다. 언어를 선택후 다음버튼을 눌러주세요.</p><h5 id="장치-선택"><a href="#장치-선택" class="headerlink" title="장치 선택"></a>장치 선택</h5><p><img src="012-8.png" alt="image"></p><p>장치 선택 목록에서 SD 카드를 선택하고 사용할 장치로 Raspberry pi 4를 선택해 주시고 다음을 눌러주세요.</p><h5 id="이미지-선택"><a href="#이미지-선택" class="headerlink" title="이미지 선택"></a>이미지 선택</h5><p><img src="013-9.png" alt="image"></p><p>CMD를 이용해 생성한 Windows ISO 파일을 선택하시고 다음을 눌러주세요.</p><h5 id="드라이버-선택"><a href="#드라이버-선택" class="headerlink" title="드라이버 선택"></a>드라이버 선택</h5><p><img src="014-5.png" alt="image"></p><p>서버에서 사용가능한 드라이버 패키지 사용하기를 선택하신후 다음을 눌러주세요.</p><h5 id="UEFI-Firmware-선택"><a href="#UEFI-Firmware-선택" class="headerlink" title="UEFI Firmware 선택"></a>UEFI Firmware 선택</h5><p><img src="015-4.png" alt="image"></p><p>서버에 저장된 UEFI 펌웨어 파일 사용하기를 선택하시고 다음을 눌러주세요.</p><h5 id="환경-설정-변수"><a href="#환경-설정-변수" class="headerlink" title="환경 설정(변수)"></a>환경 설정(변수)</h5><p><img src="016-6.png" alt="image"></p><p>MBR이 파티션 구성표로 선택되어 있는지 확인하시고 기본설정 그대로 두고 다음을 눌러주세요.</p><h5 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h5><p><img src="017-6.png" alt="image"></p><p>설치정보를 확인하시고 문제가 없을경우 설치버튼을 눌러주시기 바랍니다.</p><p><img src="018-6.png" alt="image"></p><p><img src="019-6.png" alt="image"></p><p><img src="020-6.png" alt="image"></p><p><img src="021-4.png" alt="image"></p><p><img src="022-4.png" alt="image"></p><p><img src="023-3.png" alt="image"></p><p><img src="024-3.png" alt="image"></p><p>설치가 모두 완료 되었습니다. 마침버튼을 누르시고 마이크로 SD 카드를 안전하게 제거하고 Raspberry Pi에 삽입을 해주시기 바랍니다.</p><h5 id="Windows-10-구동"><a href="#Windows-10-구동" class="headerlink" title="Windows 10 구동"></a>Windows 10 구동</h5><p>라즈베리파이에 USB 키보드, 마우스를 연결하시고 전원을 넣고 구동을 합니다.</p><p>여기서 주의점은 USB는 C Type형으로만 전원과 키보드, 마우스를 사용하실수가 있습니다.</p><p>처음 부팅은 마이크로 SD 카드의 속도에 따라 12분에서 2시간 정도가 걸리게 됩니다.</p><p><img src="000.jpg" alt="image"></p><p>라즈베리파이 4B에서 윈도우를 구동시에 발열이 많이 발생을 하기에</p><p>쿨러는 쿨링효과가 좋은것으로 다는것을 추천 드립니다.</p><p><img src="001-8.jpg" alt="image"></p><p>구동을 하게 되면 라즈베리파이 로고가 나오며 구동이 됩니다.</p><p><img src="002-4.jpg" alt="image"></p><p>윈도우 로고가 나오며 서비스를 시작하는중이 뜨게 됩니다.</p><p><img src="003-2.jpg" alt="image"></p><p><img src="004-2.jpg" alt="image"></p><p>여기까지가 20~30분정도 걸리게 됩니다.</p><p>그리고 나서 재부팅이 됩니다.</p><p><img src="005.jpg" alt="image"></p><p>재부팅되며 다시 라즈베리파이 로고가 나오게 되며</p><p><img src="006-1.jpg" alt="image"></p><p>윈도우 로고가 나오며 드디어 초기 설정으로 진입을 하게 됩니다.</p><p><img src="007-1-1536x851.jpg" alt="image"></p><p><img src="008-1.jpg" alt="image"></p><p>지역(한국)을 선택을 하시고 예 버튼을 눌러주세요.</p><p><img src="009-1.jpg" alt="image"></p><p>자판배열을 선택하라고 나오게 됩니다만 기본으로 선택후 예 버튼을 눌러주세요.</p><p><img src="010.jpg" alt="image"></p><p>레이아웃을 추가할수 있습니다만 저는 건너뛰기를 했습니다.</p><p><img src="011.jpg" alt="image"></p><p>네트워크 연결입니다만 랜케이블을 연결을 해도 네트워크에 연결이 되지 않기때문에</p><p>인터넷이 없음을 눌러서 건너뛰시기 바랍니다.</p><p><img src="012.jpg" alt="image"></p><p>인터넷이 안되기에 제한된 설치로 계속을 눌러주세요.</p><p><img src="013.jpg" alt="image"></p><p>문제의 구간입니다만 여기서 다시시도를 눌러서 되시는 분들이 있거나 저처럼 몇번을 시도를 해도</p><p>안되는 경우가 발생을 하게 됩니다.</p><p>저는 더 안정된 버전이 나올때까지 보류를 하도록 하겠습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/HDMI/">HDMI</category>
      
      <category domain="https://playneko.github.io/tags/ARM/">ARM</category>
      
      <category domain="https://playneko.github.io/tags/ARM64/">ARM64</category>
      
      <category domain="https://playneko.github.io/tags/ISO/">ISO</category>
      
      <category domain="https://playneko.github.io/tags/MBR/">MBR</category>
      
      <category domain="https://playneko.github.io/tags/OOBE/">OOBE</category>
      
      <category domain="https://playneko.github.io/tags/Broot/">Broot</category>
      
      <category domain="https://playneko.github.io/tags/SD/">SD</category>
      
      <category domain="https://playneko.github.io/tags/SD-CARD/">SD CARD</category>
      
      <category domain="https://playneko.github.io/tags/SD-%EC%B9%B4%EB%93%9C/">SD 카드</category>
      
      <category domain="https://playneko.github.io/tags/Type-C/">Type-C</category>
      
      <category domain="https://playneko.github.io/tags/UEFI/">UEFI</category>
      
      <category domain="https://playneko.github.io/tags/USB/">USB</category>
      
      <category domain="https://playneko.github.io/tags/WOR/">WOR</category>
      
      <category domain="https://playneko.github.io/tags/win10/">win10</category>
      
      <category domain="https://playneko.github.io/tags/windows/">windows</category>
      
      <category domain="https://playneko.github.io/tags/WINDOWS-10/">WINDOWS 10</category>
      
      <category domain="https://playneko.github.io/tags/WINDOWS-10-ARM64/">WINDOWS 10 ARM64</category>
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi-4/">Rasberry Pi 4</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4-4B/">라즈베리파이 4B</category>
      
      
      <comments>https://playneko.github.io/2020/07/02/rasberry-pi/rasberry-pi-036/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에서 파이썬을 이용한 MariaDB 사용하기</title>
      <link>https://playneko.github.io/2020/07/01/rasberry-pi/rasberry-pi-035/</link>
      <guid>https://playneko.github.io/2020/07/01/rasberry-pi/rasberry-pi-035/</guid>
      <pubDate>Tue, 30 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에서 파이썬을 이용한 MariaDB 사용하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이에서 파이썬을 이용한 MariaDB 사용하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에서-파이썬을-이용한-MariaDB-사용하기"><a href="#라즈베리파이에서-파이썬을-이용한-MariaDB-사용하기" class="headerlink" title="라즈베리파이에서 파이썬을 이용한 MariaDB 사용하기"></a>라즈베리파이에서 파이썬을 이용한 MariaDB 사용하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라즈베리파이에서 파이썬을 이용한 MariaDB 사용하기 입니다.</p><p>MariaDB에 Connection, Select, Insert, Update, Delete 사용법을 알아보도록 하겠습니다.</p><p>우선 MariaDB에 테이블을 생성을 하도록 하겠습니다.</p><p>아직 환경이나 DB가 설치가 안되어 있으신 분은 라즈베리파이 또는 리눅스에서 NPM (Nginx + PHP + MariaDB) 설치하기를 참고해주시기 바랍니다.</p><p>우선 간단한 테이블을 만들어 보도록 하겠습니다.</p><p>phpMyAdmin에 로그인을 해주시기 바랍니다.</p><p><img src="002-18.png" alt="image"></p><p>akibatv 데이터베이스를 펼치시면 New를 클릭해 주시기 바랍니다.</p><p><img src="003-26.png" alt="image"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 테이블명, 칼럼, 종류, 사이즈등을 설정을 해주시기 바랍니다.</span><br><span class="line">----------+---------+--------</span><br><span class="line"> Name     | Type    | Size</span><br><span class="line">----------+---------+--------</span><br><span class="line"> name     | VARCHAR | 10</span><br><span class="line">----------+---------+--------</span><br><span class="line"> age      | INT     | 3</span><br><span class="line">----------+---------+--------</span><br><span class="line"> birthday | VARCHAR | 10</span><br><span class="line">----------+---------+--------</span><br><span class="line"> site_url | VARCHAR | 100</span><br><span class="line">----------+---------+--------</span><br></pre></td></tr></table></figure><p>위와같이 하셨으면 저장을해서 테이블을 추가를 해주시기 바랍니다.</p><p><img src="004-25.png" alt="image"></p><p>그러면 위와같이 test2이란 테이블이 추가가 되었습니다.</p><p>그럼 우선 Visual Studio Code(비주얼 스튜디오 코드)를 실행해 주시기 바랍니다.</p><p>실행을 하셨으면 아래의 파일들을 추가를 해주시기 바랍니다.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python_mariadb.py</span><br><span class="line">python_mariadb_select.py</span><br><span class="line">python_mariadb_insert.py</span><br><span class="line">python_mariadb_update.py</span><br><span class="line">python_mariadb_delete.py</span><br></pre></td></tr></table></figure><p><img src="001-25.png" alt="image"></p><p>파일들을 추가를 하셨으면 python_mariadb.py에 아래와 같이 코딩을 해주시기 바랍니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    conn = pymysql.connect(</span><br><span class="line">        host=<span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">        user=<span class="string">&#x27;akibatv&#x27;</span>,</span><br><span class="line">        password=<span class="string">&#x27;akibatv&#x27;</span>,</span><br><span class="line">        db=<span class="string">&#x27;akibatv&#x27;</span>,</span><br><span class="line">        charset=<span class="string">&#x27;utf8mb4&#x27;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> pymysql <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">&quot;Database Access Error&quot;</span>)</span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">cur = conn.cursor()</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;DataBase Connection Success&quot;</span>)</span><br><span class="line"></span><br><span class="line">cur.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p><img src="002-23-e1593267290678.png" alt="image"></p><p>위와같이 작성을 하셨으면 이제 데이터베이스에 정상적으로 연결이 되는지 확인을 해보도록 하겠습니다.</p><p>라즈베리파이의 적당한곳에 작성하신 소스파일을 올려주시기 바랍니다.</p><p>라즈베리파이에 VNC로 접속후 터미널을 실행해 주세요.</p><p><img src="005-20.png" alt="image"></p><p>파이썬에서 MariaDB를 사용하기 위해선 모듈을 설치를 하셔야만 합니다.</p><p>터미널에 아래의 명령어를 실행을 해주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo python3 -m pip install pymysql</span><br></pre></td></tr></table></figure><p><img src="008-15.png" alt="image"></p><p>모듈 설치가 완료 되셨으면 아래의 명령어로 실행을 해주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬 3.x버전대</span></span><br><span class="line">$ sudo python3 ./python_mariadb.py</span><br></pre></td></tr></table></figure><p><img src="009-12.png" alt="image"></p><p>위와같이 [DataBase Connection Success]가 출력이 되면서 정상적으로 실행된것을 확인 되었습니다.</p><p>이제 Insert를 해보도록 하겠습니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)에서 python_mariadb_insert.py파일을 여시고 아래와 같이 코딩해 주세요.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    conn = pymysql.connect(</span><br><span class="line">        host=<span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">        user=<span class="string">&#x27;akibatv&#x27;</span>,</span><br><span class="line">        password=<span class="string">&#x27;akibatv&#x27;</span>,</span><br><span class="line">        db=<span class="string">&#x27;akibatv&#x27;</span>,</span><br><span class="line">        charset=<span class="string">&#x27;utf8mb4&#x27;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> pymysql <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">&quot;Database Access Error&quot;</span>)</span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">cur = conn.cursor()</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;DataBase Connection Success&quot;</span>)</span><br><span class="line"></span><br><span class="line">sql = <span class="string">&quot;&quot;&quot; INSERT INTO test2 (name, age, birthday, site_url) </span></span><br><span class="line"><span class="string">        VALUES (%s, %s, %s, %s) &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">cur.execute(sql, (<span class="string">&#x27;AkibaTV&#x27;</span>, <span class="string">&#x27;99&#x27;</span>, <span class="string">&#x27;2020/01/01&#x27;</span>, <span class="string">&#x27;https://playneko.com/&#x27;</span>))</span><br><span class="line">conn.commit()</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;Data Insert Success&quot;</span>)</span><br><span class="line"></span><br><span class="line">cur.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p><img src="010-1-2.png" alt="image"></p><p>라즈베리파이의 적당한곳에 작성하신 소스파일을 올려주시기 바랍니다.</p><p><img src="011-11.png" alt="image"></p><p>아래의 명령어로 실행을 해주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬 3.x버전대</span></span><br><span class="line">$ sudo python3 ./python_mariadb_insert.py</span><br></pre></td></tr></table></figure><p><img src="012-10.png" alt="image"></p><p>데이터 추가 성공이라고 출력이 되었으면 실제로 데이터베이스</p><p>정상적으로 입력이 되었는지 확인을 해보도록 하겠습니다.</p><p><img src="013-11.png" alt="image"></p><p>데이터베이스에도 정상적으로 등록이 된것을 확인이 되었습니다.</p><p>이제 Select를 해보도록 하겠습니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)에서 python_mariadb_select.py파일을 여시고 아래와 같이 코딩해 주세요.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    conn = pymysql.connect(</span><br><span class="line">        host=<span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">        user=<span class="string">&#x27;akibatv&#x27;</span>,</span><br><span class="line">        password=<span class="string">&#x27;akibatv&#x27;</span>,</span><br><span class="line">        db=<span class="string">&#x27;akibatv&#x27;</span>,</span><br><span class="line">        charset=<span class="string">&#x27;utf8mb4&#x27;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> pymysql <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">&quot;Database Access Error&quot;</span>)</span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">cur = conn.cursor()</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;DataBase Connection Success&quot;</span>)</span><br><span class="line"></span><br><span class="line">sql = <span class="string">&quot; SELECT * FROM test2 &quot;</span></span><br><span class="line">cur.execute(sql)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> cur:</span><br><span class="line">    print(row)</span><br><span class="line"></span><br><span class="line">cur.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p><img src="014-7.png" alt="image"></p><p>라즈베리파이의 적당한곳에 작성하신 소스파일을 올려주시기 바랍니다.</p><p><img src="015-6.png" alt="image"></p><p>아래의 명령어로 실행을 해주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬 3.x버전대</span></span><br><span class="line">$ sudo python3 ./python_mariadb_select.py</span><br></pre></td></tr></table></figure><p><img src="016-8.png" alt="image"></p><p>데이터베이스에 등록된 데이터가 정상 출력된것을 확인 하실수 있습니다.</p><p>이제 Update를 해보도록 하겠습니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)에서 python_mariadb_update.py파일을 여시고 아래와 같이 코딩해 주세요.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    conn = pymysql.connect(</span><br><span class="line">        host=<span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">        user=<span class="string">&#x27;akibatv&#x27;</span>,</span><br><span class="line">        password=<span class="string">&#x27;akibatv&#x27;</span>,</span><br><span class="line">        db=<span class="string">&#x27;akibatv&#x27;</span>,</span><br><span class="line">        charset=<span class="string">&#x27;utf8mb4&#x27;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> pymysql <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">&quot;Database Access Error&quot;</span>)</span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">cur = conn.cursor()</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;DataBase Connection Success&quot;</span>)</span><br><span class="line"></span><br><span class="line">sql = <span class="string">&quot;&quot;&quot; UPDATE test2 SET </span></span><br><span class="line"><span class="string">        age = %s, </span></span><br><span class="line"><span class="string">        birthday = %s,</span></span><br><span class="line"><span class="string">        site_url = %s</span></span><br><span class="line"><span class="string">        WHERE name = %s &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">cur.execute(sql, (<span class="string">&#x27;22&#x27;</span>, <span class="string">&#x27;1900/07/31&#x27;</span>, <span class="string">&#x27;https://akibatv.net/&#x27;</span>,<span class="string">&#x27;AkibaTV&#x27;</span>))</span><br><span class="line">conn.commit()</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;Data Update Success&quot;</span>)</span><br><span class="line"></span><br><span class="line">cur.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p><img src="017-1-1.png" alt="image"></p><p>라즈베리파이의 적당한곳에 작성하신 소스파일을 올려주시기 바랍니다.</p><p><img src="018-8.png" alt="image"></p><p>아래의 명령어로 실행을 해주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬 3.x버전대</span></span><br><span class="line">$ sudo python3 ./python_mariadb_update.py</span><br></pre></td></tr></table></figure><p><img src="019-8.png" alt="image"></p><p>데이터 갱신 성공 이라고 출력이 되셨으면 문제없이 갱신이 되었습니다.</p><p>실제로 데이터베이스 정상적으로 갱신이 되었는지 확인을 해보도록 하겠습니다.</p><p><img src="020-8.png" alt="image"></p><p>데이터베이스에도 정상적으로 갱신이 된것을 확인이 되었습니다.</p><p>이제 Delete를 해보도록 하겠습니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)에서 python_mariadb_delete.py파일을 여시고 아래와 같이 코딩해 주세요.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    conn = pymysql.connect(</span><br><span class="line">        host=<span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">        user=<span class="string">&#x27;akibatv&#x27;</span>,</span><br><span class="line">        password=<span class="string">&#x27;akibatv&#x27;</span>,</span><br><span class="line">        db=<span class="string">&#x27;akibatv&#x27;</span>,</span><br><span class="line">        charset=<span class="string">&#x27;utf8mb4&#x27;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> pymysql <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">&quot;Database Access Error&quot;</span>)</span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">cur = conn.cursor()</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;DataBase Connection Success&quot;</span>)</span><br><span class="line"></span><br><span class="line">sql = <span class="string">&quot;&quot;&quot; DELETE FROM test2 WHERE name = %s &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">cur.execute(sql, (<span class="string">&#x27;AkibaTV&#x27;</span>))</span><br><span class="line">conn.commit()</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;Data Delete Success&quot;</span>)</span><br><span class="line"></span><br><span class="line">cur.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p><img src="021-6.png" alt="image"></p><p>라즈베리파이의 적당한곳에 작성하신 소스파일을 올려주시기 바랍니다.</p><p><img src="022-6.png" alt="image"></p><p>아래의 명령어로 실행을 해주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬 3.x버전대</span></span><br><span class="line">$ sudo python3 ./python_mariadb_delete.py</span><br></pre></td></tr></table></figure><p><img src="023-4.png" alt="image"></p><p>데이터 삭제 성공 이라고 출력이 되셨으면 문제없이 삭제가 된것입니다.</p><p>실제로 데이터베이스 정상적으로 삭제가 되었는지 확인을 해보도록 하겠습니다.</p><p><img src="024-4.png" alt="image"></p><p>데이터베이스에도 정상적으로 삭제가 된것을 확인이 되었습니다.</p><p>이렇게해서 파이썬에서 MariaDB의 Select, Insert, Update, Delete를 해보았습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Python/">Python</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/Python/">Python</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://playneko.github.io/tags/MariaDB/">MariaDB</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/localhost/">localhost</category>
      
      <category domain="https://playneko.github.io/tags/connection/">connection</category>
      
      <category domain="https://playneko.github.io/tags/delete/">delete</category>
      
      <category domain="https://playneko.github.io/tags/insert/">insert</category>
      
      <category domain="https://playneko.github.io/tags/select/">select</category>
      
      <category domain="https://playneko.github.io/tags/update/">update</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A7%88%EB%A6%AC%EC%95%84DB/">마리아DB</category>
      
      
      <comments>https://playneko.github.io/2020/07/01/rasberry-pi/rasberry-pi-035/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에 Pi-Hole 서버 구축해서 광고 차단하기</title>
      <link>https://playneko.github.io/2020/06/30/rasberry-pi/rasberry-pi-034/</link>
      <guid>https://playneko.github.io/2020/06/30/rasberry-pi/rasberry-pi-034/</guid>
      <pubDate>Mon, 29 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에 Pi-Hole 서버 구축해서 광고 차단하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이에 Pi-Hole 서버 구축해서 광고 차단하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에-Pi-Hole-서버-구축해서-광고-차단하기"><a href="#라즈베리파이에-Pi-Hole-서버-구축해서-광고-차단하기" class="headerlink" title="라즈베리파이에 Pi-Hole 서버 구축해서 광고 차단하기"></a>라즈베리파이에 Pi-Hole 서버 구축해서 광고 차단하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라즈베리파이에 Pi-Hole 서버 구축해서 광고 차단하기 입니다.</p><p>Pi-Hole은 인터넷으로 들어오는 광고를 차단시켜주는 서버프로그램 입니다.</p><p>크롬브라우저를 사용하시면 플러그인등을 설치해서 광고 차단을 하실수 있습니다만</p><p>그건 크롬브라우저를 쓰고 있을때에만 가능 합니다만</p><p>Pi-Hole 서버를 구축하시면 DNS를 통해 들어오는 광고서버를 전부 차단을 시켜줍니다.</p><p>그래서 컴퓨터 핸드폰 태블릿등에서도 똑같이 광고차단 효과를 보실수가 있습니다.</p><p>그럼 Pi-Hole 서버를 구축하기전에 준비물이 필요 합니다.</p><blockquote><h5 id="준비물"><a href="#준비물" class="headerlink" title="준비물"></a>준비물</h5><ul><li>공유기</li><li>라즈베리파이</li><li>인터넷</li><li>컴퓨터</li></ul></blockquote><p>준비물이 갖춰졌으면 라즈베리파이를 일단 OS설치와 VNC접속 가능하게 세팅을 해주세요.</p><p>설치 방법에 대해서는 아래의 링크를 통해 하실수가 있습니다.</p><p><a href="https://playneko.github.io/2020/05/24/rasberry-pi-001/">모니터없이 라즈베리파이3 B 설치하기</a></p><p><a href="https://playneko.github.io/2020/05/24/rasberry-pi-002/">라즈베리파이 VNC설정</a></p><p><a href="https://playneko.github.io/2020/05/24/rasberry-pi-005/">라즈베리파이 고정 IP Address 설정</a></p><p>모든 설치와 설정이 되셨으면 라즈베리파이를 VNC로 접속후 터미널을 실행해 주세요.</p><p><img src="001-24.png" alt="image"></p><p>Pi-Hole 서버는 깃허브를 이용해서 다운로드후 설치를 하도록 하겠습니다.</p><p><a href="https://github.com/pi-hole/pi-hole#one-step-automated-install">https://github.com/pi-hole/pi-hole#one-step-automated-install</a></p><p>터미널에 아래의 명령어를 입력해서 다운로드와 설치를 하도록 하겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> --depth 1 https://github.com/pi-hole/pi-hole.git Pi-hole</span><br><span class="line">$ <span class="built_in">cd</span> Pi-hole/automated\ install/</span><br><span class="line">$ sudo bash basic-install.sh</span><br></pre></td></tr></table></figure><p><img src="002-22.png" alt="image"></p><p>깃허브에서 다운로드가 완료가 되었습니다.</p><p><img src="003-25.png" alt="image"></p><p><img src="004-24.png" alt="image"></p><p>위의 화면이 나오면 설치준비를 위해 준비를 하게 됩니다.</p><p><img src="005-19.png" alt="image"></p><p>한참 기다리시면 위와같이 나오게 되며 계속 확인을 선택하고 넘겨주시기 바랍니다.</p><p><img src="006-19.png" alt="image"></p><p><img src="007-16.png" alt="image"></p><p><img src="008-14.png" alt="image"></p><p>위와같이 나오면 어떤 DNS를 이용할것인지 선택을 하실수 있습니다.</p><p>저의 경우 Google을 기본으로 선택 했습니다.</p><p><img src="009-11.png" alt="image"></p><p>위와같이 나오면 전부 기본세팅으로 확인해주셔서 다음으로 넘어가 주시기 바랍니다.</p><p><img src="010-11.png" alt="image"></p><p><img src="011-10.png" alt="image"></p><p><img src="012-9.png" alt="image"></p><p><img src="013-10.png" alt="image"></p><p><img src="014-6.png" alt="image"></p><p><img src="015-5.png" alt="image"></p><p><img src="016-7.png" alt="image"></p><p><img src="017-7.png" alt="image"></p><p>모든 설정이 끝나고 반영하는 단계 입니다.</p><p><img src="018-7.png" alt="image"></p><p>모든 설치가 끝났습니다.</p><p>그럼 Pi-Hole 서버의 대시보드를 접속해 보겠습니다.</p><p>브라우저를 실행후 아래의 주소를 입력해 주세요.</p><p>http://라즈베리파이 IP/admin/</p><p>저의 경우에는 [<a href="https://playneko.github.io/2020/06/25/rasberry-pi-030/">라즈베리파이 또는 리눅스에서 Nginx가상호스트 추가하기</a>]를 이용해</p><p>접속 주소를 변경하였습니다. 여러분들도 여러 개발중인 사이트가 있을경우</p><p>가상호스트를 이용해 접속 페이지를 변경 하실수 있습니다.</p><p><img src="019-7.png" alt="image"></p><p>파이홀에 로그인을 위해선 초기 비밀번호를 변경을 하셔야만 합니다.</p><p>아래의 명령어를 이용해서 새로 비밀번호를 세팅해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pihole -a -p</span><br></pre></td></tr></table></figure><p><img src="020-7.png" alt="image"></p><p><img src="021-5.png" alt="image"></p><p><img src="022-5.png" alt="image"></p><p>로그인을 하시면 더많은 설정을 하실수 있는 메뉴가 나오게 됩니다.</p><p>이렇게해서 Pi-Hole 서버 구축이 끝났습니다.</p><p>다음에는 어떻게 활용을 하는지에 대해서 설명을 해드리도록 하겠습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/sudo/">sudo</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/http/">http</category>
      
      <category domain="https://playneko.github.io/tags/OS/">OS</category>
      
      <category domain="https://playneko.github.io/tags/admin/">admin</category>
      
      <category domain="https://playneko.github.io/tags/DNS/">DNS</category>
      
      <category domain="https://playneko.github.io/tags/Google/">Google</category>
      
      <category domain="https://playneko.github.io/tags/Pi-Hole/">Pi-Hole</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B3%B5%EC%9C%A0%EA%B8%B0/">공유기</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B4%91%EA%B3%A0/">광고</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B4%91%EA%B3%A0%EC%84%9C%EB%B2%84/">광고서버</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B4%91%EA%B3%A0%EC%B0%A8%EB%8B%A8/">광고차단</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B5%AC%EC%B6%95/">구축</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8/">비밀번호</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%B8%ED%84%B0%EB%84%B7/">인터넷</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B0%A8%EB%8B%A8/">차단</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BB%B4%ED%93%A8%ED%84%B0/">컴퓨터</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8C%8C%EC%9D%B4%ED%99%80/">파이홀</category>
      
      
      <comments>https://playneko.github.io/2020/06/30/rasberry-pi/rasberry-pi-034/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>카와시마 요시코는 남자가 되고 싶은 1권</title>
      <link>https://playneko.github.io/2020/06/29/akihabara/akihabara-013/</link>
      <guid>https://playneko.github.io/2020/06/29/akihabara/akihabara-013/</guid>
      <pubDate>Sun, 28 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;카와시마 요시코는 남자가 되고 싶은 1권 (그녀이며, 그이며, 미소녀 스파이, 첩보전 와중에!)&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="카와시마-요시코는-남자가-되고-싶은-1권-그녀이며-그이며-미소녀-스파이-첩보전-와중에"><a href="#카와시마-요시코는-남자가-되고-싶은-1권-그녀이며-그이며-미소녀-스파이-첩보전-와중에" class="headerlink" title="카와시마 요시코는 남자가 되고 싶은 1권 (그녀이며, 그이며, 미소녀 스파이, 첩보전 와중에!)"></a>카와시마 요시코는 남자가 되고 싶은 1권 (그녀이며, 그이며, 미소녀 스파이, 첩보전 와중에!)</h2><p><a href="">link</a></p><p><img src="001.png" alt="image"></p><p><a href="https://youtu.be/"><img src="http://img.youtube.com/vi/xxxx/0.jpg" alt="AkibaTV"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bash</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%95%84%ED%82%A4%EB%B0%94-%EC%A0%95%EB%B3%B4/">아키바 정보</category>
      
      
      
      <comments>https://playneko.github.io/2020/06/29/akihabara/akihabara-013/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에서 실행중인 프로세스 강제종료 시키기</title>
      <link>https://playneko.github.io/2020/06/29/rasberry-pi/rasberry-pi-033/</link>
      <guid>https://playneko.github.io/2020/06/29/rasberry-pi/rasberry-pi-033/</guid>
      <pubDate>Sun, 28 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에서 실행중인 프로세스 강제종료 시키기&lt;br&gt;이번에 소개할 내용은 라즈베리파이에서 실행중인 프로세스 강제종료 시키기 입니다만&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에서-실행중인-프로세스-강제종료-시키기"><a href="#라즈베리파이에서-실행중인-프로세스-강제종료-시키기" class="headerlink" title="라즈베리파이에서 실행중인 프로세스 강제종료 시키기"></a>라즈베리파이에서 실행중인 프로세스 강제종료 시키기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라즈베리파이에서 실행중인 프로세스 강제종료 시키기 입니다만</p><p>라즈베리파이 뿐만 아니라 리눅스도 포함되는 내용 입니다.</p><p>배치프로그램을 개발하거나 자바프로그램을 라즈베리파이 또는 리눅스에서</p><p>백그라운드 상태로 실행중인 경우 급하게 프로세스를 종료를 시켜야 하는 경우가 발생할수가 있습니다.</p><p>그럴경우에 어떻게 프로세스를 찾고 강제로 종료를 시키는것인지 알아보도록 하겠습니다.</p><p>우선 프로그램을 무한루프로 실행할 샘플 코드를 작성을 하도록 하겠습니다.</p><p>샘플코드는 이전에 소개해 드린 라즈베리파이에 GPIO와 파이선을 이용해서 LED를 켜보자 입니다.</p><p>간단하게 만들어서 무한으로 LED가 켜지고 꺼지게 실행중에</p><p>프로세스를 강제종료를 해보도록 하겠습니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)를 실행해 주시고 파일명은 gpio_led_loop.py로 합니다.</p><p><img src="001-22.png" alt="image"></p><p>아래와같이 코딩을 해주시기 바랍니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"></span><br><span class="line">pinNum = <span class="number">20</span></span><br><span class="line">GPIO.setmode(GPIO.BCM)</span><br><span class="line">GPIO.setup(pinNum, GPIO.OUT)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">        GPIO.output(pinNum, GPIO.HIGH)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        GPIO.output(pinNum, GPIO.LOW)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    GPIO.output(pinNum, GPIO.LOW)</span><br><span class="line"></span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    GPIO.cleanup()</span><br></pre></td></tr></table></figure><p><img src="002-20.png" alt="image"></p><p>작성을 하셨으면 라즈베리파이에 파일을 올려주시기 바랍니다.</p><p>그리고 라즈베리파이를 VNC를 이용해 접속후 터미널을 실행해 주세요.</p><p><img src="003-23.png" alt="image"></p><p>이제 작성한 LED점등 소스를 실행을 해보도록 하겠습니다.</p><p>아래의 명령어를 입력해 주세요.</p><p>이번에 실행 명령어는 마지막에 “&amp;”를 추가를 해줍니다. “&amp;” 하고 실행을 하시면</p><p>프로그램을 그냥 실행하는게 아닌 백그라운드로 실행을 하게 되며 라즈베리파이에서 로그아웃을 하셔도</p><p>프로그램을 라즈베리파이가 켜져있는한 계속 돌아가게 됩니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬 2.x버전대를 이용하실경우</span></span><br><span class="line">$ sudo python ./gpio_led_loop.py &amp;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬 3.x버전대를 이용하실경우</span></span><br><span class="line">$ sudo python3 ./gpio_led_loop.py &amp;</span><br></pre></td></tr></table></figure><p><img src="004-22.png" alt="image"></p><p>위와같이 아무키나 눌렀음에도 LED는 계속 켜지고 꺼지는것을 보실수가 있습니다.</p><p>그럼 프로세스가 정상적으로 실행중인지 알아보겠습니다.</p><p>아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gpio_led_loop.py 파일명으로 실행중인 프로세스 검색</span></span><br><span class="line">$ ps -ef | grep gpio_led_loop.py</span><br></pre></td></tr></table></figure><p><img src="005-17.png" alt="image"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root 1113 1003 0 22:33 pts/0  00:00:00 sudo python3 ./gpio_led_loop.py</span><br><span class="line">root 1118 1113 0 22:33 pts/0  00:00:00 python3 ./gpio_led_loop.py</span><br><span class="line">pi   1121 1003 0 22:36 pts/0  00:00:00 grep --color=auto gpio_led_loop.py</span><br></pre></td></tr></table></figure><p>위와같이 실행중인 항목이 나오는것을 확인 하실수 있습니다.</p><p>이제 프로세스를 종료하는 방법은 root다음에 오는 첫번째 숫자가 실행중인 프로세스의 pid값 입니다.</p><p>아니면 프로그램을 실행하실때 출력한 [1] 1113도 똑같은 pid값이 됩니다.</p><p>pid값을 확인을 하셨으면 아래의 명령어를 이용해서 프로세스를 강제로 종료 하실수가 있습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1113은 실행할때마다 나오는 pid값을 입력</span></span><br><span class="line">$ sudo <span class="built_in">kill</span> 1113(pid값)</span><br></pre></td></tr></table></figure><p><img src="006-17.png" alt="image"></p><p>프로세스를 강제 종료하시면 위와같이 나오면서 프로세스가 종료되고 LED점등도 멈춘것을 확인하실수 있습니다.</p><p>그럼 다시 프로세스 검색을 해서 프로세스가 종료되었는지 확인해 보도록 하겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gpio_led_loop.py 파일명으로 실행중인 프로세스 검색</span></span><br><span class="line">$ ps -ef | grep gpio_led_loop.py</span><br></pre></td></tr></table></figure><p><img src="007-14.png" alt="image"></p><p>위와같이 프로세스가 종료되어 있는것을 확인 하실수 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Linux/">Linux</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/LED/">LED</category>
      
      <category domain="https://playneko.github.io/tags/sudo/">sudo</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/background/">background</category>
      
      <category domain="https://playneko.github.io/tags/grep/">grep</category>
      
      <category domain="https://playneko.github.io/tags/kill/">kill</category>
      
      <category domain="https://playneko.github.io/tags/LED%EC%A0%90%EB%93%B1/">LED점등</category>
      
      <category domain="https://playneko.github.io/tags/pid/">pid</category>
      
      <category domain="https://playneko.github.io/tags/process/">process</category>
      
      <category domain="https://playneko.github.io/tags/ps-ef/">ps -ef</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B2%80%EC%83%89/">검색</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83/">로그아웃</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B0%B1%EA%B7%B8%EB%9D%BC%EC%9A%B4%EB%93%9C/">백그라운드</category>
      
      <category domain="https://playneko.github.io/tags/%ED%84%B0%EB%AF%B8%EB%84%90/">터미널</category>
      
      <category domain="https://playneko.github.io/tags/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4/">프로세스</category>
      
      
      <comments>https://playneko.github.io/2020/06/29/rasberry-pi/rasberry-pi-033/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>코미컬 라이즈 마법사 여명기 1권 마법과 모험의 본격 판타지!</title>
      <link>https://playneko.github.io/2020/06/28/akihabara/akihabara-012/</link>
      <guid>https://playneko.github.io/2020/06/28/akihabara/akihabara-012/</guid>
      <pubDate>Sat, 27 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;토라바시리x타츠오 코미컬 라이즈 마법사 여명기 1권 마법과 모험의 본격 판타지!&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="토라바시리x타츠오-코미컬-라이즈-마법사-여명기-1권-마법과-모험의-본격-판타지"><a href="#토라바시리x타츠오-코미컬-라이즈-마법사-여명기-1권-마법과-모험의-본격-판타지" class="headerlink" title="토라바시리x타츠오 코미컬 라이즈 마법사 여명기 1권 마법과 모험의 본격 판타지!"></a>토라바시리x타츠오 코미컬 라이즈 마법사 여명기 1권 마법과 모험의 본격 판타지!</h2><p><a href="">link</a></p><p><img src="001.png" alt="image"></p><p><a href="https://youtu.be/"><img src="http://img.youtube.com/vi/xxxx/0.jpg" alt="AkibaTV"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bash</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%95%84%ED%82%A4%EB%B0%94-%EC%A0%95%EB%B3%B4/">아키바 정보</category>
      
      
      
      <comments>https://playneko.github.io/2020/06/28/akihabara/akihabara-012/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에 openmediavault(OMV) 5 설치하기</title>
      <link>https://playneko.github.io/2020/06/28/rasberry-pi/rasberry-pi-032/</link>
      <guid>https://playneko.github.io/2020/06/28/rasberry-pi/rasberry-pi-032/</guid>
      <pubDate>Sat, 27 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에 openmediavault(OMV) 5 설치하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이에 openmediavault 설치하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에-openmediavault-OMV-5-설치하기"><a href="#라즈베리파이에-openmediavault-OMV-5-설치하기" class="headerlink" title="라즈베리파이에 openmediavault(OMV) 5 설치하기"></a>라즈베리파이에 openmediavault(OMV) 5 설치하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라즈베리파이에 openmediavault 설치하기 입니다.</p><h4 id="openmediavault-란-무엇입니까"><a href="#openmediavault-란-무엇입니까" class="headerlink" title="openmediavault 란 무엇입니까?"></a>openmediavault 란 무엇입니까?</h4><p>openmediavault는 데비안 리눅스 기반의 차세대 NAS (Network Attached Storage) 솔루션입니다.</p><p>SSH, (S) FTP, SMB / CIFS, DAAP 미디어 서버, RSync, BitTorrent 클라이언트 등의 서비스가 포함되어 있습니다.</p><p>프레임 워크의 모듈식 설계 덕분에 플러그인을 통해 기능을 향상시킬 수 있습니다.</p><p>openmediavault는 주로 소규모 사무실이나 본사에서 사용하도록 설계되었지만 이러한 시나리오에만 국한되지는 않습니다.</p><p>모든 사용자가 심도있는 지식없이 Network Attached Storage를 설치 및 관리 할 수있는 간편하고 사용하기 쉬운 솔루션입니다.</p><p><a href="https://www.openmediavault.org/">https://www.openmediavault.org/</a></p><p><img src="001-21.png" alt="image"></p><p>openmediavault(OMV) 5를 설치하시기 위해선 우선 라즈베리파이에</p><p>라즈베리파이 OS를 설치를 해주시기 바랍니다.</p><p>설치 방법은 [모니터없이 라즈베리파이3 B 설치하기]를 참고해 주시기 바랍니다.</p><p><img src="005-16.png" alt="image"></p><p>라즈베리파이 OS가 설치 완료된 상태 입니다.</p><p><img src="006-16.png" alt="image"></p><p>라즈베리파이의 모든 설정과 업데이트가 끝났습니다.</p><p>재시작을 해주시기 바랍니다.</p><p>재시작을 하셨으면 라즈베리파이를 VNC로 여시고 터미널을 실행해 주세요.</p><p><img src="007-13.png" alt="image"></p><p>이제 본격적으로 openmediavault(OMV)를 설치하기에 앞서 아래의 명령어로 업데이트 및 업그레이드를 합니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 업데이트</span></span><br><span class="line">$ sudo apt-get update</span><br><span class="line"><span class="comment"># 업그레이드</span></span><br><span class="line">$ sudo apt-get upgrade</span><br><span class="line"><span class="comment"># 재부팅</span></span><br><span class="line">$ sudo reboot</span><br></pre></td></tr></table></figure><p><img src="008-12.png" alt="image"></p><p><img src="009-9.png" alt="image"></p><p>재부팅을 하셨으면 라즈베리파이를 VNC로 여시고 터미널을 실행해 주세요.</p><p>아래의 명령어를 입력해서 openmediavault(OMV) 설치를 하도록 하겠습니다.</p><p>명령여는 omv-5.txt 링크를 여시면 나오는 내용을 복사해서 붙여넣어서 실행 하는것을 추천합니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># openmediavault(OMV) 5 설치 명령어</span></span><br><span class="line">$ wget -O - https://github.com/OpenMediaVault-Plugin-Developers/installScript/raw/master/install | sudo bash</span><br></pre></td></tr></table></figure><p><img src="010-9.png" alt="image"></p><p>한참 설치후 VNC접속이 끊긴후 이와같은 화면이 나오게 되면 설치가 완료가 된것입니다.</p><p><img src="011-8.png" alt="image"></p><p>openmediavault(OMV)를 확인하기 위해선 브라우저를 실행하시기 바랍니다.</p><p>웹브라우저의 URL에 <a href="http://omv가/">http://OMV가</a> 설치된 라즈베리파이 IP 를 입력하시고 접속해 주세요.</p><p><img src="012-7.png" alt="image"></p><blockquote><p>초기 ID : admin<br>초기 Password :openmediavault</p></blockquote><p><img src="013-8.png" alt="image"></p><p>정상적으로 접속이 되었으면 이걸로 라즈베리파이에 openmediavault(OMV) 5 설치하기가 완료 되었습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Linux/">Linux</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/linux/">linux</category>
      
      <category domain="https://playneko.github.io/tags/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/OS/">OS</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/BitTorrent/">BitTorrent</category>
      
      <category domain="https://playneko.github.io/tags/DAAP/">DAAP</category>
      
      <category domain="https://playneko.github.io/tags/FTP/">FTP</category>
      
      <category domain="https://playneko.github.io/tags/NAS/">NAS</category>
      
      <category domain="https://playneko.github.io/tags/OMV/">OMV</category>
      
      <category domain="https://playneko.github.io/tags/openmediavault/">openmediavault</category>
      
      <category domain="https://playneko.github.io/tags/RSync/">RSync</category>
      
      <category domain="https://playneko.github.io/tags/SMB-CIFS/">SMB/CIFS</category>
      
      <category domain="https://playneko.github.io/tags/%EB%8D%B0%EB%B9%84%EC%95%88-%EB%A6%AC%EB%88%85%EC%8A%A4/">데비안 리눅스</category>
      
      <category domain="https://playneko.github.io/tags/%ED%94%84%EB%A0%88%EC%9E%84-%EC%9B%8C%ED%81%AC/">프레임 워크</category>
      
      
      <comments>https://playneko.github.io/2020/06/28/rasberry-pi/rasberry-pi-032/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라인(Line) 로그인 API 사용법과 개요 설명</title>
      <link>https://playneko.github.io/2020/06/27/chatbot/chatbot-001/</link>
      <guid>https://playneko.github.io/2020/06/27/chatbot/chatbot-001/</guid>
      <pubDate>Fri, 26 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라인(Line) 로그인 API 사용법과 개요 설명&lt;br&gt;이번에 소개할 내용은 라인(Line) 로그인 API 사용법과 개요 설명 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라인-Line-로그인-API-사용법과-개요-설명"><a href="#라인-Line-로그인-API-사용법과-개요-설명" class="headerlink" title="라인(Line) 로그인 API 사용법과 개요 설명"></a>라인(Line) 로그인 API 사용법과 개요 설명</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라인(Line) 로그인 API 사용법과 개요 설명 입니다.</p><p>라인이라면 한번쯤 들어보셨을 겁니다.</p><p>네이버가 지분 50%이상 가지고 있는 라인이란 회사 입니다.</p><p>이번에 라인(Line) API 사용법에 들어가기 전에</p><p>가장 기본적인 로그인 API에 대한 개요를 알아보도록 하겠습니다.</p><p>개요에 대한 내용은 공식 사이트에 개재되어 있습니다.</p><p><a href="https://developers.line.biz/ja/docs/line-login/overview/#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB">LINEログインの概要</a></p><p>LINE 로그인을 웹 애플리케이션과 네이티브 응용 프로그램에 통합하면 사용자가 LINE 로그인을 사용할 수있게됩니다.</p><p>사용자가 LINE 로그인을 사용하면 웹 응용 프로그램과 네이티브 응용 프로그램에서 사용할 사용자 계정을 사용자의 LINE 계정에서 쉽게 만들 수 있습니다.</p><p>LINE 로그인은 웹 응용 프로그램, iOS 앱, Android 어플리케이션 또는 Unity 게임에 통합 할수 있습니다.</p><h4 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h4><p>응용 프로그램의 종류에 관계없이 LINE 로그인 채널을 만듭니다. 자세한 내용은 “<a href="https://developers.line.biz/ja/docs/line-login/getting-started/">LINE 로그인을 이용하려면</a>“을 참조하십시오.</p><h4 id="웹-응용-프로그램에-LINE-로그인을-통합"><a href="#웹-응용-프로그램에-LINE-로그인을-통합" class="headerlink" title="웹 응용 프로그램에 LINE 로그인을 통합"></a>웹 응용 프로그램에 LINE 로그인을 통합</h4><p>LINE 로그인을 당신의 웹 응용 프로그램에 통합하여 사용자가 쉽게 계정을 생성하여 로그인 할 수 있습니다.</p><p>사용자가 장치의 LINE에 로그인 한 경우, LINE 로그인을 사용하여 자동으로 당신이 개발 한 웹 응용 프로그램에 로그인 할 수 있습니다.</p><p>인증및 권한부여 프로세스는 <a href="https://tools.ietf.org/html/rfc6749">OAuth 2.0</a> 과 <a href="https://openid.net/connect/">OpenID® Connect</a> 프로토콜을 기반으로합니다.</p><p>자세한 내용은 “<a href="https://developers.line.biz/ja/docs/line-login/integrate-line-login/">웹 응용 프로그램에 LINE 로그인을 통합</a>“을 참조하십시오.</p><p>LINE 로그인하여 개선하는 사용자 경험을 예로 <a href="https://store.line.me/">LINE STORE</a> 웹 사이트를 참고하십시오.</p><p><img src="001-20.png" alt="image"></p><h4 id="네이티브-앱에-LINE-로그인을-통합"><a href="#네이티브-앱에-LINE-로그인을-통합" class="headerlink" title="네이티브 앱에 LINE 로그인을 통합"></a>네이티브 앱에 LINE 로그인을 통합</h4><p>LINE SDK를 사용하여 LINE 로그인 앱에 통합하면, LINE에서 사용자 인증을 처리 할 수 ​​있습니다.</p><p>사용자가 장치의 LINE에 로그인되어 있다면, 사용자는 E메일 주소와 암호를 입력하지 않고 안드로이드에 로그인 할 수 있습니다.</p><p>Android, iOS (Swift 및 Objective-C), Unity용 SDK를 사용할 수 있습니다.</p><ul><li><a href="https://developers.line.biz/ja/docs/ios-sdk/swift/overview/">LINE SDK for iOS Swift 개요</a></li><li><a href="https://developers.line.biz/ja/docs/ios-sdk/objective-c/overview/">LINE SDK for iOS Objective-C의 개요</a></li><li><a href="https://developers.line.biz/ja/docs/android-sdk/overview/">LINE SDK for Android 개요</a></li><li><a href="https://developers.line.biz/ja/docs/unity-sdk/overview/">LINE SDK for Unity 개요</a></li><li><a href="https://developers.line.biz/ja/docs/flutter-sdk/">LINE SDK for Flutter</a></li></ul><h4 id="LINE-로그인-인증-방법"><a href="#LINE-로그인-인증-방법" class="headerlink" title="LINE 로그인 인증 방법"></a>LINE 로그인 인증 방법</h4><p>LINE 로그인이 내장 된 앱은 다음 중 하나의 인증 방식으로 로그인 할 수 있습니다.</p><table><thead><tr><th>인증 방법</th><th>설명</th></tr></thead><tbody><tr><td><a href="https://developers.line.biz/ja/docs/line-login/integrate-line-login/#line-auto-login">자동 로그인</a></td><td>사용자 개입없이 로그인. LINE 로그인 및 확인 화면이 표시되지 않습니다</td></tr><tr><td><a href="https://developers.line.biz/ja/docs/line-login/integrate-line-login/#mail-or-qrcode-login">이메일 주소 로그인</a></td><td>LINE 로그인 화면에 이메일 주소와 비밀번호를 입력하여 로그인</td></tr><tr><td><a href="https://developers.line.biz/ja/docs/line-login/integrate-line-login/#mail-or-qrcode-login">QR 코드 로그인</a></td><td>LINE 로그인 화면에 표시된 QR 코드를 스마트폰 버전 LINE의 QR 코드 리더로 스캔하여 로그인</td></tr><tr><td><a href="https://developers.line.biz/ja/docs/line-login/integrate-line-login/#line-sso-login">싱글 사인온 (SSO)으로 로그인</a></td><td>다음 계정으로 로그인 하라고 표시된 확인 화면에서 로그인 버튼을 클릭하여 로그인</td></tr></tbody></table><p>인증 방법당 조건과 실제로 표시되는 화면 내용은 “<a href="https://developers.line.biz/ja/docs/line-login/integrate-line-login/#authentication-process">인증 프로세스</a>“를 참조하십시오.</p><h4 id="다음-단계"><a href="#다음-단계" class="headerlink" title="다음 단계"></a>다음 단계</h4><p>LINE 로그인 앱에 통합 채널을 생성해야합니다. 작성 지침 “<a href="https://developers.line.biz/ja/docs/line-login/getting-started/">LINE 로그인을 이용하려면</a>“을 참조하십시오.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%B1%97%EB%B4%87-ChatBot/">챗봇(ChatBot)</category>
      
      
      <category domain="https://playneko.github.io/tags/API/">API</category>
      
      <category domain="https://playneko.github.io/tags/%EB%84%A4%EC%9D%B4%EB%B2%84/">네이버</category>
      
      <category domain="https://playneko.github.io/tags/Android/">Android</category>
      
      <category domain="https://playneko.github.io/tags/E%EB%A9%94%EC%9D%BC/">E메일</category>
      
      <category domain="https://playneko.github.io/tags/iOS/">iOS</category>
      
      <category domain="https://playneko.github.io/tags/line/">line</category>
      
      <category domain="https://playneko.github.io/tags/LINE-STORE/">LINE STORE</category>
      
      <category domain="https://playneko.github.io/tags/OAuth/">OAuth</category>
      
      <category domain="https://playneko.github.io/tags/Objective-C/">Objective-C</category>
      
      <category domain="https://playneko.github.io/tags/OpenID/">OpenID</category>
      
      <category domain="https://playneko.github.io/tags/QR/">QR</category>
      
      <category domain="https://playneko.github.io/tags/SDK/">SDK</category>
      
      <category domain="https://playneko.github.io/tags/Swift/">Swift</category>
      
      <category domain="https://playneko.github.io/tags/Unity/">Unity</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%9D%B8/">라인</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A1%9C%EA%B7%B8%EC%9D%B8/">로그인</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0/">스마트폰</category>
      
      <category domain="https://playneko.github.io/tags/%ED%86%B5%ED%95%A9%EC%B1%84%EB%84%90/">통합채널</category>
      
      
      <comments>https://playneko.github.io/2020/06/27/chatbot/chatbot-001/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>이이다포치 누나라는것 4권 (치요 누나는… 유우군의 응석받이)</title>
      <link>https://playneko.github.io/2020/06/27/akihabara/akihabara-011/</link>
      <guid>https://playneko.github.io/2020/06/27/akihabara/akihabara-011/</guid>
      <pubDate>Fri, 26 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;이이다포치 누나라는것 4권 (치요 누나는… 유우군의 응석받이)&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="이이다포치-누나라는것-4권-치요-누나는…-유우군의-응석받이"><a href="#이이다포치-누나라는것-4권-치요-누나는…-유우군의-응석받이" class="headerlink" title="이이다포치 누나라는것 4권 (치요 누나는… 유우군의 응석받이)"></a>이이다포치 누나라는것 4권 (치요 누나는… 유우군의 응석받이)</h2><p><a href="">link</a></p><p><img src="001.png" alt="image"></p><p><a href="https://youtu.be/"><img src="http://img.youtube.com/vi/xxxx/0.jpg" alt="AkibaTV"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bash</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%95%84%ED%82%A4%EB%B0%94-%EC%A0%95%EB%B3%B4/">아키바 정보</category>
      
      
      
      <comments>https://playneko.github.io/2020/06/27/akihabara/akihabara-011/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 또는 리눅스 PHP에서 MariaDB 사용하기</title>
      <link>https://playneko.github.io/2020/06/26/rasberry-pi/rasberry-pi-031/</link>
      <guid>https://playneko.github.io/2020/06/26/rasberry-pi/rasberry-pi-031/</guid>
      <pubDate>Thu, 25 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 또는 리눅스 PHP에서 MariaDB 사용하기&lt;br&gt;라즈베리파이 또는 리눅스의 NPM (Nginx + PHP + MariaDB)을 이용해서….&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-또는-리눅스-PHP에서-MariaDB-사용하기"><a href="#라즈베리파이-또는-리눅스-PHP에서-MariaDB-사용하기" class="headerlink" title="라즈베리파이 또는 리눅스 PHP에서 MariaDB 사용하기"></a>라즈베리파이 또는 리눅스 PHP에서 MariaDB 사용하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>라즈베리파이 또는 리눅스의 NPM (Nginx + PHP + MariaDB)을 이용해서</p><p>MariaDB에 접속과 Connection, Select, Insert, Update, Delete 사용법을 알아보도록 하겠습니다.</p><p>그럼 우선 Visual Studio Code(비주얼 스튜디오 코드)를 실행해 주시기 바랍니다.</p><p>실행을 하셨으면 파일명을 php_mariadb.php로 추가를 해주시기 바랍니다.</p><p>그러면 PHP를 이용해서 MariaDB에 접속후 Select, Insert, Update, Delete를 해보도록 하겠습니다만</p><p>우선 MariaDB에 테이블을 생성을 하도록 하겠습니다.</p><p>아직 환경이나 DB가 설치가 안되어 있으신 분은 라즈베리파이 또는 리눅스에서 NPM (Nginx + PHP + MariaDB) 설치하기를 참고해주시기 바랍니다.</p><p><img src="002-18.png" alt="image"></p><p>우선 간단한 테이블을 만들어 보도록 하겠습니다.</p><p>phpMyAdmin에 로그인을 해주시기 바랍니다.</p><p>akibatv 데이터베이스를 펼치시면 New를 클릭해 주시기 바랍니다.</p><p>데이터베이스가 추가가 되어있지 않으신 분들은 JAVA에서 JDBC를 이용해 MariaDB 사용해 보기를 참고해 주시기 바랍니다.</p><p><img src="003-21.png" alt="image"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 테이블명, 칼럼, 종류, 사이즈등을 설정을 해주시기 바랍니다.</span><br><span class="line">----------+---------+--------</span><br><span class="line"> Name     | Type    | Size</span><br><span class="line">----------+---------+--------</span><br><span class="line"> name     | VARCHAR | 10</span><br><span class="line">----------+---------+--------</span><br><span class="line"> age      | INT     | 3</span><br><span class="line">----------+---------+--------</span><br><span class="line"> birthday | VARCHAR | 8</span><br><span class="line">----------+---------+--------</span><br><span class="line"> site_url | VARCHAR | 100</span><br><span class="line">----------+---------+--------</span><br></pre></td></tr></table></figure><p>위와같이 하셨으면 저장을해서 테이블을 추가를 해주시기 바랍니다.</p><p><img src="004-20.png" alt="image"></p><p>그러면 위와같이 test1이란 테이블이 추가가 되었습니다.</p><p>그러면 이제 본격적으로 코딩을 시작을 해보도록 하겠습니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)로 돌아오셔서 아래와같이 코딩을 해주시기 바랍니다.</p><p>MariaDB의 기반이 MySql로 되어 있기때문에 PHP에서 MariaDB를 사용하실땐 MySql라이브러리를 사용 합니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">    <span class="variable">$username</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line">    <span class="variable">$password</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line">    <span class="variable">$dbname</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 데이터베이스 생성</span></span><br><span class="line">    <span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 데이터베이스 접속</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;connect_error) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;데이터베이스 접속 실패 : &quot;</span> . <span class="variable">$conn</span>-&gt;connect_error);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;데이터베이스 접속 성공&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$conn</span>-&gt;close();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="001-1-1.png" alt="image"></p><p>위와같이 작성을 하셨으면 이제 데이터베이스에 정상적으로 연결이 되는지 확인을 해보도록 하겠습니다.</p><p>소스파일을 라즈베리파이의 웹폴더에 올려주시기 바랍니다.</p><p><img src="006-15.png" alt="image"></p><p>소스를 올려주셨으면 웹브라우저를 실행하시고 서버에 올린 PHP파일로 접속을 해주시기 바랍니다.</p><p>http://라즈베리파이서버 IP/php_mariadb.php</p><p><img src="007-12.png" alt="image"></p><p>위와같이 나오면 정상적으로 데이터베이스에 접속이 성공한것 입니다.</p><p>이제 Select, Insert, Update, Delete를 해보도록 하겠습니다.</p><p>파일명을 php_mariadb_insert.php로 추가를 하시고 아래와 같이 코딩을 해주시기 바랍니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">    <span class="variable">$username</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line">    <span class="variable">$password</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line">    <span class="variable">$dbname</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 데이터베이스 생성</span></span><br><span class="line">    <span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 데이터베이스 접속</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;connect_error) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;데이터베이스 접속 실패 : &quot;</span> . <span class="variable">$conn</span>-&gt;connect_error);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot; INSERT INTO test1 (name, age, birthday, site_url) &quot;</span>;</span><br><span class="line">    <span class="variable">$sql</span> .= <span class="string">&quot; VALUES (&#x27;AkibaTV&#x27;, &#x27;99&#x27;, &#x27;20200101&#x27;, &#x27;https://playneko.com/&#x27;); &quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;query(<span class="variable">$sql</span>) === <span class="literal">TRUE</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;데이터 추가 성공&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;에러 : &quot;</span> . <span class="variable">$sql</span> . <span class="string">&quot;&lt;br&gt;&quot;</span> . <span class="variable">$conn</span>-&gt;error;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$conn</span>-&gt;close();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="005-1-2.png" alt="image"></p><p>위와같이 작성을 하셨으면 소스파일을 라즈베리파이의 웹폴더에 올려주시기 바랍니다.</p><p><img src="009-8.png" alt="image"></p><p>소스를 올려주셨으면 웹브라우저를 실행하시고 서버에 올린 PHP파일로 접속을 해주시기 바랍니다.</p><p>http://라즈베리파이서버 IP/php_mariadb_insert.php</p><p>실행후 데이터베이스 Insert가 되었는지 확인을 해보도록 하겠습니다.</p><p><img src="010-8.png" alt="image"></p><p>데이터 추가 성공이라고 출력이 되었으면 실제로 데이터베이스</p><p>정상적으로 입력이 되었는지 확인을 해보도록 하겠습니다.</p><p><img src="011-7.png" alt="image"></p><p>데이터베이스에도 정상적으로 등록이 된것을 확인이 되었습니다.</p><p>이제 Select를 해보도록 하겠습니다.</p><p>파일명을 php_mariadb_select.php로 추가를 하시고 아래와 같이 코딩을 해주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    <span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">    <span class="variable">$username</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line">    <span class="variable">$password</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line">    <span class="variable">$dbname</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line"></span><br><span class="line">    // 데이터베이스 생성</span><br><span class="line">    <span class="variable">$conn</span> = new mysqli(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"></span><br><span class="line">    // 데이터베이스 접속</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;connect_error) &#123;</span><br><span class="line">        die(<span class="string">&quot;데이터베이스 접속 실패 : &quot;</span> . <span class="variable">$conn</span>-&gt;connect_error);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot; SELECT * FROM test1 &quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="variable">$conn</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span>-&gt;num_rows &gt; 0) &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="variable">$row</span> = <span class="variable">$result</span>-&gt;fetch_assoc()) &#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$row</span>[<span class="string">&#x27;name&#x27;</span>] . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$row</span>[<span class="string">&#x27;age&#x27;</span>] . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$row</span>[<span class="string">&#x27;birthday&#x27;</span>] . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$row</span>[<span class="string">&#x27;site_url&#x27;</span>] . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;결과 데이터가 없습니다.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$conn</span>-&gt;close();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="012-6.png" alt="image"></p><p>위와같이 작성을 하셨으면 소스파일을 라즈베리파이의 웹폴더에 올려주시기 바랍니다.</p><p><img src="013-7.png" alt="image"></p><p>소스를 올려주셨으면 웹브라우저를 실행하시고 서버에 올린 PHP파일로 접속을 해주시기 바랍니다.</p><p>http://라즈베리파이서버 IP/php_mariadb_select.php</p><p>실행후 웹브라우저에 Select한 데이터가 출력이 된것을 확인 하실수 있습니다.</p><p><img src="014-4.png" alt="image"></p><p>이제 Update를 해보도록 하겠습니다.</p><p>파일명을 php_mariadb_update.php로 추가를 하시고 아래와 같이 코딩을 해주시기 바랍니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">    <span class="variable">$username</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line">    <span class="variable">$password</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line">    <span class="variable">$dbname</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 데이터베이스 생성</span></span><br><span class="line">    <span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 데이터베이스 접속</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;connect_error) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;데이터베이스 접속 실패 : &quot;</span> . <span class="variable">$conn</span>-&gt;connect_error);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot; UPDATE test1 SET &quot;</span>;</span><br><span class="line">    <span class="variable">$sql</span> .= <span class="string">&quot; age = &#x27;11&#x27;, &quot;</span>;</span><br><span class="line">    <span class="variable">$sql</span> .= <span class="string">&quot; birthday = &#x27;19991201&#x27;, &quot;</span>;</span><br><span class="line">    <span class="variable">$sql</span> .= <span class="string">&quot; site_url = &#x27;https://akibatv.net/&#x27; &quot;</span>;</span><br><span class="line">    <span class="variable">$sql</span> .= <span class="string">&quot; WHERE name = &#x27;AkibaTV&#x27; &quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;query(<span class="variable">$sql</span>) === <span class="literal">TRUE</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;데이터 갱신 성공&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;에러 : 데이터 업데이트 실패&lt;br&gt;&quot;</span> . <span class="variable">$conn</span>-&gt;error;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$conn</span>-&gt;close();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="015-1-1.png" alt="image"></p><p>위와같이 작성을 하셨으면 소스파일을 라즈베리파이의 웹폴더에 올려주시기 바랍니다.</p><p><img src="016-5.png" alt="image"></p><p>소스를 올려주셨으면 웹브라우저를 실행하시고 서버에 올린 PHP파일로 접속을 해주시기 바랍니다.</p><p>http://라즈베리파이서버 IP/php_mariadb_update.php</p><p>실행후 웹브라우저에 데이터 갱신 성공 이라고 출력이 되셨으면 문제없이 갱신이 되었습니다.</p><p><img src="017-5.png" alt="image"></p><p>실제로 데이터베이스 정상적으로 갱신이 되었는지 확인을 해보도록 하겠습니다.</p><p><img src="018-5.png" alt="image"></p><p>데이터베이스에도 정상적으로 갱신이 된것을 확인이 되었습니다.</p><p>이제 Delete를 해보도록 하겠습니다.</p><p>파일명을 php_mariadb_delete.php로 추가를 하시고 아래와 같이 코딩을 해주시기 바랍니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">    <span class="variable">$username</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line">    <span class="variable">$password</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line">    <span class="variable">$dbname</span> = <span class="string">&quot;akibatv&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 데이터베이스 생성</span></span><br><span class="line">    <span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 데이터베이스 접속</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;connect_error) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;데이터베이스 접속 실패 : &quot;</span> . <span class="variable">$conn</span>-&gt;connect_error);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot; DELETE FROM test1 WHERE name = &#x27;AkibaTV&#x27; &quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;query(<span class="variable">$sql</span>) === <span class="literal">TRUE</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;데이터 삭제 성공&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;에러 : 데이터 삭제 실패&lt;br&gt;&quot;</span> . <span class="variable">$conn</span>-&gt;error;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$conn</span>-&gt;close();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="019-5.png" alt="image"></p><p>위와같이 작성을 하셨으면 소스파일을 라즈베리파이의 웹폴더에 올려주시기 바랍니다.</p><p><img src="020-5.png" alt="image"></p><p>소스를 올려주셨으면 웹브라우저를 실행하시고 서버에 올린 PHP파일로 접속을 해주시기 바랍니다.</p><p>http://라즈베리파이서버 IP/php_mariadb_delete.php</p><p>실행후 웹브라우저에 데이터 삭제 성공 이라고 출력이 되셨으면 문제없이 삭제가 된것입니다.</p><p><img src="021-3.png" alt="image"></p><p>실제로 데이터베이스 정상적으로 삭제가 되었는지 확인을 해보도록 하겠습니다.</p><p><img src="022-3.png" alt="image"></p><p>데이터베이스에도 정상적으로 삭제가 된것을 확인이 되었습니다.</p><p>이렇게해서 PHP로 MariaDB의 Select, Insert, Update, Delete를 해보았습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/PHP/">PHP</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/linux/">linux</category>
      
      <category domain="https://playneko.github.io/tags/nginx/">nginx</category>
      
      <category domain="https://playneko.github.io/tags/apache/">apache</category>
      
      <category domain="https://playneko.github.io/tags/chown/">chown</category>
      
      <category domain="https://playneko.github.io/tags/MariaDB/">MariaDB</category>
      
      <category domain="https://playneko.github.io/tags/NPM/">NPM</category>
      
      <category domain="https://playneko.github.io/tags/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/localhost/">localhost</category>
      
      <category domain="https://playneko.github.io/tags/www/">www</category>
      
      <category domain="https://playneko.github.io/tags/connection/">connection</category>
      
      <category domain="https://playneko.github.io/tags/delete/">delete</category>
      
      <category domain="https://playneko.github.io/tags/insert/">insert</category>
      
      <category domain="https://playneko.github.io/tags/select/">select</category>
      
      <category domain="https://playneko.github.io/tags/update/">update</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A7%88%EB%A6%AC%EC%95%84DB/">마리아DB</category>
      
      
      <comments>https://playneko.github.io/2020/06/26/rasberry-pi/rasberry-pi-031/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>섬머 타임 렌더 9권 외딴섬 타임루프 서스펜스!</title>
      <link>https://playneko.github.io/2020/06/26/akihabara/akihabara-010/</link>
      <guid>https://playneko.github.io/2020/06/26/akihabara/akihabara-010/</guid>
      <pubDate>Thu, 25 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;섬머 타임 렌더 9권 외딴섬 타임루프 서스펜스! (그림자를 사냥하라 공세로 돌아서라)&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="섬머-타임-렌더-9권-외딴섬-타임루프-서스펜스-그림자를-사냥하라-공세로-돌아서라"><a href="#섬머-타임-렌더-9권-외딴섬-타임루프-서스펜스-그림자를-사냥하라-공세로-돌아서라" class="headerlink" title="섬머 타임 렌더 9권 외딴섬 타임루프 서스펜스! (그림자를 사냥하라 공세로 돌아서라)"></a>섬머 타임 렌더 9권 외딴섬 타임루프 서스펜스! (그림자를 사냥하라 공세로 돌아서라)</h2><p><a href="">link</a></p><p><img src="001.png" alt="image"></p><p><a href="https://youtu.be/"><img src="http://img.youtube.com/vi/xxxx/0.jpg" alt="AkibaTV"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bash</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%95%84%ED%82%A4%EB%B0%94-%EC%A0%95%EB%B3%B4/">아키바 정보</category>
      
      
      
      <comments>https://playneko.github.io/2020/06/26/akihabara/akihabara-010/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 또는 리눅스에서 Nginx가상호스트 추가하기</title>
      <link>https://playneko.github.io/2020/06/25/rasberry-pi/rasberry-pi-030/</link>
      <guid>https://playneko.github.io/2020/06/25/rasberry-pi/rasberry-pi-030/</guid>
      <pubDate>Wed, 24 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 또는 리눅스에서 Nginx가상호스트 추가하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이 또는 리눅스에서 Nginx가상호스트 추가하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-또는-리눅스에서-Nginx가상호스트-추가하기"><a href="#라즈베리파이-또는-리눅스에서-Nginx가상호스트-추가하기" class="headerlink" title="라즈베리파이 또는 리눅스에서 Nginx가상호스트 추가하기"></a>라즈베리파이 또는 리눅스에서 Nginx가상호스트 추가하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 라즈베리파이 또는 리눅스에서 Nginx가상호스트 추가하기 입니다.</p><p>Nginx를 설치하시고 웹서버를 운영을 하는데 기본설정으로는 1개의 사이트밖에 연결을 할수가 없어서</p><p>도메인 갯수만큼 사이트를 연결하거나 아이피주소 1개로 다중사이트를 연결을 하고싶은데</p><p>어떻게 해야하는지 잘 모를경우에 어떻게하면 다중사이트로 연결을 시킬수 있는지</p><p>설명을 해드리도록 하겠습니다.</p><p>우선 기본적으로 라즈베리파이 또는 리눅스에 NPM (Nginx + PHP + MariaDB)을 설치를 해주시기 바랍니다.</p><p>저는 라즈베리파이를 사용하고 있기때문에 라즈베리파이를 기준으로 설명을 드리도록 하겠습니다.</p><p>우선 라즈베리파이를 VNC로 접속후 터미널을 실행을 해주시기 바랍니다.</p><p><img src="001-19.png" alt="image"></p><p>아래의 명령어를 입력을 해주셔서 경로를 이동을 합니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /etc/nginx/sites-available/</span><br></pre></td></tr></table></figure><p><img src="002-17.png" alt="image"></p><p>이동을 하셨으면 아래의 명령어를 입력을 해주셔서 새로운 가상호스트 파일을 추가를 합니다.</p><p>처음 사용자와 기존에 한번 해보신 분들을 위해서 준비를 했습니다.</p><p>처음 사용자의 경우는 파일을 새로 만들어 주셔야 하며</p><p>기존 사용자는 한번 만들어둔 파일을 추가로 복사를해서 수정해서 사용하실수가 있습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파일명의 경우에는 각자 원하시는 파일명으로 알아보기 쉽게 하시면 됩니다.</span></span><br><span class="line"><span class="comment"># 저의 경우에는 도메인명을 기준으로 파일명을 만들도록 하겠습니다.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 처음 생성하는 경우</span></span><br><span class="line">$ sudo vi test.akibatv.net</span><br><span class="line"></span><br><span class="line"><span class="comment"># 기존에 한번 만들어둔게 있는 경우</span></span><br><span class="line">$ sudo cp ./test.akibatv.net ./추가도메인.akibatv.net</span><br><span class="line">$ sudo vi 추가도메인.akibatv.net</span><br></pre></td></tr></table></figure><p>저는 처음 생성하는 기준으로 작성을 하도록 하겠습니다.</p><p>vi 에디터가 실행이 되셨으면 아래의 내용을 각자의 환경에 맞게 수정하셔서 작성을 해주세요.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">   # 포트번호는 원하시는 포트번호를 추가를 해주세요.</span><br><span class="line">   listen 8080;</span><br><span class="line">   listen [::]:8080;</span><br><span class="line"></span><br><span class="line">   server_name localhost;</span><br><span class="line"></span><br><span class="line">   # 홈페이지 루트 경로 설정</span><br><span class="line">   # 각자의 환경에 맞게 설정해 주세요.</span><br><span class="line">   # 저는 www밑에 test폴더를 연결 하도록 하겠습니다.</span><br><span class="line">   root /home/www/test;</span><br><span class="line">   index index.htm index.html index.php;</span><br><span class="line"></span><br><span class="line">   location / &#123;</span><br><span class="line">       try_files $uri $uri/ =404;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   location ~ \.php$ &#123;</span><br><span class="line">       include snippets/fastcgi-php.conf;</span><br><span class="line">       fastcgi_pass unix:/var/run/php/php7.3-fpm.sock;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="003-20.png" alt="image"></p><p>추가를 하시고 :wq로 저장후 에디터를 빠져 나오시기 바랍니다.</p><p><img src="004-19.png" alt="image"></p><p>리스트를 출력해 보시면 가상호스트 파일이 추가가 된걸 확인하실수 있습니다.</p><p>이제 추가한 가상호스트 파일을 Nginx에 적용이 되게끔 해주는 작업을 위해 아래의 명령어를 차례대로 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [sites-available]에 추가한 가상호스트 파일을</span></span><br><span class="line"><span class="comment"># [sites-enabled]에 심볼릭 링크를 걸어줍니다.</span></span><br><span class="line"><span class="comment"># 가상호스트에서 제외시에는 심볼릭 링크만 제거를 해주시면 됩니다.</span></span><br><span class="line">$ sudo ln -s /etc/nginx/sites-available/test.akibatv.net /etc/nginx/sites-enabled/test.akibatv.net</span><br><span class="line"><span class="comment"># 심볼릭 링크를 걸어준 경로로 이동 합니다.</span></span><br><span class="line">$ <span class="built_in">cd</span> /etc/nginx/sites-enabled/</span><br></pre></td></tr></table></figure><p><img src="005-15.png" alt="image"></p><p>이동하신 경로에 심볼릭 링크가 제대로 있는지 확인을 하신후 아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [sites-enabled]에 추가한 가상호스트가</span></span><br><span class="line"><span class="comment"># Nginx에 적용이 되게끔 해줍니다.</span></span><br><span class="line">$ sudo nginx -t</span><br><span class="line"></span><br><span class="line"><span class="comment"># Nginx서버를 재기동 합니다.</span></span><br><span class="line">$ sudo systemctl restart nginx</span><br></pre></td></tr></table></figure><p><img src="006-14.png" alt="image"></p><p>이렇게해서 가상호스트가 모두 완료가 되었습니다.</p><p>이제 실제로 제대로 연결이 되었는지 확인을 위해서 가상호스트에 설정한 경로로 이동을 합니다.</p><p><img src="007-11.png" alt="image"></p><p>여기에 간단한 웹페이지 하나를 추가를 해보도록 하겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># html파일을 추가합니다.</span></span><br><span class="line">$ sudo vi index.html</span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">vi</span>에디터가 실행이 되면</span><br><span class="line"># 아래의 내용을 입력 합니다.</span><br><span class="line">Hello, AkibaTV</span><br></pre></td></tr></table></figure><p><img src="008-10.png" alt="image"></p><p>작성이 끝나셨으면 :wq를 입력후 vi에디터를 저장후 종료 합니다.</p><p><img src="009-1-1.png" alt="image"></p><p>이제 추가한 파일의 사용자와 권한을 변경을 해주도록 하겠습니다.</p><p>아래의 명령어를 차례대로 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># index.html에 대해서 사용자와 그룹을 pi로 설정 합니다.</span></span><br><span class="line">$ sudo chown pi:pi index.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># 파일의 권한을 755로 설정 합니다.</span></span><br><span class="line">$ sudo chmod 755 index.html</span><br></pre></td></tr></table></figure><p><img src="010-7.png" alt="image"></p><p>위와같이 index.html의 사용자와 권한이 변경된것을 확인 하실수 있습니다.</p><p>그럼 실제 확인을 해보아야 하기에 웹브라우저를 실행해 주시기 바랍니다.</p><p>웹브라우저의 주소창에 http://가상호스트에 추가한 도메인 또는 아이피:8080</p><p>가상호스트에 추가한 포트번호를 가장뒤에 꼭 붙여주세요.</p><p><img src="011-6.png" alt="image"></p><p>접속을 하시면 정상적으로 접속이 되는것을 확인 하실수 있습니다.</p><p>이렇게해서 가상호스트를 추가하는 방법을 알아 보았습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Linux/">Linux</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/linux/">linux</category>
      
      <category domain="https://playneko.github.io/tags/sudo/">sudo</category>
      
      <category domain="https://playneko.github.io/tags/nginx/">nginx</category>
      
      <category domain="https://playneko.github.io/tags/apache/">apache</category>
      
      <category domain="https://playneko.github.io/tags/chown/">chown</category>
      
      <category domain="https://playneko.github.io/tags/NPM/">NPM</category>
      
      <category domain="https://playneko.github.io/tags/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8B%AC%EB%B3%BC%EB%A6%AD-%EB%A7%81%ED%81%AC/">심볼릭 링크</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/localhost/">localhost</category>
      
      <category domain="https://playneko.github.io/tags/virtualhost/">virtualhost</category>
      
      <category domain="https://playneko.github.io/tags/www/">www</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B0%80%EC%83%81%ED%98%B8%EC%8A%A4%ED%8A%B8/">가상호스트</category>
      
      
      <comments>https://playneko.github.io/2020/06/25/rasberry-pi/rasberry-pi-030/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>마기아 레코드 마도카☆마기카 외전 2권 (소녀들의 소원이 운명을 바꾼다)</title>
      <link>https://playneko.github.io/2020/06/25/akihabara/akihabara-009/</link>
      <guid>https://playneko.github.io/2020/06/25/akihabara/akihabara-009/</guid>
      <pubDate>Wed, 24 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;코미컬라이즈 마기아레코드 마도카☆마기카 외전 2권 (소녀들의 소원이 운명을 바꾼다)&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="코미컬라이즈-마기아레코드-마도카☆마기카-외전-2권-소녀들의-소원이-운명을-바꾼다"><a href="#코미컬라이즈-마기아레코드-마도카☆마기카-외전-2권-소녀들의-소원이-운명을-바꾼다" class="headerlink" title="코미컬라이즈 마기아레코드 마도카☆마기카 외전 2권 (소녀들의 소원이 운명을 바꾼다)"></a>코미컬라이즈 마기아레코드 마도카☆마기카 외전 2권 (소녀들의 소원이 운명을 바꾼다)</h2><p><a href="">link</a></p><p><img src="001.png" alt="image"></p><p><a href="https://youtu.be/"><img src="http://img.youtube.com/vi/xxxx/0.jpg" alt="AkibaTV"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bash</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%95%84%ED%82%A4%EB%B0%94-%EC%A0%95%EB%B3%B4/">아키바 정보</category>
      
      
      
      <comments>https://playneko.github.io/2020/06/25/akihabara/akihabara-009/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 웹서버에서 jQuery.getJSON() 사용하기</title>
      <link>https://playneko.github.io/2020/06/24/rasberry-pi/rasberry-pi-029/</link>
      <guid>https://playneko.github.io/2020/06/24/rasberry-pi/rasberry-pi-029/</guid>
      <pubDate>Tue, 23 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 웹서버에서 jQuery.getJSON() 사용하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이 웹서버에서 jQuery.getJSON() 사용하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-웹서버에서-jQuery-getJSON-사용하기"><a href="#라즈베리파이-웹서버에서-jQuery-getJSON-사용하기" class="headerlink" title="라즈베리파이 웹서버에서 jQuery.getJSON() 사용하기"></a>라즈베리파이 웹서버에서 jQuery.getJSON() 사용하기</h2><p>안녕하세요. AkibaTV 입니다.</p><p>이번에 소개할 내용은 라즈베리파이 웹서버에서 jQuery.getJSON() 사용하기 입니다.</p><p>JSON데이터를 서버에서 생성된 데이터나 다른 웹사이트에서 받아온 데이터를 웹에서 jQuery를</p><p>이용하여 어떻게 파싱처리를 해서 웹에 표시를 해주는지 대해서 해보도록 하겠습니다.</p><p>기본적인 처리에 대한것은 jQuery라이브러리 내부에서 처리를 해주기때문에 어렵지 않게</p><p>간단하게 구현이 가능 합니다.</p><h4 id="getJSON-이란"><a href="#getJSON-이란" class="headerlink" title=".getJSON()이란"></a>.getJSON()이란</h4><p>서버로 전송된 데이터는 쿼리 문자열로 URL에 추가됩니다.</p><p>data매개 변수의 값이 일반 객체인 경우 문자열로 변환되고 URL에 추가되기 전에 URL로 인코딩됩니다.</p><h4 id="사용-문법"><a href="#사용-문법" class="headerlink" title="사용 문법"></a>사용 문법</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">jQuery.getJSON( url [, data ] [, success ] )</span><br><span class="line"></span><br><span class="line">url</span><br><span class="line"># Type: String</span><br><span class="line"># 요청이 전송 된 URL을 포함하는 문자열입니다.</span><br><span class="line"></span><br><span class="line">data</span><br><span class="line"># Type: PlainObject or String</span><br><span class="line"># 요청과 함께 서버로 전송되는 일반 객체 또는 문자열입니다.</span><br><span class="line"></span><br><span class="line">success</span><br><span class="line"># Type: Function( PlainObject data, String textStatus, jqXHR jqXHR )</span><br><span class="line"># 요청이 성공하면 실행되는 콜백 함수입니다.</span><br></pre></td></tr></table></figure><p>간단하게 JSON데이터를 만들고 만든 JSON데이터를 getJSON을 이용해</p><p>읽어들인 데이터를 화면에 출력하는것을 해보도록 하겠습니다.</p><p>그럼 우선 Visual Studio Code(비주얼 스튜디오 코드)를 실행해 주시기 바랍니다.</p><p>실행을 하셨으면 파일명을 test1.json로 추가를 해주시기 바랍니다.</p><p><img src="001-18.png" alt="image"></p><p>아래의 코드를 작성해 주시기 바랍니다.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;AkibaTV&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span> : <span class="string">&quot;99&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;birth&quot;</span> : <span class="string">&quot;2020/01/01&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;url&quot;</span> : <span class="string">&quot;https://playneko.com/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span> : <span class="string">&quot;https://playneko.com/wp-content/uploads/2020/04/cropped-avatarimg_user1.png&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="002-16.png" alt="image"></p><p>그럼 jQuery를 이용해서 소스코드를 작성을 해보도록 하겠습니다.</p><p>파일명은 jquery_getJSON.html로 추가를 해주시고 아래와 같이 코딩을 해주시기 바랍니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>AkibaTV<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="built_in">document</span>).ready( <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#button&#x27;</span>).click( <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $.getJSON(<span class="string">&quot;./test1.json&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> data </span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> items = [];</span></span><br><span class="line"><span class="javascript">                $.each( data, <span class="function"><span class="keyword">function</span>(<span class="params"> key, val </span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (key == <span class="string">&quot;avatar&quot;</span>) &#123;</span></span><br><span class="line"><span class="javascript">                        $(<span class="string">&#x27;.text&#x27;</span>).append( <span class="string">&quot;&lt;p&gt;&lt;img src=&#x27;&quot;</span> + val + <span class="string">&quot;&#x27;&gt;&lt;/p&gt;&quot;</span> );</span></span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                        $(<span class="string">&#x27;.text&#x27;</span>).append( <span class="string">&quot;&lt;p&gt;&quot;</span> + key + <span class="string">&quot;:&quot;</span> + val + <span class="string">&quot;&lt;/p&gt;&quot;</span> );</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;버튼&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="003-19.png" alt="image"></p><p>버튼을 누르면 화면에 JSON데이터를 파싱후 출력하는 처리를 만들어 보았습니다.</p><p>실제로 제대로 동작을 하는지 확인을 해보도록 하겠습니다.</p><p>작성을 하신 소스파일을 라즈베리파이 웹서버 또는 개인서버, 호스팅서버에 업로드를 해주시기 바랍니다.</p><p>저는 라즈베리파이에 웹서버를 구축을 해두었기때문에 라즈베리파이 웹서버를 이용하도록 하겠습니다.</p><p><img src="004-18.png" alt="image"></p><p>서버에 파일이 올라간것을 확인이 되셨으면 웹브라우저를 실행해 주세요.</p><p>웹브라우저의 URL에 http://각웹서버URL/jquery_getJSON.html 를 실행해 주세요.</p><p><img src="005-14.png" alt="image"></p><p>처음 접속해서 실행하시면 버튼하나만 표시되어 있는 상태 입니다.</p><p>버튼을 눌러주시면 아래와 같이 나오게 됩니다.</p><p><img src="006-13.png" alt="image"></p><p>텍스트의 경우는 그대로 출력을 하게 했으며</p><p>이미지주소의 경우에는 이미지 태그를 이용해서 출력을 하도록 했습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/JavaScript/">JavaScript</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/server/">server</category>
      
      <category domain="https://playneko.github.io/tags/nginx/">nginx</category>
      
      <category domain="https://playneko.github.io/tags/apache/">apache</category>
      
      <category domain="https://playneko.github.io/tags/NPM/">NPM</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/html/">html</category>
      
      <category domain="https://playneko.github.io/tags/jQuery/">jQuery</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EC%82%AC%EC%9D%B4%ED%8A%B8/">웹사이트</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%B4%EB%AF%B8%EC%A7%80/">이미지</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%94%A9/">코딩</category>
      
      <category domain="https://playneko.github.io/tags/%ED%83%9C%EA%B7%B8/">태그</category>
      
      <category domain="https://playneko.github.io/tags/%ED%94%84%EB%A1%A0%ED%8A%B8/">프론트</category>
      
      <category domain="https://playneko.github.io/tags/ajax/">ajax</category>
      
      <category domain="https://playneko.github.io/tags/getJSON/">getJSON</category>
      
      <category domain="https://playneko.github.io/tags/%EC%86%8C%EC%8A%A4/">소스</category>
      
      
      <comments>https://playneko.github.io/2020/06/24/rasberry-pi/rasberry-pi-029/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SPY×FAMILY 3권 발매 신시대 스파이 가족 코미디! 남편 vs 동생 발발?</title>
      <link>https://playneko.github.io/2020/06/24/akihabara/akihabara-008/</link>
      <guid>https://playneko.github.io/2020/06/24/akihabara/akihabara-008/</guid>
      <pubDate>Tue, 23 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;SPY×FAMILY 3권 발매 신시대 스파이 가족 코미디!남편 vs 동생 발발?&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="SPY×FAMILY-3권-발매-신시대-스파이-가족-코미디-남편-vs-동생-발발"><a href="#SPY×FAMILY-3권-발매-신시대-스파이-가족-코미디-남편-vs-동생-발발" class="headerlink" title="SPY×FAMILY 3권 발매 신시대 스파이 가족 코미디!남편 vs 동생 발발?"></a>SPY×FAMILY 3권 발매 신시대 스파이 가족 코미디!남편 vs 동생 발발?</h2><p><img src="2_1ddaeced26fed154c3dffc633489970e.png" alt="image"></p><p>엔도 타츠야씨의 코믹스</p><p>SPY×FAMILY 3권 발매 (남편 vs 동생, 발발?대반향! 새시대 스파이 가족 코미디!)</p><p><img src="3_b34a6211df28751e4ec591cd899b7e65.png" alt="image"></p><p>(판별한다! 이 남자가 우리집에 해를 끼치는 존재인지 아닌지를…!)</p><p><img src="4_daaa589327be68eeb9583dd7ecc741a1.png" alt="image"></p><p>남편 : 실은 스파이(이 대답, 들은 기억이 있다 이것은?</p><p>동국의 정보기관이 사용하고 있는 지어낸 이야기의 메뉴얼 중 하나…!)</p><p><img src="5_3d5bdb0ae9198a3e0664de8193868461.png" alt="image"></p><p>창이 날아오든 핵폭탄이 쏟아지든 난 평생 그녀를 지켜낼 거예요.</p><p>(남자는 당당한 거짓말쟁이였다)</p><p><img src="6_aaeedcbfc5cd9055bf3ab1834094fe62.png" alt="image"></p><p>애니메이트 아키하바라본관</p><p>특전 : 일러스트 카드</p><p><img src="7_31cfe6074ad58cb05e2533e56d984911.png" alt="image"></p><p>토라노아나 아키하바라점A</p><p>특전 : 일러스트 카드</p><p><img src="8_0accfe2d045a8a05cfc4253a9f422b34.png" alt="image"></p><p>게이머즈 본점</p><p>엔도 타츠야씨가 소년 점프+로 연재되고 있는 코믹스 (SPY×FAMILY 3권)이 4일에 발매 되었다.</p><p>「SPY×FAMILY」는 1권 발매시의 코믹 나탈리에 의하면 「처절한 스파이·황혼을 축으로 그리는 홈 코메디」</p><p>3권의 첫 줄거리에서는 「전쟁을 기획하는 동국의 요원 데즈몬드의 계획을 밝혀내기 위해, 조국 첩보원의〈황혼〉은</p><p>가족을 만들어 아이를 명문 학교에 입학시키도록 명한다.</p><p>하지만 우연찮게도 그가 고아원에서 입양한 딸은 초능력자, 이해가 일치한 아내는 킬러였다!로 시작한 이야기로,</p><p>이 만화가 엄청난 2020의 남자편에서 선두로 뽑힌, 남편 : 스파이, 아내 : 청부업자, 딸 : 초능력자인 이야기다.</p><p><img src="10_e157eff151985b696497d6520535ffc2.png" alt="image"></p><p>지금 여기서 키스해봐</p><p>“엣!?”</p><p><img src="11_1a221f0f24812e2eeefaf1fe016fdc79.png" alt="image"></p><p>두근두근두근두근</p><p><img src="12_4397be5fd10ac6c7e035853d861e9595.png" alt="image"></p><p>이제 나도 최대한 그녀를 지탱할테니</p><p>둘이서 함께 요르씨를 행복하게 합시다!</p><p><img src="13_79385ac09ea3e1a5be45866cfcf81f7f.png" alt="image"></p><p>딸 : 초능력자</p><p><img src="14_6320933f5d749879ee7c4ce5a5899e80.png" alt="image"></p><p>비밀경찰!</p><p>포저 가문을 무너 뜨릴뻔 했어요.</p><p><img src="15_eece7dbcbe397d0b8883d7117ce90237.png" alt="image"></p><p>아내 : 암살자 “결혼 상대가 로이드씨라서 다행입니다!”</p><p><img src="16_b77416d06d2ab18e023ab06a060dcdfe.png" alt="image"></p><p>“왜 그래?”</p><p><img src="17_c51c73935c4b5ccc72010b9e0b58419d.png" alt="image"></p><p>“아빠와 엄마는 친해!”</p><p>필살 별잡는 빛의 화살!</p><p><img src="18_c6bf224a494f27fd70919f0a84127ee6.png" alt="image"></p><p>인명구조의 공로로 별을 수여한다!</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%95%84%ED%82%A4%EB%B0%94-%EC%A0%95%EB%B3%B4/">아키바 정보</category>
      
      
      <category domain="https://playneko.github.io/tags/%EC%95%84%ED%82%A4%ED%95%98%EB%B0%94%EB%9D%BC/">아키하바라</category>
      
      <category domain="https://playneko.github.io/tags/akihabara/">akihabara</category>
      
      <category domain="https://playneko.github.io/tags/%E7%A7%8B%E8%91%89%E5%8E%9F/">秋葉原</category>
      
      <category domain="https://playneko.github.io/tags/%E3%82%A2%E3%82%AD%E3%83%90/">アキバ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A7%8C%ED%99%94/">만화</category>
      
      <category domain="https://playneko.github.io/tags/%EC%95%84%ED%82%A4%EB%B0%94/">아키바</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8B%A0%EA%B0%84/">신간</category>
      
      <category domain="https://playneko.github.io/tags/%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%ED%8A%B8/">애니메이트</category>
      
      <category domain="https://playneko.github.io/tags/%ED%86%A0%EB%9D%BC%EB%85%B8%EC%95%84%EB%82%98/">토라노아나</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B2%8C%EC%9D%B4%EB%A8%B8%EC%A6%88/">게이머즈</category>
      
      <category domain="https://playneko.github.io/tags/%EC%86%8C%EB%85%84%EC%A0%90%ED%94%84/">소년점프</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%BC%EB%9F%AC%EC%8A%A4%ED%8A%B8-%EC%B9%B4%EB%93%9C/">일러스트 카드</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%AF%B9%EC%8A%A4/">코믹스</category>
      
      <category domain="https://playneko.github.io/tags/SPY%C3%97FAMILY/">SPY×FAMILY</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8A%A4%ED%8C%8C%EC%9D%B4/">스파이</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8A%A4%ED%8C%8C%EC%9D%B4-%EA%B0%80%EC%A1%B1/">스파이 가족</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B2%AD%EB%B6%80%EC%97%85%EC%9E%90/">청부업자</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B4%88%EB%8A%A5%EB%A0%A5%EC%9E%90/">초능력자</category>
      
      
      <comments>https://playneko.github.io/2020/06/24/akihabara/akihabara-008/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>우리는 공부를 못해 15권 (귀신 리즈린 우르카의 대활약)</title>
      <link>https://playneko.github.io/2020/06/23/akihabara/akihabara-007/</link>
      <guid>https://playneko.github.io/2020/06/23/akihabara/akihabara-007/</guid>
      <pubDate>Mon, 22 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;우리는 공부를 못해 15권 (귀신 리즈린 우르카의 대활약)&lt;br&gt;우리는 공부를 못해 15권 발매 (못하는 처녀들이여 큰뜻을 품어라.)&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="우리는-공부를-못해-15권-귀신-리즈린-우르카의-대활약"><a href="#우리는-공부를-못해-15권-귀신-리즈린-우르카의-대활약" class="headerlink" title="우리는 공부를 못해 15권 (귀신 리즈린 우르카의 대활약)"></a>우리는 공부를 못해 15권 (귀신 리즈린 우르카의 대활약)</h2><p><img src="2_05afba5c6d282e0770743ede0217d8cf.png" alt="image"></p><p>츠츠이 다이시씨의 코믹스</p><p>우리는 공부를 못해 15권 발매 (못하는 처녀들이여 큰뜻을 품어라.)</p><p><img src="3_59f9a38c081fc372e8c6f0f6e529a187.png" alt="image"></p><p>무슨일 있어요? 시게유키씨</p><p>“아, 아니 요즘… 너 어디 달라졌다?”</p><p><img src="4_c3444a6d5d80f1f9cb559437d3174ac3.png" alt="image"></p><p>몸가짐도 부드러워지고, 마음 탓인지 잘 웃어주게 되고,</p><p>걱정도 많이 했는데 건강해지니 정말 다행이야.</p><p><img src="5_523d192f0dea5c5f1c21a8d33afdcbc5.png" alt="image"></p><p>전보다 여자다워졌다고나 할까.. 너무 예뻐졌다..라고나 할까..</p><p><img src="6_7a4678cd42e91583e93e93cca8fda0fb.png" alt="image"></p><p>게이머즈 본점</p><p><img src="7_e77aac09e8b983ef775137774b315a8d.png" alt="image"></p><p>토라노아나 아키하바라점A</p><p><img src="8_c46504084c9ac2a0deec5ab961394463.png" alt="image"></p><p>애니메이트 아키하바라본관</p><p>특전: 일러스트 카드</p><p>츠츠이 다이시씨가 주간 소년 점프에서 연재되고 있는 코믹스 “우리는 공부를 못해” 15권이 4일에 발매가 되었다.</p><p><img src="10_024e8c6df4b74a4c08f8f7379c5503b2.png" alt="image"></p><p>위험해! 수능시험이 와버려!</p><p>“우, 우동을! 우동을 먹어서 안정을 찾아야대”</p><p><img src="11_a8a160b405d3fe56ad1c85c82743f0c4.png" alt="image"></p><p>회관 앞에서 허둥지둥해도 어쩔수 없지!? 갠찮아!</p><p>시게유키의 일은… 내가 어떻게든 할테니까! (시험 시작까지 30분…)</p><p><img src="12_6cef3569b1e2df8685b0e2758bbcc6e4.png" alt="image"></p><p>달려, 나리유키. 괜찮으니까, 나한테 체중을 맡겨 후회 되지 않게 하겠어</p><p><img src="13_f580261092574729a333f91fe3aaa214.png" alt="image"></p><p>후배 여동생인가, 제대로 만나는건 처음이네</p><p><img src="14_6c6d601cc3758b57659adb4db41f6dd7.png" alt="image"></p><p>뭐야 이거</p><p>“옛날에 잘 탔잖아 이거”</p><p><img src="15_17a538d18fde42e174d300ef59d37f94.png" alt="image"></p><p>꺄아악! 꺄아악!</p><p><img src="16_b287de858e8fe6d196449498d94e013b.png" alt="image"></p><p>극복한것은 저들 자신의 힘이에요.</p><p><img src="17_46347b72055b2dafe78d5f6eddcc339e.png" alt="image"></p><p>감사합니다</p><p><img src="18_aa01cdd02dd941c69b5c1a1e285a252b.png" alt="image"></p><p>미.. 미안!</p><p>그…그냥 이상한 자세로…!</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%95%84%ED%82%A4%EB%B0%94-%EC%A0%95%EB%B3%B4/">아키바 정보</category>
      
      
      <category domain="https://playneko.github.io/tags/%EC%95%84%ED%82%A4%ED%95%98%EB%B0%94%EB%9D%BC/">아키하바라</category>
      
      <category domain="https://playneko.github.io/tags/akihabara/">akihabara</category>
      
      <category domain="https://playneko.github.io/tags/%E7%A7%8B%E8%91%89%E5%8E%9F/">秋葉原</category>
      
      <category domain="https://playneko.github.io/tags/%E3%82%A2%E3%82%AD%E3%83%90/">アキバ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A7%8C%ED%99%94/">만화</category>
      
      <category domain="https://playneko.github.io/tags/%EC%95%84%ED%82%A4%EB%B0%94/">아키바</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8B%A0%EA%B0%84/">신간</category>
      
      <category domain="https://playneko.github.io/tags/%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%ED%8A%B8/">애니메이트</category>
      
      <category domain="https://playneko.github.io/tags/%ED%86%A0%EB%9D%BC%EB%85%B8%EC%95%84%EB%82%98/">토라노아나</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B2%8C%EC%9D%B4%EB%A8%B8%EC%A6%88/">게이머즈</category>
      
      <category domain="https://playneko.github.io/tags/%EC%86%8C%EB%85%84%EC%A0%90%ED%94%84/">소년점프</category>
      
      <category domain="https://playneko.github.io/tags/%EC%88%98%EB%8A%A5%EC%8B%9C%ED%97%98/">수능시험</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9A%B0%EB%8F%99/">우동</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9A%B0%EB%A6%AC%EB%8A%94-%EA%B3%B5%EB%B6%80%EB%A5%BC-%EB%AA%BB%ED%95%B4/">우리는 공부를 못해</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%BC%EB%9F%AC%EC%8A%A4%ED%8A%B8-%EC%B9%B4%EB%93%9C/">일러스트 카드</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%AF%B9%EC%8A%A4/">코믹스</category>
      
      
      <comments>https://playneko.github.io/2020/06/23/akihabara/akihabara-007/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>micro:bit 마이크로비트 처음 사용자 코딩방법 소개</title>
      <link>https://playneko.github.io/2020/06/23/micro-bit/micro-bit-001/</link>
      <guid>https://playneko.github.io/2020/06/23/micro-bit/micro-bit-001/</guid>
      <pubDate>Mon, 22 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;micro:bit 마이크로비트 처음 사용자 코딩방법 소개&lt;br&gt;이번에 소개할 내용은 micro:bit 마이크로비트 처음 사용자 코딩방법 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="micro-bit-마이크로비트-처음-사용자-코딩방법-소개"><a href="#micro-bit-마이크로비트-처음-사용자-코딩방법-소개" class="headerlink" title="micro:bit 마이크로비트 처음 사용자 코딩방법 소개"></a>micro:bit 마이크로비트 처음 사용자 코딩방법 소개</h2><p>안녕하세요. AkibaTV 입니다.</p><p>이번에 소개할 내용은 micro:bit 마이크로비트 처음 사용자 코딩방법 입니다.</p><p>처음 마이크로 비트를 구매하시고 어떻게 코딩해서 어떻게 동작시키는지</p><p>기본 방법을 같이 해보도록 하겠습니다.</p><p>마이크로비트 코딩을 위해서 마이크로소프트가 제공하는 개발툴을 이용해 보도록 하겠습니다.</p><p>아래의 사이트로 접속하시면 바로 프로젝트 생성과 개발이 가능 합니다.</p><p><a href="https://makecode.microbit.org/">https://makecode.microbit.org/</a></p><p><img src="20200619_224643.png" alt="image"></p><p>사이트에 접속을 하시면 위와같이 내 프로젝트를 생성하는 버튼과</p><p>따라만 해도 구현이 가능한 예제들과 영상들이 있습니다.</p><p>우선 새 프로젝트를 생성 해보도록 하겠습니다.</p><p>새 프로젝트 버튼을 눌러주세요.</p><p><img src="20200619_225134.png" alt="image"></p><p>위와같이 나오시면 생성하실 프로젝트명을 입력하시고</p><p>옵션은 기본으로 하시고 만들기 버튼을 눌러주시기 바랍니다.</p><p><img src="20200619_225323.png" alt="image"></p><p>프로젝트를 만드시면 위와같이 새 프로젝트가 생성이 되었습니다.</p><p>왼쪽메뉴에서 만들고싶은 메뉴를 선택후 실행화면에 끌어다 놓으시면</p><p>하단의 마이크로비트 화면으로 동작화면을 테스트를 해보실수가 있게 됩니다.</p><p><img src="20200620_182654.png" alt="image"></p><p>간단한 작업에 대해서는 끌어다 놓고 실행만으로 코딩이 끝나게 됩니다.</p><p>간단한 작업에 대해서는 끌어다 놓고 실행만으로 코딩이 끝나게 됩니다.</p><p><img src="005-13.png" alt="image"></p><p>그럼 왼쪽 하단의 …버튼을 누르시고 장치 페어링을 클릭해 주세요.</p><p><img src="006-12.png" alt="image"></p><p>그럼 위와같이 장치 연결방법에 대한 설명이 나오며 장치페어링 버튼을 눌러주세요.</p><p><img src="007-10.png" alt="image"></p><p>그럼 장치를 연결할 장치 목록이 나오며 장치를 선택하시면 장치가 연결이 완료가 됩니다.</p><p><img src="008-9.png" alt="image"></p><p>장치 연결까지 되셨으면 이제 작업한 결과물을 장치에서 직접 확인을 해야하니 왼쪽하단의 … 옆 버튼을 눌러주시면</p><p>현재 만들어진 프로젝트가 다운로드를 시작하면서 장치에 업로드를 하게 됩니다.</p><p><img src="009-7.png" alt="image"></p><p>다운로드가 완료가 되면 장치에 프로그램이 입력이 되며 자동으로 마이크로 비트에서 실행이 됩니다.</p><p><img src="001-7-1536x1396.jpg" alt="image"></p><p>위와같이 나오시면 성공적으로 되었습니다.</p><p>다음에는 좀더 다양한 주제의 마이크로비트 프로젝트를 해보도록 하겠습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/micro-bit/">micro:bit</category>
      
      
      <category domain="https://playneko.github.io/tags/%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%86%8C%ED%94%84%ED%8A%B8/">마이크로소프트</category>
      
      <category domain="https://playneko.github.io/tags/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/">프로젝트</category>
      
      <category domain="https://playneko.github.io/tags/%EC%95%84%ED%82%A4%ED%95%98%EB%B0%94%EB%9D%BC/">아키하바라</category>
      
      <category domain="https://playneko.github.io/tags/akihabara/">akihabara</category>
      
      <category domain="https://playneko.github.io/tags/%EC%95%84%ED%82%A4%EB%B0%94/">아키바</category>
      
      <category domain="https://playneko.github.io/tags/micro/">micro</category>
      
      <category domain="https://playneko.github.io/tags/micro-bit/">micro:bit</category>
      
      <category domain="https://playneko.github.io/tags/microsoft/">microsoft</category>
      
      <category domain="https://playneko.github.io/tags/%E3%82%A2%E3%82%AD%E3%83%90%E7%A7%8B%E8%91%89%E5%8E%9F/">アキバ秋葉原</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C/">마이크로</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EB%B9%84%ED%8A%B8/">마이크로비트</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9E%A5%EC%B9%98/">장치</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8E%98%EC%96%B4%EB%A7%81/">페어링</category>
      
      
      <comments>https://playneko.github.io/2020/06/23/micro-bit/micro-bit-001/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>府中 3억엔 사건을 계획·실행 한것은 나입니다. 2권 독백 청춘담!</title>
      <link>https://playneko.github.io/2020/06/22/akihabara/akihabara-006/</link>
      <guid>https://playneko.github.io/2020/06/22/akihabara/akihabara-006/</guid>
      <pubDate>Sun, 21 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;府中 3억엔 사건을 계획·실행 한것은 나입니다. 2권 독백 청춘담! 충격의 결말로!&lt;br&gt;코미컬라이즈  “府中 3억엔 사건을 계획·실행 한것은 나입니다.” 최종 2권 발매&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="府中-3억엔-사건을-계획·실행-한것은-나입니다-2권-독백-청춘담-충격의-결말로"><a href="#府中-3억엔-사건을-계획·실행-한것은-나입니다-2권-독백-청춘담-충격의-결말로" class="headerlink" title="府中 3억엔 사건을 계획·실행 한것은 나입니다. 2권 독백 청춘담! 충격의 결말로!"></a>府中 3억엔 사건을 계획·실행 한것은 나입니다. 2권 독백 청춘담! 충격의 결말로!</h2><p><img src="2_9b6a253630be45ff071910bc30c0d0cd.png" alt="image"></p><p>코미컬라이즈  “府中 3억엔 사건을 계획·실행 한것은 나입니다.” 최종 2권 발매</p><p>독백 청춘담 만화화 작품! 완결! 충격의 결말로!</p><p><img src="3_e3173a6ddfbd6a0f7fc8456d3f415d3b.png" alt="image"></p><p>이번 현금 수송차 강탈작전에 삼신 회장은 정보원으로 이용한다.</p><p>어이구 거짓말이지? 너 나 이상으로 여자의 적이구나.</p><p><img src="4_3b65a5e5eb1e3688faf59f75c94c8a2c.png" alt="image"></p><p>미군기지는 일본 경찰이 수사할수 없는 곳이래요.</p><p>수사가 잠잠 해질때까지 거기 숨으면 되지 않겠냐고</p><p><img src="5_0ca8861d7b30829e7d4e19f42a0bca04.png" alt="image"></p><p>“현금 수송차 강탈 작전의 개요와 목적은 일본 신탁은행의 지점(미정)</p><p>당일 경찰오토바이와 경찰로 분장해 현금 수송차를 세운다.”</p><p><img src="6_8ca06c8f0adee4df009ea36497e56d02.png" alt="image"></p><p>애니메이트 아키하바라 본관</p><p><img src="7_9e009b86d4d29ddf9f7f586dea193812.png" alt="image"></p><p>토라노아나 아키하바라점 A</p><p><img src="8_394c195870bb1cc6357a422e849900c7.png" alt="image"></p><p>COMICZIN 아키하바라점</p><p><img src="10_454712a250e37233837fc639f569487d.png" alt="image"></p><p>시라타군이 본명이니까, 시라타군이 좋다고 생각했었어</p><p>지금은 사귀는 사람이 있지만 정말 중요한 이야기는 시라타군에게 들었으면 해서 말이야…</p><p><img src="11_c18253988cd0304926a770ad289638a7.png" alt="image"></p><p>이 순간, 내가 계획하고 실행한 府中 3억엔 사건의 동기가</p><p>다 나온거죠 인생을 거는 이유가 연애 외에 또 있을까요?</p><p><img src="12_00a50da274969ebfb05a6737d9eaa5d7.png" alt="image"></p><p>(나중에 전후 범죄사에 이름을 올리는 府中 3억엔 사건 완전 범죄를 향하여</p><p>※1968년 당시의 3억엔은 현재는 20억엔에 가까운 가치</p><p><img src="13_d446bb4250573b78bee1ded8fade2a6b.png" alt="image"></p><p>오토바이가 말이야… 흰색 오토바이와 같은 차종은 별로 없어</p><p><img src="14_3cedcfdd74a3614496338a60a541aca1.png" alt="image"></p><p>쇼고가 품은 아버지, 사회적 권력에 대한 증오에는, 상식을 벗어난것이다</p><p><img src="15_eb0a97721226c72a673e8dcd77fbbf40.png" alt="image"></p><p>나를두고 혼자 가거나 하지는 않겠지?</p><p><img src="16_2bcfde5e5e669d7e5932cd93d72f8f8f.png" alt="image"></p><p>수송차 전방을 자동차로 달리며 경로를 확인</p><p><img src="17_e6445cef17b0bbc027ea6a2fb6a5682e.png" alt="image"></p><p>터진다! 빨리 도망쳐! 빨리!</p><p><img src="18_3da97c6bd1cae27c6948b138d6df768c.png" alt="image"></p><p>공소시효가 끝나면? 결혼하자</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%95%84%ED%82%A4%EB%B0%94-%EC%A0%95%EB%B3%B4/">아키바 정보</category>
      
      
      <category domain="https://playneko.github.io/tags/%EC%95%84%ED%82%A4%ED%95%98%EB%B0%94%EB%9D%BC/">아키하바라</category>
      
      <category domain="https://playneko.github.io/tags/akihabara/">akihabara</category>
      
      <category domain="https://playneko.github.io/tags/%E7%A7%8B%E8%91%89%E5%8E%9F/">秋葉原</category>
      
      <category domain="https://playneko.github.io/tags/%E3%82%A2%E3%82%AD%E3%83%90/">アキバ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A7%8C%ED%99%94/">만화</category>
      
      <category domain="https://playneko.github.io/tags/%EC%95%84%ED%82%A4%EB%B0%94/">아키바</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8B%A0%EA%B0%84/">신간</category>
      
      <category domain="https://playneko.github.io/tags/3%EC%96%B5%EC%97%94-%EC%82%AC%EA%B1%B4/">3억엔 사건</category>
      
      <category domain="https://playneko.github.io/tags/COMICZIN/">COMICZIN</category>
      
      <category domain="https://playneko.github.io/tags/%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%ED%8A%B8/">애니메이트</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9E%91%ED%92%88/">작품</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B2%AD%EC%B6%98%EB%8B%B4/">청춘담</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%AF%B8%EC%BB%AC%EB%9D%BC%EC%9D%B4%EC%A6%88/">코미컬라이즈</category>
      
      <category domain="https://playneko.github.io/tags/%ED%86%A0%EB%9D%BC%EB%85%B8%EC%95%84%EB%82%98/">토라노아나</category>
      
      
      <comments>https://playneko.github.io/2020/06/22/akihabara/akihabara-006/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 웹서버에서 jQuery toggle 사용하기</title>
      <link>https://playneko.github.io/2020/06/22/rasberry-pi/rasberry-pi-028/</link>
      <guid>https://playneko.github.io/2020/06/22/rasberry-pi/rasberry-pi-028/</guid>
      <pubDate>Sun, 21 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 웹서버에서 jQuery toggle 사용하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이 웹서버에서 jQuery toggle 사용하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-웹서버에서-jQuery-toggle-사용하기"><a href="#라즈베리파이-웹서버에서-jQuery-toggle-사용하기" class="headerlink" title="라즈베리파이 웹서버에서 jQuery toggle 사용하기"></a>라즈베리파이 웹서버에서 jQuery toggle 사용하기</h2><p>안녕하세요. AkibaTV 입니다.</p><p>이번에 소개할 내용은 라즈베리파이 웹서버에서 jQuery toggle 사용하기 입니다.</p><p>프론트쪽 웹사이트를 개발을 하시다 보시면</p><p>메뉴를 눌렀을경우 펼쳐지거나 닫혀지는 사이트를 보신적이 있으실겁니다.</p><p>그런 메뉴 펼침 닫힘을 간단히 구현을 할수 있는</p><p>jQuery toggle을 알아보도록 하겠습니다.</p><h4 id="toggle-이란"><a href="#toggle-이란" class="headerlink" title=".toggle() 이란"></a>.toggle() 이란</h4><blockquote><p>.toggle()은 선택한 요소가 보이면 보이지 않게 또는 보이게 합니다.</p></blockquote><h4 id="사용-문법"><a href="#사용-문법" class="headerlink" title="사용 문법"></a>사용 문법</h4><blockquote><p>.toggle( [duration ] [, complete ] )</p></blockquote><h4 id="Duration"><a href="#Duration" class="headerlink" title="Duration"></a>Duration</h4><blockquote><p>duration에는 완전히 나타날때 까지의 시간이 들어갑니다.<br>fast, slow로 정하거나 100 같은 숫자로 지정을 하실수 있습니다.<br>숫자일 경우 단위는 1000분의 1초이며, fast는 200, slow는 500에 해당합니다.<br>아무것도 입력하지 않으면 기본값 400을 설정하게 됩니다.</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 문자열 방식</span><br><span class="line">.toggle( <span class="string">&#x27;slow&#x27;</span> )</span><br><span class="line"></span><br><span class="line"># 정수형 방식</span><br><span class="line">.toggle( <span class="number">500</span> )</span><br></pre></td></tr></table></figure><h4 id="Complete"><a href="#Complete" class="headerlink" title="Complete"></a>Complete</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.toggle( <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// Animation complete.</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>위의 내용을 토대로 간단하게 예제를 이용해서 어떻게 사용 되는지 해보도록 하겠습니다.</p><p>그럼 우선 Visual Studio Code(비주얼 스튜디오 코드)를 실행해 주시기 바랍니다.</p><p>실행을 하셨으면 파일명을 jquery_toggle.html로 추가를 해주시기 바랍니다.</p><p><img src="001-17.png" alt="image"></p><p>아래의 코드를 작성해 주시기 바랍니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>AkibaTV<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.5.1.slim.min.js&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">integrity</span>=<span class="string">&quot;sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="built_in">document</span>).ready( <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $( <span class="string">&#x27;#button&#x27;</span> ).click( <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $( <span class="string">&#x27;p.text&#x27;</span> ).toggle( <span class="string">&#x27;slow&#x27;</span> );</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;버튼&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span>Hello, AkibaTV<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="002-1-1.png" alt="image"></p><p>작성을 하셨으면 라즈베리파이 웹서버 또는 개인서버, 호스팅서버에 업로드를 해주시기 바랍니다.</p><p>저는 라즈베리파이에 웹서버를 구축을 해두었기때문에 라즈베리파이 웹서버를 이용하도록 하겠습니다.</p><p><img src="003-18.png" alt="image"></p><p>서버에 파일이 올라간것을 확인이 되셨으면 웹브라우저를 실행해 주세요.</p><p>웹브라우저의 URL에 http://각웹서버URL/jquery_toggle.html 를 실행해 주세요.</p><p><img src="004-17.png" alt="image"></p><p>기본적으로 버튼과 예제로 작성한 Hello, AkibaTV가 보이게 됩니다.</p><p>이제 버튼을 눌러주시면 글자가 안보이게 감춰지는것을 확인 하실수 있습니다.</p><p><img src="005-12.png" alt="image"></p><p>위와같이 Hello, AkibaTV가 감춰진것을 보실수 있습니다.</p><p>jQuery를 이용한 간단하고 빠른 코딩으로 글자나 문자 이미지 태그등등을 전부 감추거나 보이게 할수가 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/JavaScript/">JavaScript</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/server/">server</category>
      
      <category domain="https://playneko.github.io/tags/nginx/">nginx</category>
      
      <category domain="https://playneko.github.io/tags/apache/">apache</category>
      
      <category domain="https://playneko.github.io/tags/NPM/">NPM</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/Hello/">Hello</category>
      
      <category domain="https://playneko.github.io/tags/html/">html</category>
      
      <category domain="https://playneko.github.io/tags/jQuery/">jQuery</category>
      
      <category domain="https://playneko.github.io/tags/toggle/">toggle</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EC%82%AC%EC%9D%B4%ED%8A%B8/">웹사이트</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%B4%EB%AF%B8%EC%A7%80/">이미지</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%94%A9/">코딩</category>
      
      <category domain="https://playneko.github.io/tags/%ED%83%9C%EA%B7%B8/">태그</category>
      
      <category domain="https://playneko.github.io/tags/%ED%86%A0%EA%B8%80/">토글</category>
      
      <category domain="https://playneko.github.io/tags/%ED%94%84%EB%A1%A0%ED%8A%B8/">프론트</category>
      
      
      <comments>https://playneko.github.io/2020/06/22/rasberry-pi/rasberry-pi-028/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에서 GPIO 파이썬을 이용해서 피에조 부저(buzzer) 제어하기</title>
      <link>https://playneko.github.io/2020/06/21/rasberry-pi/rasberry-pi-027/</link>
      <guid>https://playneko.github.io/2020/06/21/rasberry-pi/rasberry-pi-027/</guid>
      <pubDate>Sat, 20 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에서 GPIO 파이썬을 이용해서 피에조 부저(buzzer) 제어하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이에서 GPIO 파이썬을 이용해서 피에조 부저(buzzer) 제어하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에서-GPIO-파이썬을-이용해서-피에조-부저-buzzer-제어하기"><a href="#라즈베리파이에서-GPIO-파이썬을-이용해서-피에조-부저-buzzer-제어하기" class="headerlink" title="라즈베리파이에서 GPIO 파이썬을 이용해서 피에조 부저(buzzer) 제어하기"></a>라즈베리파이에서 GPIO 파이썬을 이용해서 피에조 부저(buzzer) 제어하기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 라즈베리파이에서 GPIO 파이썬을 이용해서 피에조 부저(buzzer) 제어하기 입니다.</p><p>피에조 부저는 간단한 소리를 낼수있는 스피커와 비슷한 역할로</p><p>주로 경보음을 내거나 간단한 소리를 낼경우에 많이 사용하고 있습니다.</p><p>그래서 이번에는 오픈소스를 이용해 슈퍼마리오 테마송을 피에조 부저를 이용해서 출력을 해보도록 하겠습니다.</p><p>우선 작업에 앞서 준비물을 준비해 주시기 바랍니다.</p><blockquote><h5 id="준비물"><a href="#준비물" class="headerlink" title="준비물"></a>준비물</h5><ul><li>라즈베리파이 OS가 설치된 라즈베리파이</li><li>점퍼케이블 암컷으로 2줄</li><li>피에조 부저(buzzer) 1개</li></ul></blockquote><p>점퍼케이블을 아래의 표를 보시고 해당하는 위치에 연결을 해주시기 바랍니다.</p><p><img src="001-6.jpg" alt="image"></p><p><img src="RasPiGPIO.png" alt="image"></p><table><thead><tr><th align="center">Color</th><th align="center">Pi GPIO Pin</th><th align="center">Notes</th></tr></thead><tbody><tr><td align="center">Orange</td><td align="center">11</td><td align="center">17</td></tr><tr><td align="center">Yellow</td><td align="center">39</td><td align="center">GND</td></tr></tbody></table><p>GPIO핀에 대한 자세한 내용을 원하시는 분은 아래의 링크를 들어가셔서 참고해 주세요.</p><p><a href="https://playneko.github.io/2020/05/28/rasberry-pi-011/">라즈베리파이에서 GPIO를 사용하기전 알아두어야 할 사항</a></p><p>오픈소스를 이용해서 깃허브에서 다운로드후 실행을 하려고 했습니다만</p><p>파이썬3.x버전대를 사용하시는 분들은 실행시 에러가 발생을 하기에</p><p>소스코드를 깃허브에서 복사해와 오류를 수정후 사용하도록 하겠습니다.</p><p>깃허브 소스는 아래의 링크를 누르시면 받으실수 있습니다.</p><p><a href="https://github.com/gumslone/raspi_buzzer_player">https://github.com/gumslone/raspi_buzzer_player</a></p><p>깃허브를 이용안하시고 수정된 소스를 사용하실 분들은 아래의 방식을 따라서 해주세요.</p><p>Visual Studio Code(비주얼 스튜디오 코드)를 실행해 주시기 바랍니다.</p><p><img src="001-14.png" alt="image"></p><p>실행을 하셨으면 파일명을 gpio_buzzer.py로 추가를 해주시기 바랍니다.</p><p><img src="002-14.png" alt="image"></p><p>깃허브에서 가져온 소스를 수정한 소스는 아래의 코드를 참고해 주세요.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#---------------------------------------------------</span></span><br><span class="line"><span class="comment"># This is free and unencumbered software released into the public domain.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Anyone is free to copy, modify, publish, use, compile, sell, or</span></span><br><span class="line"><span class="comment"># distribute this software, either in source code form or as a compiled</span></span><br><span class="line"><span class="comment"># binary, for any purpose, commercial or non-commercial, and by any</span></span><br><span class="line"><span class="comment"># means.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># In jurisdictions that recognize copyright laws, the author or authors</span></span><br><span class="line"><span class="comment"># of this software dedicate any and all copyright interest in the</span></span><br><span class="line"><span class="comment"># software to the public domain. We make this dedication for the benefit</span></span><br><span class="line"><span class="comment"># of the public at large and to the detriment of our heirs and</span></span><br><span class="line"><span class="comment"># successors. We intend this dedication to be an overt act of</span></span><br><span class="line"><span class="comment"># relinquishment in perpetuity of all present and future rights to this</span></span><br><span class="line"><span class="comment"># software under copyright law.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></span><br><span class="line"><span class="comment"># EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></span><br><span class="line"><span class="comment"># MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></span><br><span class="line"><span class="comment"># IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></span><br><span class="line"><span class="comment"># OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></span><br><span class="line"><span class="comment"># ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></span><br><span class="line"><span class="comment"># OTHER DEALINGS IN THE SOFTWARE.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For more information, please refer to &lt;http://unlicense.org&gt;</span></span><br><span class="line"><span class="comment">#---------------------------------------------------</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment">#Passive buzzer    Pi </span></span><br><span class="line"><span class="comment">#VCC ----------------- 3.3V</span></span><br><span class="line"><span class="comment">#GND ------------------ GND</span></span><br><span class="line"><span class="comment">#SIG ---------------- Pin Gpio27</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#some notes for melodies were taken from:</span></span><br><span class="line"><span class="comment">#http://www.astlessons.com/pianoforkids1.html</span></span><br><span class="line"><span class="comment">#http://www.astlessons.com/pianoforkids2.html</span></span><br><span class="line"><span class="comment">#where you can get more notes</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#---------------------------------------------------</span></span><br><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">buzzer_pin = <span class="number">27</span></span><br><span class="line"></span><br><span class="line">notes = &#123;</span><br><span class="line"><span class="string">&#x27;B0&#x27;</span> : <span class="number">31</span>,</span><br><span class="line"><span class="string">&#x27;C1&#x27;</span> : <span class="number">33</span>, <span class="string">&#x27;CS1&#x27;</span> : <span class="number">35</span>,</span><br><span class="line"><span class="string">&#x27;D1&#x27;</span> : <span class="number">37</span>, <span class="string">&#x27;DS1&#x27;</span> : <span class="number">39</span>,</span><br><span class="line"><span class="string">&#x27;EB1&#x27;</span> : <span class="number">39</span>,</span><br><span class="line"><span class="string">&#x27;E1&#x27;</span> : <span class="number">41</span>,</span><br><span class="line"><span class="string">&#x27;F1&#x27;</span> : <span class="number">44</span>, <span class="string">&#x27;FS1&#x27;</span> : <span class="number">46</span>,</span><br><span class="line"><span class="string">&#x27;G1&#x27;</span> : <span class="number">49</span>, <span class="string">&#x27;GS1&#x27;</span> : <span class="number">52</span>,</span><br><span class="line"><span class="string">&#x27;A1&#x27;</span> : <span class="number">55</span>, <span class="string">&#x27;AS1&#x27;</span> : <span class="number">58</span>,</span><br><span class="line"><span class="string">&#x27;BB1&#x27;</span> : <span class="number">58</span>,</span><br><span class="line"><span class="string">&#x27;B1&#x27;</span> : <span class="number">62</span>,</span><br><span class="line"><span class="string">&#x27;C2&#x27;</span> : <span class="number">65</span>, <span class="string">&#x27;CS2&#x27;</span> : <span class="number">69</span>,</span><br><span class="line"><span class="string">&#x27;D2&#x27;</span> : <span class="number">73</span>, <span class="string">&#x27;DS2&#x27;</span> : <span class="number">78</span>,</span><br><span class="line"><span class="string">&#x27;EB2&#x27;</span> : <span class="number">78</span>,</span><br><span class="line"><span class="string">&#x27;E2&#x27;</span> : <span class="number">82</span>,</span><br><span class="line"><span class="string">&#x27;F2&#x27;</span> : <span class="number">87</span>, <span class="string">&#x27;FS2&#x27;</span> : <span class="number">93</span>,</span><br><span class="line"><span class="string">&#x27;G2&#x27;</span> : <span class="number">98</span>, <span class="string">&#x27;GS2&#x27;</span> : <span class="number">104</span>,</span><br><span class="line"><span class="string">&#x27;A2&#x27;</span> : <span class="number">110</span>, <span class="string">&#x27;AS2&#x27;</span> : <span class="number">117</span>,</span><br><span class="line"><span class="string">&#x27;BB2&#x27;</span> : <span class="number">123</span>,</span><br><span class="line"><span class="string">&#x27;B2&#x27;</span> : <span class="number">123</span>,</span><br><span class="line"><span class="string">&#x27;C3&#x27;</span> : <span class="number">131</span>, <span class="string">&#x27;CS3&#x27;</span> : <span class="number">139</span>,</span><br><span class="line"><span class="string">&#x27;D3&#x27;</span> : <span class="number">147</span>, <span class="string">&#x27;DS3&#x27;</span> : <span class="number">156</span>,</span><br><span class="line"><span class="string">&#x27;EB3&#x27;</span> : <span class="number">156</span>,</span><br><span class="line"><span class="string">&#x27;E3&#x27;</span> : <span class="number">165</span>,</span><br><span class="line"><span class="string">&#x27;F3&#x27;</span> : <span class="number">175</span>, <span class="string">&#x27;FS3&#x27;</span> : <span class="number">185</span>,</span><br><span class="line"><span class="string">&#x27;G3&#x27;</span> : <span class="number">196</span>, <span class="string">&#x27;GS3&#x27;</span> : <span class="number">208</span>,</span><br><span class="line"><span class="string">&#x27;A3&#x27;</span> : <span class="number">220</span>, <span class="string">&#x27;AS3&#x27;</span> : <span class="number">233</span>,</span><br><span class="line"><span class="string">&#x27;BB3&#x27;</span> : <span class="number">233</span>,</span><br><span class="line"><span class="string">&#x27;B3&#x27;</span> : <span class="number">247</span>,</span><br><span class="line"><span class="string">&#x27;C4&#x27;</span> : <span class="number">262</span>, <span class="string">&#x27;CS4&#x27;</span> : <span class="number">277</span>,</span><br><span class="line"><span class="string">&#x27;D4&#x27;</span> : <span class="number">294</span>, <span class="string">&#x27;DS4&#x27;</span> : <span class="number">311</span>,</span><br><span class="line"><span class="string">&#x27;EB4&#x27;</span> : <span class="number">311</span>,</span><br><span class="line"><span class="string">&#x27;E4&#x27;</span> : <span class="number">330</span>,</span><br><span class="line"><span class="string">&#x27;F4&#x27;</span> : <span class="number">349</span>, <span class="string">&#x27;FS4&#x27;</span> : <span class="number">370</span>,</span><br><span class="line"><span class="string">&#x27;G4&#x27;</span> : <span class="number">392</span>, <span class="string">&#x27;GS4&#x27;</span> : <span class="number">415</span>,</span><br><span class="line"><span class="string">&#x27;A4&#x27;</span> : <span class="number">440</span>, <span class="string">&#x27;AS4&#x27;</span> : <span class="number">466</span>,</span><br><span class="line"><span class="string">&#x27;BB4&#x27;</span> : <span class="number">466</span>,</span><br><span class="line"><span class="string">&#x27;B4&#x27;</span> : <span class="number">494</span>,</span><br><span class="line"><span class="string">&#x27;C5&#x27;</span> : <span class="number">523</span>, <span class="string">&#x27;CS5&#x27;</span> : <span class="number">554</span>,</span><br><span class="line"><span class="string">&#x27;D5&#x27;</span> : <span class="number">587</span>, <span class="string">&#x27;DS5&#x27;</span> : <span class="number">622</span>,</span><br><span class="line"><span class="string">&#x27;EB5&#x27;</span> : <span class="number">622</span>,</span><br><span class="line"><span class="string">&#x27;E5&#x27;</span> : <span class="number">659</span>,</span><br><span class="line"><span class="string">&#x27;F5&#x27;</span> : <span class="number">698</span>, <span class="string">&#x27;FS5&#x27;</span> : <span class="number">740</span>,</span><br><span class="line"><span class="string">&#x27;G5&#x27;</span> : <span class="number">784</span>, <span class="string">&#x27;GS5&#x27;</span> : <span class="number">831</span>,</span><br><span class="line"><span class="string">&#x27;A5&#x27;</span> : <span class="number">880</span>, <span class="string">&#x27;AS5&#x27;</span> : <span class="number">932</span>,</span><br><span class="line"><span class="string">&#x27;BB5&#x27;</span> : <span class="number">932</span>,</span><br><span class="line"><span class="string">&#x27;B5&#x27;</span> : <span class="number">988</span>,</span><br><span class="line"><span class="string">&#x27;C6&#x27;</span> : <span class="number">1047</span>, <span class="string">&#x27;CS6&#x27;</span> : <span class="number">1109</span>,</span><br><span class="line"><span class="string">&#x27;D6&#x27;</span> : <span class="number">1175</span>, <span class="string">&#x27;DS6&#x27;</span> : <span class="number">1245</span>,</span><br><span class="line"><span class="string">&#x27;EB6&#x27;</span> : <span class="number">1245</span>,</span><br><span class="line"><span class="string">&#x27;E6&#x27;</span> : <span class="number">1319</span>,</span><br><span class="line"><span class="string">&#x27;F6&#x27;</span> : <span class="number">1397</span>, <span class="string">&#x27;FS6&#x27;</span> : <span class="number">1480</span>,</span><br><span class="line"><span class="string">&#x27;G6&#x27;</span> : <span class="number">1568</span>, <span class="string">&#x27;GS6&#x27;</span> : <span class="number">1661</span>,</span><br><span class="line"><span class="string">&#x27;A6&#x27;</span> : <span class="number">1760</span>, <span class="string">&#x27;AS6&#x27;</span> : <span class="number">1865</span>,</span><br><span class="line"><span class="string">&#x27;BB6&#x27;</span> : <span class="number">1865</span>,</span><br><span class="line"><span class="string">&#x27;B6&#x27;</span> : <span class="number">1976</span>,</span><br><span class="line"><span class="string">&#x27;C7&#x27;</span> : <span class="number">2093</span>, <span class="string">&#x27;CS7&#x27;</span> : <span class="number">2217</span>,</span><br><span class="line"><span class="string">&#x27;D7&#x27;</span> : <span class="number">2349</span>, <span class="string">&#x27;DS7&#x27;</span> : <span class="number">2489</span>,</span><br><span class="line"><span class="string">&#x27;EB7&#x27;</span> : <span class="number">2489</span>,</span><br><span class="line"><span class="string">&#x27;E7&#x27;</span> : <span class="number">2637</span>,</span><br><span class="line"><span class="string">&#x27;F7&#x27;</span> : <span class="number">2794</span>, <span class="string">&#x27;FS7&#x27;</span> : <span class="number">2960</span>,</span><br><span class="line"><span class="string">&#x27;G7&#x27;</span> : <span class="number">3136</span>, <span class="string">&#x27;GS7&#x27;</span> : <span class="number">3322</span>,</span><br><span class="line"><span class="string">&#x27;A7&#x27;</span> : <span class="number">3520</span>, <span class="string">&#x27;AS7&#x27;</span> : <span class="number">3729</span>,</span><br><span class="line"><span class="string">&#x27;BB7&#x27;</span> : <span class="number">3729</span>,</span><br><span class="line"><span class="string">&#x27;B7&#x27;</span> : <span class="number">3951</span>,</span><br><span class="line"><span class="string">&#x27;C8&#x27;</span> : <span class="number">4186</span>, <span class="string">&#x27;CS8&#x27;</span> : <span class="number">4435</span>,</span><br><span class="line"><span class="string">&#x27;D8&#x27;</span> : <span class="number">4699</span>, <span class="string">&#x27;DS8&#x27;</span> : <span class="number">4978</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">melody = [</span><br><span class="line">  notes[<span class="string">&#x27;E7&#x27;</span>], notes[<span class="string">&#x27;E7&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;E7&#x27;</span>],</span><br><span class="line">  <span class="number">0</span>, notes[<span class="string">&#x27;C7&#x27;</span>], notes[<span class="string">&#x27;E7&#x27;</span>], <span class="number">0</span>,</span><br><span class="line">  notes[<span class="string">&#x27;G7&#x27;</span>], <span class="number">0</span>, <span class="number">0</span>,  <span class="number">0</span>,</span><br><span class="line">  notes[<span class="string">&#x27;G6&#x27;</span>], <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">  notes[<span class="string">&#x27;C7&#x27;</span>], <span class="number">0</span>, <span class="number">0</span>, notes[<span class="string">&#x27;G6&#x27;</span>],</span><br><span class="line">  <span class="number">0</span>, <span class="number">0</span>, notes[<span class="string">&#x27;E6&#x27;</span>], <span class="number">0</span>,</span><br><span class="line">  <span class="number">0</span>, notes[<span class="string">&#x27;A6&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;B6&#x27;</span>],</span><br><span class="line">  <span class="number">0</span>, notes[<span class="string">&#x27;AS6&#x27;</span>], notes[<span class="string">&#x27;A6&#x27;</span>], <span class="number">0</span>,</span><br><span class="line">  notes[<span class="string">&#x27;G6&#x27;</span>], notes[<span class="string">&#x27;E7&#x27;</span>], notes[<span class="string">&#x27;G7&#x27;</span>],</span><br><span class="line">  notes[<span class="string">&#x27;A7&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;F7&#x27;</span>], notes[<span class="string">&#x27;G7&#x27;</span>],</span><br><span class="line">  <span class="number">0</span>, notes[<span class="string">&#x27;E7&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;C7&#x27;</span>],</span><br><span class="line">  notes[<span class="string">&#x27;D7&#x27;</span>], notes[<span class="string">&#x27;B6&#x27;</span>], <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">  notes[<span class="string">&#x27;C7&#x27;</span>], <span class="number">0</span>, <span class="number">0</span>, notes[<span class="string">&#x27;G6&#x27;</span>],</span><br><span class="line">  <span class="number">0</span>, <span class="number">0</span>, notes[<span class="string">&#x27;E6&#x27;</span>], <span class="number">0</span>,</span><br><span class="line">  <span class="number">0</span>, notes[<span class="string">&#x27;A6&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;B6&#x27;</span>],</span><br><span class="line">  <span class="number">0</span>, notes[<span class="string">&#x27;AS6&#x27;</span>], notes[<span class="string">&#x27;A6&#x27;</span>], <span class="number">0</span>,</span><br><span class="line">  notes[<span class="string">&#x27;G6&#x27;</span>], notes[<span class="string">&#x27;E7&#x27;</span>], notes[<span class="string">&#x27;G7&#x27;</span>],</span><br><span class="line">  notes[<span class="string">&#x27;A7&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;F7&#x27;</span>], notes[<span class="string">&#x27;G7&#x27;</span>],</span><br><span class="line">  <span class="number">0</span>, notes[<span class="string">&#x27;E7&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;C7&#x27;</span>],</span><br><span class="line">  notes[<span class="string">&#x27;D7&#x27;</span>], notes[<span class="string">&#x27;B6&#x27;</span>], <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">]</span><br><span class="line">tempo = [</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">9</span>, <span class="number">9</span>, <span class="number">9</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">9</span>, <span class="number">9</span>, <span class="number">9</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">underworld_melody = [</span><br><span class="line">  notes[<span class="string">&#x27;C4&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;A3&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>],</span><br><span class="line">  notes[<span class="string">&#x27;AS3&#x27;</span>], notes[<span class="string">&#x27;AS4&#x27;</span>], <span class="number">0</span>,</span><br><span class="line">  <span class="number">0</span>,</span><br><span class="line">  notes[<span class="string">&#x27;C4&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;A3&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>],</span><br><span class="line">  notes[<span class="string">&#x27;AS3&#x27;</span>], notes[<span class="string">&#x27;AS4&#x27;</span>], <span class="number">0</span>,</span><br><span class="line">  <span class="number">0</span>,</span><br><span class="line">  notes[<span class="string">&#x27;F3&#x27;</span>], notes[<span class="string">&#x27;F4&#x27;</span>], notes[<span class="string">&#x27;D3&#x27;</span>], notes[<span class="string">&#x27;D4&#x27;</span>],</span><br><span class="line">  notes[<span class="string">&#x27;DS3&#x27;</span>], notes[<span class="string">&#x27;DS4&#x27;</span>], <span class="number">0</span>,</span><br><span class="line">  <span class="number">0</span>,</span><br><span class="line">  notes[<span class="string">&#x27;F3&#x27;</span>], notes[<span class="string">&#x27;F4&#x27;</span>], notes[<span class="string">&#x27;D3&#x27;</span>], notes[<span class="string">&#x27;D4&#x27;</span>],</span><br><span class="line">  notes[<span class="string">&#x27;DS3&#x27;</span>], notes[<span class="string">&#x27;DS4&#x27;</span>], <span class="number">0</span>,</span><br><span class="line">  <span class="number">0</span>, notes[<span class="string">&#x27;DS4&#x27;</span>], notes[<span class="string">&#x27;CS4&#x27;</span>], notes[<span class="string">&#x27;D4&#x27;</span>],</span><br><span class="line">  notes[<span class="string">&#x27;CS4&#x27;</span>], notes[<span class="string">&#x27;DS4&#x27;</span>],</span><br><span class="line">  notes[<span class="string">&#x27;DS4&#x27;</span>], notes[<span class="string">&#x27;GS3&#x27;</span>],</span><br><span class="line">  notes[<span class="string">&#x27;G3&#x27;</span>], notes[<span class="string">&#x27;CS4&#x27;</span>],</span><br><span class="line">  notes[<span class="string">&#x27;C4&#x27;</span>], notes[<span class="string">&#x27;FS4&#x27;</span>], notes[<span class="string">&#x27;F4&#x27;</span>], notes[<span class="string">&#x27;E3&#x27;</span>], notes[<span class="string">&#x27;AS4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>],</span><br><span class="line">  notes[<span class="string">&#x27;GS4&#x27;</span>], notes[<span class="string">&#x27;DS4&#x27;</span>], notes[<span class="string">&#x27;B3&#x27;</span>],</span><br><span class="line">  notes[<span class="string">&#x27;AS3&#x27;</span>], notes[<span class="string">&#x27;A3&#x27;</span>], notes[<span class="string">&#x27;GS3&#x27;</span>],</span><br><span class="line">  <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">underworld_tempo = [</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">6</span>,</span><br><span class="line">  <span class="number">3</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">6</span>,</span><br><span class="line">  <span class="number">3</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">6</span>,</span><br><span class="line">  <span class="number">3</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">  <span class="number">12</span>, <span class="number">12</span>, <span class="number">6</span>,</span><br><span class="line">  <span class="number">6</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>,</span><br><span class="line">  <span class="number">6</span>, <span class="number">6</span>,</span><br><span class="line">  <span class="number">6</span>, <span class="number">6</span>,</span><br><span class="line">  <span class="number">6</span>, <span class="number">6</span>,</span><br><span class="line">  <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>,</span><br><span class="line">  <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>,</span><br><span class="line">  <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>,</span><br><span class="line">  <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">adventure_time_melody = [</span><br><span class="line">    notes[<span class="string">&#x27;D5&#x27;</span>], </span><br><span class="line">    notes[<span class="string">&#x27;G5&#x27;</span>], notes[<span class="string">&#x27;G5&#x27;</span>], notes[<span class="string">&#x27;G5&#x27;</span>], notes[<span class="string">&#x27;G5&#x27;</span>], notes[<span class="string">&#x27;FS5&#x27;</span>],</span><br><span class="line">    notes[<span class="string">&#x27;FS5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">    notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;B5&#x27;</span>], notes[<span class="string">&#x27;A5&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>],  </span><br><span class="line">    <span class="number">0</span>, notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;B5&#x27;</span>], notes[<span class="string">&#x27;A5&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], <span class="number">0</span>,  </span><br><span class="line">    notes[<span class="string">&#x27;G5&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;G5&#x27;</span>], notes[<span class="string">&#x27;G5&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;G5&#x27;</span>], </span><br><span class="line">    notes[<span class="string">&#x27;FS5&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], </span><br><span class="line">    notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], </span><br><span class="line">    notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;A5&#x27;</span>], notes[<span class="string">&#x27;B5&#x27;</span>], notes[<span class="string">&#x27;A5&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], </span><br><span class="line">    notes[<span class="string">&#x27;G5&#x27;</span>]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">adventure_time_tempo = [</span><br><span class="line">    <span class="number">24</span>,</span><br><span class="line">    <span class="number">24</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">24</span>,</span><br><span class="line">    <span class="number">12</span>, <span class="number">24</span>, <span class="number">24</span>, <span class="number">24</span>, <span class="number">12</span>, <span class="number">24</span>,</span><br><span class="line">    <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">12</span>,</span><br><span class="line">    <span class="number">24</span>, <span class="number">12</span>, <span class="number">24</span>, <span class="number">24</span>, <span class="number">12</span>, <span class="number">24</span>,  </span><br><span class="line">    <span class="number">24</span>, <span class="number">24</span>, <span class="number">24</span>, <span class="number">12</span>, <span class="number">24</span>, <span class="number">12</span>, </span><br><span class="line">    <span class="number">24</span>, <span class="number">24</span>, <span class="number">24</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">24</span>, </span><br><span class="line">    <span class="number">8</span>, <span class="number">24</span>, <span class="number">24</span>, <span class="number">8</span>, </span><br><span class="line">    <span class="number">8</span>, <span class="number">24</span>, <span class="number">12</span>, <span class="number">24</span>, <span class="number">24</span>, </span><br><span class="line">    <span class="number">12</span> </span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">star_wars_melody = [ </span><br><span class="line">notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;EB4&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;BB4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;EB4&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;BB4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;D4&#x27;</span>], notes[<span class="string">&#x27;D4&#x27;</span>], notes[<span class="string">&#x27;D4&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;EB4&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;BB3&#x27;</span>], notes[<span class="string">&#x27;FS3&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;EB3&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;BB3&#x27;</span>], notes[<span class="string">&#x27;G3&#x27;</span>], <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;G4&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;G3&#x27;</span>], notes[<span class="string">&#x27;G3&#x27;</span>], <span class="number">0</span>,</span><br><span class="line">notes[<span class="string">&#x27;G4&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;FS4&#x27;</span>], notes[<span class="string">&#x27;F4&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;EB4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], <span class="number">0</span>,</span><br><span class="line">notes[<span class="string">&#x27;GS3&#x27;</span>], notes[<span class="string">&#x27;CS3&#x27;</span>], <span class="number">0</span>, </span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;C3&#x27;</span>], notes[<span class="string">&#x27;B3&#x27;</span>], notes[<span class="string">&#x27;BB3&#x27;</span>], notes[<span class="string">&#x27;A3&#x27;</span>], notes[<span class="string">&#x27;BB3&#x27;</span>], <span class="number">0</span>,</span><br><span class="line">notes[<span class="string">&#x27;EB3&#x27;</span>], notes[<span class="string">&#x27;FS3&#x27;</span>], notes[<span class="string">&#x27;EB3&#x27;</span>], notes[<span class="string">&#x27;FS3&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;BB3&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;G3&#x27;</span>], notes[<span class="string">&#x27;BB3&#x27;</span>], notes[<span class="string">&#x27;D4&#x27;</span>], <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;G4&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;G3&#x27;</span>], notes[<span class="string">&#x27;G3&#x27;</span>], <span class="number">0</span>,</span><br><span class="line">notes[<span class="string">&#x27;G4&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;FS4&#x27;</span>], notes[<span class="string">&#x27;F4&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;EB4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], <span class="number">0</span>,</span><br><span class="line">notes[<span class="string">&#x27;GS3&#x27;</span>], notes[<span class="string">&#x27;CS3&#x27;</span>], <span class="number">0</span>, </span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;C3&#x27;</span>], notes[<span class="string">&#x27;B3&#x27;</span>], notes[<span class="string">&#x27;BB3&#x27;</span>], notes[<span class="string">&#x27;A3&#x27;</span>], notes[<span class="string">&#x27;BB3&#x27;</span>], <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;EB3&#x27;</span>], notes[<span class="string">&#x27;FS3&#x27;</span>], notes[<span class="string">&#x27;EB3&#x27;</span>],  </span><br><span class="line">notes[<span class="string">&#x27;BB3&#x27;</span>], notes[<span class="string">&#x27;G3&#x27;</span>], notes[<span class="string">&#x27;EB3&#x27;</span>], <span class="number">0</span>, notes[<span class="string">&#x27;BB3&#x27;</span>], notes[<span class="string">&#x27;G3&#x27;</span>],</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">star_wars_tempo = [</span><br><span class="line"><span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, </span><br><span class="line"><span class="number">4</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">2</span>, </span><br><span class="line"><span class="number">4</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">8</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>,</span><br><span class="line"><span class="number">4</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">2</span>,</span><br><span class="line"><span class="number">4</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">8</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>, <span class="number">16</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">8</span>,</span><br><span class="line"><span class="number">2</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">6</span>,</span><br><span class="line"><span class="number">6</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">8</span>,</span><br><span class="line"><span class="number">4</span>, <span class="number">2</span>, <span class="number">8</span>, </span><br><span class="line"><span class="number">4</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">8</span>,</span><br><span class="line"><span class="number">4</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>, </span><br><span class="line"><span class="number">2</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">8</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>, <span class="number">16</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">8</span>,</span><br><span class="line"><span class="number">2</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">6</span>,</span><br><span class="line"><span class="number">6</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">8</span>,</span><br><span class="line"><span class="number">4</span>, <span class="number">2</span>, <span class="number">8</span>, </span><br><span class="line"><span class="number">4</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">8</span>,</span><br><span class="line"><span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>, </span><br><span class="line"><span class="number">4</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">popcorn_melody = [</span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;C4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;A3&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;C4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;A3&#x27;</span>], </span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;B4&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;B4&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;B4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;B4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>],notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;F4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>],</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;C4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;A3&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;C4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;A3&#x27;</span>], </span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;B4&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;B4&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;B4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;B4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>],notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;B4&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>],</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], </span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;FS5&#x27;</span>], notes[<span class="string">&#x27;G5&#x27;</span>], notes[<span class="string">&#x27;FS5&#x27;</span>], notes[<span class="string">&#x27;G5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;FS5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;FS5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>],notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>],</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], </span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;FS5&#x27;</span>], notes[<span class="string">&#x27;G5&#x27;</span>], notes[<span class="string">&#x27;FS5&#x27;</span>], notes[<span class="string">&#x27;G5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;FS5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;FS5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>],notes[<span class="string">&#x27;B4&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>],</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">popcorn_tempo = [</span><br><span class="line"><span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">4</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,</span><br><span class="line"><span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">4</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">4</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,</span><br><span class="line"><span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">4</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">4</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,</span><br><span class="line"><span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">4</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">4</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,</span><br><span class="line"><span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">4</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">twinkle_twinkle_melody = [</span><br><span class="line">notes[<span class="string">&#x27;C4&#x27;</span>], notes[<span class="string">&#x27;C4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;F4&#x27;</span>], notes[<span class="string">&#x27;F4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;D4&#x27;</span>], notes[<span class="string">&#x27;D4&#x27;</span>], notes[<span class="string">&#x27;C4&#x27;</span>],</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;F4&#x27;</span>], notes[<span class="string">&#x27;F4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;D4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;F4&#x27;</span>], notes[<span class="string">&#x27;F4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;D4&#x27;</span>],</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;C4&#x27;</span>], notes[<span class="string">&#x27;C4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;F4&#x27;</span>], notes[<span class="string">&#x27;F4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;D4&#x27;</span>], notes[<span class="string">&#x27;D4&#x27;</span>], notes[<span class="string">&#x27;C4&#x27;</span>],</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">twinkle_twinkle_tempo = [</span><br><span class="line"><span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">crazy_frog_melody = [</span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;F5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;A5&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;B4&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>],<span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;F5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;A5&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;B4&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>],<span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;A3&#x27;</span>], notes[<span class="string">&#x27;G3&#x27;</span>], notes[<span class="string">&#x27;E3&#x27;</span>], notes[<span class="string">&#x27;D3&#x27;</span>],</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;F5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;A5&#x27;</span>], notes[<span class="string">&#x27;A4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;G4&#x27;</span>], notes[<span class="string">&#x27;E4&#x27;</span>], notes[<span class="string">&#x27;B4&#x27;</span>], </span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>],</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">crazy_frog_tempo = [</span><br><span class="line"><span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">1</span>,<span class="number">4</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">1</span>,<span class="number">4</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">1</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">deck_the_halls_melody = [</span><br><span class="line">notes[<span class="string">&#x27;G5&#x27;</span>], notes[<span class="string">&#x27;F5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;F5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;B4&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;G5&#x27;</span>], notes[<span class="string">&#x27;F5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;F5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;B4&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;F5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;F5&#x27;</span>], notes[<span class="string">&#x27;G5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;F5&#x27;</span>], notes[<span class="string">&#x27;G5&#x27;</span>], notes[<span class="string">&#x27;A5&#x27;</span>], notes[<span class="string">&#x27;B5&#x27;</span>], notes[<span class="string">&#x27;C6&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;B5&#x27;</span>], notes[<span class="string">&#x27;A5&#x27;</span>], notes[<span class="string">&#x27;G5&#x27;</span>], <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;G5&#x27;</span>], notes[<span class="string">&#x27;F5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;F5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>], notes[<span class="string">&#x27;E5&#x27;</span>], notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>], notes[<span class="string">&#x27;B4&#x27;</span>], notes[<span class="string">&#x27;C5&#x27;</span>], <span class="number">0</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">deck_the_halls_tempo = [</span><br><span class="line"><span class="number">2</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>,</span><br><span class="line"><span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">4</span>,</span><br><span class="line"><span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>,</span><br><span class="line"><span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">4</span>,</span><br><span class="line"><span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>,</span><br><span class="line"><span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">4</span>,</span><br><span class="line"><span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">manaderna_melody = [</span><br><span class="line">notes[<span class="string">&#x27;E4&#x27;</span>],notes[<span class="string">&#x27;E4&#x27;</span>],notes[<span class="string">&#x27;F4&#x27;</span>],notes[<span class="string">&#x27;G4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;G4&#x27;</span>],notes[<span class="string">&#x27;F4&#x27;</span>],notes[<span class="string">&#x27;E4&#x27;</span>],notes[<span class="string">&#x27;D4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C4&#x27;</span>],notes[<span class="string">&#x27;C4&#x27;</span>],notes[<span class="string">&#x27;D4&#x27;</span>],notes[<span class="string">&#x27;E4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;E4&#x27;</span>],<span class="number">0</span>,notes[<span class="string">&#x27;D4&#x27;</span>],notes[<span class="string">&#x27;D4&#x27;</span>],<span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;E4&#x27;</span>],notes[<span class="string">&#x27;E4&#x27;</span>],notes[<span class="string">&#x27;F4&#x27;</span>],notes[<span class="string">&#x27;G4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;G4&#x27;</span>],notes[<span class="string">&#x27;F4&#x27;</span>],notes[<span class="string">&#x27;E4&#x27;</span>],notes[<span class="string">&#x27;D4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C4&#x27;</span>],notes[<span class="string">&#x27;C4&#x27;</span>],notes[<span class="string">&#x27;D4&#x27;</span>],notes[<span class="string">&#x27;E4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;D4&#x27;</span>],<span class="number">0</span>,notes[<span class="string">&#x27;C4&#x27;</span>],notes[<span class="string">&#x27;C4&#x27;</span>],<span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;D4&#x27;</span>],notes[<span class="string">&#x27;D4&#x27;</span>],notes[<span class="string">&#x27;E4&#x27;</span>],notes[<span class="string">&#x27;C4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;D4&#x27;</span>],notes[<span class="string">&#x27;E4&#x27;</span>],notes[<span class="string">&#x27;F4&#x27;</span>],notes[<span class="string">&#x27;E4&#x27;</span>],notes[<span class="string">&#x27;C4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;D4&#x27;</span>],notes[<span class="string">&#x27;E4&#x27;</span>],notes[<span class="string">&#x27;F4&#x27;</span>],notes[<span class="string">&#x27;E4&#x27;</span>],notes[<span class="string">&#x27;D4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C4&#x27;</span>],notes[<span class="string">&#x27;D4&#x27;</span>],notes[<span class="string">&#x27;G3&#x27;</span>],<span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;E4&#x27;</span>],notes[<span class="string">&#x27;E4&#x27;</span>],notes[<span class="string">&#x27;F4&#x27;</span>],notes[<span class="string">&#x27;G4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;G4&#x27;</span>],notes[<span class="string">&#x27;F4&#x27;</span>],notes[<span class="string">&#x27;E4&#x27;</span>],notes[<span class="string">&#x27;D4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C4&#x27;</span>],notes[<span class="string">&#x27;C4&#x27;</span>],notes[<span class="string">&#x27;D4&#x27;</span>],notes[<span class="string">&#x27;E4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;D4&#x27;</span>],<span class="number">0</span>,notes[<span class="string">&#x27;C4&#x27;</span>],notes[<span class="string">&#x27;C4&#x27;</span>],</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">manaderna_tempo = [</span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">4</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">4</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">4</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">bonnagard_melody = [</span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;G4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>],notes[<span class="string">&#x27;A4&#x27;</span>],notes[<span class="string">&#x27;G4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>],<span class="number">0</span>,notes[<span class="string">&#x27;G4&#x27;</span>],</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;G4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>],notes[<span class="string">&#x27;A4&#x27;</span>],notes[<span class="string">&#x27;G4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>],<span class="number">0</span>,notes[<span class="string">&#x27;G4&#x27;</span>],notes[<span class="string">&#x27;G4&#x27;</span>],</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;G4&#x27;</span>],notes[<span class="string">&#x27;G4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;G4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],<span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;G4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;A4&#x27;</span>],notes[<span class="string">&#x27;A4&#x27;</span>],notes[<span class="string">&#x27;G4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>],<span class="number">0</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">bonnagard_tempo = [</span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,</span><br><span class="line"><span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,</span><br><span class="line"><span class="number">1</span>,<span class="number">1</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">final_countdown_melody = [</span><br><span class="line">notes[<span class="string">&#x27;A3&#x27;</span>],notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;A4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;F3&#x27;</span>],notes[<span class="string">&#x27;F5&#x27;</span>],notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;F5&#x27;</span>],notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;D3&#x27;</span>],notes[<span class="string">&#x27;F5&#x27;</span>],notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;F5&#x27;</span>],notes[<span class="string">&#x27;A4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;G3&#x27;</span>],<span class="number">0</span>,notes[<span class="string">&#x27;D5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;B4&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;A3&#x27;</span>],notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;A4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;F3&#x27;</span>],notes[<span class="string">&#x27;F5&#x27;</span>],notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;F5&#x27;</span>],notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;D3&#x27;</span>],notes[<span class="string">&#x27;F5&#x27;</span>],notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;F5&#x27;</span>],notes[<span class="string">&#x27;A4&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;G3&#x27;</span>],<span class="number">0</span>,notes[<span class="string">&#x27;D5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;B4&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;B4&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],notes[<span class="string">&#x27;C5&#x27;</span>],notes[<span class="string">&#x27;B4&#x27;</span>],notes[<span class="string">&#x27;A4&#x27;</span>],notes[<span class="string">&#x27;F5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;F5&#x27;</span>],notes[<span class="string">&#x27;E5&#x27;</span>],notes[<span class="string">&#x27;D5&#x27;</span>],</span><br><span class="line">notes[<span class="string">&#x27;E5&#x27;</span>],</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">final_countdown_tempo = [</span><br><span class="line"><span class="number">1</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">1</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">1</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">4</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,</span><br><span class="line"><span class="number">4</span>,<span class="number">4</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">1</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">1</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">4</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,</span><br><span class="line"><span class="number">4</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="number">4</span>,<span class="number">16</span>,<span class="number">16</span>,</span><br><span class="line"><span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">4</span>,</span><br><span class="line"><span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">16</span>,<span class="number">16</span>,</span><br><span class="line"><span class="number">1</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buzz</span>(<span class="params">frequency, length</span>):</span> <span class="comment">#create the function &quot;buzz&quot; and feed it the pitch and duration)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(frequency==<span class="number">0</span>):</span><br><span class="line">time.sleep(length)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">period = <span class="number">1.0</span> / frequency  <span class="comment">#in physics, the period (sec/cyc) is the inverse of the frequency (cyc/sec)</span></span><br><span class="line">delayValue = period / <span class="number">2</span> <span class="comment">#calcuate the time for half of the wave</span></span><br><span class="line">numCycles = <span class="built_in">int</span>(length * frequency) <span class="comment">#the number of waves to produce is the duration times the frequency</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(numCycles):<span class="comment">#start a loop from 0 to the variable &quot;cycles&quot; calculated above</span></span><br><span class="line">GPIO.output(buzzer_pin, <span class="literal">True</span>) <span class="comment">#set pin 27 to high</span></span><br><span class="line">time.sleep(delayValue)<span class="comment">#wait with pin 27 high</span></span><br><span class="line">GPIO.output(buzzer_pin, <span class="literal">False</span>)<span class="comment">#set pin 27 to low</span></span><br><span class="line">time.sleep(delayValue)<span class="comment">#wait with pin 27 low</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setup</span>():</span></span><br><span class="line">GPIO.setmode(GPIO.BCM)</span><br><span class="line">GPIO.setup(buzzer_pin, GPIO.IN)</span><br><span class="line">GPIO.setup(buzzer_pin, GPIO.OUT)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">destroy</span>():</span></span><br><span class="line">GPIO.cleanup()<span class="comment"># Release resource</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">play</span>(<span class="params">melody,tempo,pause,pace=<span class="number">0.800</span></span>):</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(melody)):<span class="comment"># Play song</span></span><br><span class="line">noteDuration = pace/tempo[i]</span><br><span class="line">buzz(melody[i],noteDuration)<span class="comment"># Change the frequency along the song note</span></span><br><span class="line"></span><br><span class="line">pauseBetweenNotes = noteDuration * pause</span><br><span class="line">time.sleep(pauseBetweenNotes)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:<span class="comment"># Program start from here</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">setup()</span><br><span class="line">    <span class="comment">#print(&quot;Super Mario Theme&quot;)</span></span><br><span class="line">play(melody, tempo, <span class="number">1.3</span>, <span class="number">0.800</span>)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="comment">#print(&quot;Super Mario Underworld Theme&quot;)</span></span><br><span class="line">play(underworld_melody, underworld_tempo, <span class="number">1.3</span>, <span class="number">0.800</span>)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="comment">#print(&quot;The Final Countdown&quot;)</span></span><br><span class="line">play(final_countdown_melody, final_countdown_tempo, <span class="number">0.30</span>, <span class="number">1.2000</span>)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="comment">#print(&quot;Per Olssons Bonnagard (Old MacDonald Had A Farm) Melody&quot;)</span></span><br><span class="line">play(bonnagard_melody, bonnagard_tempo, <span class="number">0.30</span>, <span class="number">0.800</span>)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="comment">#print(&quot;Manaderna (Symphony No. 9) Melody&quot;)</span></span><br><span class="line">play(manaderna_melody, manaderna_tempo, <span class="number">0.30</span>, <span class="number">0.800</span>)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="comment">#print(&quot;Deck The Halls Melody&quot;)</span></span><br><span class="line">play(deck_the_halls_melody, deck_the_halls_tempo, <span class="number">0.30</span>, <span class="number">0.800</span>)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="comment">#print(&quot;Crazy Frog (Axel F) Theme&quot;)</span></span><br><span class="line">play(crazy_frog_melody, crazy_frog_tempo, <span class="number">0.30</span>, <span class="number">0.900</span>)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="comment">#print(&quot;Twinkle, Twinkle, Little Star Melody&quot;)</span></span><br><span class="line">play(twinkle_twinkle_melody, twinkle_twinkle_tempo, <span class="number">0.50</span>, <span class="number">1.000</span>)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="comment">#print(&quot;Popcorn Melody&quot;)</span></span><br><span class="line">play(popcorn_melody, popcorn_tempo, <span class="number">0.50</span>, <span class="number">1.000</span>)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="comment">#print(&quot;Star Wars Theme&quot;)</span></span><br><span class="line">play(star_wars_melody, star_wars_tempo, <span class="number">0.50</span>, <span class="number">1.000</span>)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="comment">#print(&quot;Adventure Time Theme&quot;)</span></span><br><span class="line">play(adventure_time_melody, adventure_time_tempo, <span class="number">1.3</span>, <span class="number">1.500</span>)</span><br><span class="line">destroy()</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:  <span class="comment"># When &#x27;Ctrl+C&#x27; is pressed, the child program destroy() will be  executed.</span></span><br><span class="line">destroy()</span><br></pre></td></tr></table></figure><p>작성하신 소스를 라즈베리파이에 넣고 실행을 하기위해</p><p>소스파일을 라즈베리파이의 임의의 폴더에 올려주시기 바랍니다.</p><p>그리고 라즈베리파이를 VNC를 이용해 접속후 터미널을 실행해 주세요.</p><p><img src="003-15.png" alt="image"></p><p>라즈베리파이의 리스트 목록을 보시면 gpio_buzzer.py 파일명으로 파일이 올라가 있는걸 확인할수 있습니다.</p><p>이제 명령어로 피에조 부저에서 슈퍼마리오 테마송이 나오는지 확인해 보도록 하겠습니다.</p><p>아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬 2.x버전대를 이용하실경우</span></span><br><span class="line">$ sudo python ./gpio_buzzer.py</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬 3.x버전대를 이용하실경우</span></span><br><span class="line">$ sudo python3 ./gpio_buzzer.py</span><br></pre></td></tr></table></figure><p>저의 경우는 3.x버전대를 이용하기에 3.x버전대의 명령어로 실행을 하겠습니다.</p><p><img src="004-14.png" alt="image"></p><p>피에조 부저에서 소리가 나오게 되면 정상적으로 된것입니다.</p><p>만일 소리가 안나올경우 점퍼케이블 연결이나 피에조 부저의 불량을 생각해 보셔야만 합니다.</p><p><a href="https://youtu.be/nSfyOi0Sai0"><img src="http://img.youtube.com/vi/nSfyOi0Sai0/0.jpg" alt="AkibaTV"></a></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Python/">Python</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/GPIO/">GPIO</category>
      
      <category domain="https://playneko.github.io/tags/Python/">Python</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B9%83%ED%97%88%EB%B8%8C/">깃허브</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4/">오픈소스</category>
      
      <category domain="https://playneko.github.io/tags/buzzer/">buzzer</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B2%BD%EB%B3%B4%EC%9D%8C/">경보음</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B6%80%EC%A0%80/">부저</category>
      
      <category domain="https://playneko.github.io/tags/%EC%88%98%ED%8D%BC%EB%A7%88%EB%A6%AC%EC%98%A4/">수퍼마리오</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8A%88%ED%8D%BC%EB%A7%88%EB%A6%AC%EC%98%A4/">슈퍼마리오</category>
      
      <category domain="https://playneko.github.io/tags/%ED%85%8C%EB%A7%88%EC%86%A1/">테마송</category>
      
      <category domain="https://playneko.github.io/tags/%ED%94%BC%EC%97%90%EC%A1%B0/">피에조</category>
      
      <category domain="https://playneko.github.io/tags/%ED%94%BC%EC%97%90%EC%A1%B0-%EB%B6%80%EC%A0%80/">피에조 부저</category>
      
      
      <comments>https://playneko.github.io/2020/06/21/rasberry-pi/rasberry-pi-027/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>초! 고칼로리 레시피 동인지 뚱보 커틀릿 3권</title>
      <link>https://playneko.github.io/2020/06/21/akihabara/akihabara-005/</link>
      <guid>https://playneko.github.io/2020/06/21/akihabara/akihabara-005/</guid>
      <pubDate>Sat, 20 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;초! 고칼로리 레시피 동인지 뚱보 커틀릿! 3권 드디어 20,000kcal를 넘었습니다!&lt;br&gt;동인 써클 가치마가(아소아이미씨)의 겨울 코미케 신간·고칼로리 레시피 동인지&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="초-고칼로리-레시피-동인지-뚱보-커틀릿-3권-드디어-20-000kcal를-넘었습니다"><a href="#초-고칼로리-레시피-동인지-뚱보-커틀릿-3권-드디어-20-000kcal를-넘었습니다" class="headerlink" title="초! 고칼로리 레시피 동인지 뚱보 커틀릿! 3권 드디어 20,000kcal를 넘었습니다!"></a>초! 고칼로리 레시피 동인지 뚱보 커틀릿! 3권 드디어 20,000kcal를 넘었습니다!</h2><p><img src="2_675b44ff25e2268f84192212d6b67653.png" alt="image"></p><p>동인 써클 가치마가(아소아이미씨)의 겨울 코미케 신간·고칼로리 레시피 동인지</p><p>(뚱봉 커틀릿 3권 입고)</p><p><img src="3_9fe8f7b132f5c2c065dfb01c89c8ce19.png" alt="image"></p><p>피자 소바 : 1404kcal (레시피 작성자 : 울퉁불퉁 놀이 안자이씨)</p><p>카르파스 : 276kcal, 라드 : 226kcal 이외…</p><p><img src="4_8ca6e4ff76b8b3c8c1565a76f5af3b54.png" alt="image"></p><p>챠슈 카르보나라 그라탕 : 2460kcal (고젠카이시노미야씨)</p><p>마카로니 : 650kcal, 삼겹살 차슈 : 504kcal 이외…</p><p><img src="5_b1fcbcac1eee44a65f785774fba9c179.png" alt="image"></p><p>흰살생선과 치즈 크림파이 : 2845kcal (이모리 수산 리틀씨)</p><p>파이시트 : 1851kcal, 녹는치즈 : 381kcal 이외…</p><p>동인 써클 이치마야(아소아이미씨)의 겨울 코미케 신간·고칼로리 레시피 동인지</p><p>(대부카츠! 3권)이 COMICZIN 아키하바라점에 1일에 입하했다.</p><p>동인 써클 이치마야는 2017년 겨울 코미케에서 첫번째 고칼로리 레시피 동인지 “데부카츠!”를,</p><p>2018년 겨울 코미케에서 최대 3610kcal의 레시피를 수록한 두 번째 “데부카츠!”를 판매해 온 동인 써클 입니다.</p><p><img src="7_a57c0523a7465e22d755ca1d2232b6cd.png" alt="image"></p><p>버터를 듬뿍넣은 핫샌드 (1070kcal)</p><p><img src="8_6cf04b34d5477b6b99f686b0a8a828f0.png" alt="image"></p><p>타이완 마제 우동 (1663kcal)</p><p><img src="9_6aac7e63752b7122474f5d739743be04.png" alt="image"></p><p>마카로니 하루마키 (1652kcal)</p><p><img src="10_7ac11c1f3fc1ca8ffac16a95941699b6.png" alt="image"></p><p>치즈in 돼지 튀김 덮밥 날계란을 곁들여서 (2026kcal)</p><p><img src="11_9285766022bc1667f3e3f9f891fbeaa6.png" alt="image"></p><p>철판 나폴리탄 볼케이노 (2631kcal)</p><p><img src="12_d70cbd6d8c468c0359a29aa188a1b521.png" alt="image"></p><p>아리고로 만든 셰파즈 파이 (1830kcal)</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%95%84%ED%82%A4%EB%B0%94-%EC%A0%95%EB%B3%B4/">아키바 정보</category>
      
      
      <category domain="https://playneko.github.io/tags/%EC%95%84%ED%82%A4%ED%95%98%EB%B0%94%EB%9D%BC/">아키하바라</category>
      
      <category domain="https://playneko.github.io/tags/akihabara/">akihabara</category>
      
      <category domain="https://playneko.github.io/tags/%E7%A7%8B%E8%91%89%E5%8E%9F/">秋葉原</category>
      
      <category domain="https://playneko.github.io/tags/%E3%82%A2%E3%82%AD%E3%83%90/">アキバ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A7%8C%ED%99%94/">만화</category>
      
      <category domain="https://playneko.github.io/tags/%EC%95%84%ED%82%A4%EB%B0%94/">아키바</category>
      
      <category domain="https://playneko.github.io/tags/%EB%8F%99%EC%9D%B8%EC%9E%91%EA%B0%80/">동인작가</category>
      
      <category domain="https://playneko.github.io/tags/%EB%8F%99%EC%9D%B8%EC%A7%80/">동인지</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8B%A0%EA%B0%84/">신간</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8D%A8%ED%81%B4/">써클</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%AF%B8%EC%BC%80/">코미케</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B0%80%EC%B9%98%EB%A7%88%EA%B0%80/">가치마가</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B3%A0%EC%B9%BC%EB%A1%9C%EB%A6%AC/">고칼로리</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9A%B1%EB%B3%B4/">뚱보</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A0%88%EC%8B%9C%ED%94%BC/">레시피</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BB%A4%ED%8B%80%EB%A6%BF/">커틀릿</category>
      
      
      <comments>https://playneko.github.io/2020/06/21/akihabara/akihabara-005/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>돈까스 동인지 돈까스! Vol.5 전국편 (일본 전국 맛집 멋집 돈까스집 소개)</title>
      <link>https://playneko.github.io/2020/06/20/akihabara/akihabara-004/</link>
      <guid>https://playneko.github.io/2020/06/20/akihabara/akihabara-004/</guid>
      <pubDate>Fri, 19 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;돈까스 동인지 돈까스! Vol.5 전국편 (일본 전국 맛집 멋집 돈까스집 소개)&lt;br&gt;동인 작가 써클 밤나무와 곶간의 돈까스 동인지  [돈까스! Vol.5 전국편]&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="돈까스-동인지-돈까스-Vol-5-전국편-일본-전국-맛집-멋집-돈까스집-소개"><a href="#돈까스-동인지-돈까스-Vol-5-전국편-일본-전국-맛집-멋집-돈까스집-소개" class="headerlink" title="돈까스 동인지 돈까스! Vol.5 전국편 (일본 전국 맛집 멋집 돈까스집 소개)"></a>돈까스 동인지 돈까스! Vol.5 전국편 (일본 전국 맛집 멋집 돈까스집 소개)</h2><p><img src="2_323da9f2c30c24f145397b122aa2a5cd.png" alt="image"></p><p>동인 작가 써클 밤나무와 곶간의 돈까스 동인지  [돈까스! Vol.5 전국편]</p><p><img src="3_0661fbde457d91cc76b46a75647f2eb8.png" alt="image"></p><p>소금절임 특상 리브심지 돈까스</p><p>(고기가 아주 부드럽고 입안에서 고기의 육즙이 터지는 듯한 식감)</p><p><img src="4_3e40a79dc80e23273c3f871384109a82.png" alt="image"></p><p>와카바 (후쿠오카)</p><p>카고시마산 운마카 상급 등심(돼지) 커틀릿 정식 입니다.</p><p>후쿠오카 텐진에 있는 엄선한 빵가루와 저온에서 튀긴 명품 돼지고기 입니다.</p><p><img src="5_baf1aabc1f393873ba32c2142a7f7078.png" alt="image"></p><p>야바톤 본점(아이치현)과 라지사이즈 돈까스 정식(기본 소스와 된장소스 반반)</p><p>된장소스와 기본 소스 두가지 맛을 즐길수 있는 짚신 돈까스</p><p>동인 작가 써클 밤나무와 곶간(쿠리코씨)의 겨울 코미케 신간으로</p><p>돈까스 동인지 (돈까스! Vol.5 전국편)이, 멜론북스에 입하되었다.</p><p><img src="7_a7df0dfb68906bf7d7e0b6cc4c984ce1.png" alt="image"></p><p>쿡팬 오아라이 출장소 (이바라키현)</p><p><img src="8_2e7ab68cab8e21d971b8ea94be82e87f.png" alt="image"></p><p>요시베 (효고현)</p><p><img src="9_a9f00522f4aba5130aaf02cfa4e16960.png" alt="image"></p><p>카츠세이 (미야기현)</p><p><img src="10_69721800b0ae5ab1c9af2e2062291629.png" alt="image"></p><p>돈팔 (아이치현)</p><p><img src="11_57b313b7f2daf085bbbb1e7def60b57a.png" alt="image"></p><p>카와히사 (카고시마현)</p><p><img src="12_3c4c6e5d395857e7093a702aed4284ec.png" alt="image"></p><p>쿠레토미 DIA PARK PREMIRE (인도)</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%95%84%ED%82%A4%EB%B0%94-%EC%A0%95%EB%B3%B4/">아키바 정보</category>
      
      
      <category domain="https://playneko.github.io/tags/%EC%95%84%ED%82%A4%ED%95%98%EB%B0%94%EB%9D%BC/">아키하바라</category>
      
      <category domain="https://playneko.github.io/tags/akihabara/">akihabara</category>
      
      <category domain="https://playneko.github.io/tags/%E7%A7%8B%E8%91%89%E5%8E%9F/">秋葉原</category>
      
      <category domain="https://playneko.github.io/tags/%E3%82%A2%E3%82%AD%E3%83%90/">アキバ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A7%8C%ED%99%94/">만화</category>
      
      <category domain="https://playneko.github.io/tags/%EC%95%84%ED%82%A4%EB%B0%94/">아키바</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B3%B6%EA%B0%84/">곶간</category>
      
      <category domain="https://playneko.github.io/tags/%EB%8F%88%EA%B9%8C%EC%8A%A4/">돈까스</category>
      
      <category domain="https://playneko.github.io/tags/%EB%8F%99%EC%9D%B8%EC%9E%91%EA%B0%80/">동인작가</category>
      
      <category domain="https://playneko.github.io/tags/%EB%8F%99%EC%9D%B8%EC%A7%80/">동인지</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A6%AC%EB%B8%8C%EC%8B%AC%EC%A7%80/">리브심지</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B0%A4%EB%82%98%EB%AC%B4/">밤나무</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8B%A0%EA%B0%84/">신간</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8D%A8%ED%81%B4/">써클</category>
      
      <category domain="https://playneko.github.io/tags/%EC%A0%84%EA%B5%AD%ED%8E%B8/">전국편</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%AF%B8%EC%BC%80/">코미케</category>
      
      
      <comments>https://playneko.github.io/2020/06/20/akihabara/akihabara-004/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이로 레트로(ReTroPie) 게임기 만들기</title>
      <link>https://playneko.github.io/2020/06/20/rasberry-pi/rasberry-pi-026/</link>
      <guid>https://playneko.github.io/2020/06/20/rasberry-pi/rasberry-pi-026/</guid>
      <pubDate>Fri, 19 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이로 레트로(ReTroPie) 게임기 만들기&lt;br&gt;이번에 소개할 내용은 라즈베리파이를 이용해서 레트로(ReTroPie) 게임기를 만들어 보겠습니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이로-레트로-ReTroPie-게임기-만들기"><a href="#라즈베리파이로-레트로-ReTroPie-게임기-만들기" class="headerlink" title="라즈베리파이로 레트로(ReTroPie) 게임기 만들기"></a>라즈베리파이로 레트로(ReTroPie) 게임기 만들기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 라즈베리파이를 이용해서 레트로(ReTroPie) 게임기를 만들어 보겠습니다.</p><p>고전게임을 좋아하시거나 고전게임이 무엇인지 잘 모르시는 분들께 한번 만들어서 즐기시는것을</p><p>한번쯤 추천을 드리겠습니다.</p><p>오랜만에 옛날게임을 즐기며 추억의 향수를 느끼실수 있습니다.</p><blockquote><h5 id="준비물"><a href="#준비물" class="headerlink" title="준비물"></a>준비물</h5><ul><li>라즈베리파이 3(Raspberry Pi 3 model B)</li><li>레트로파이용 전용 케이스</li><li>SD카드 8기가 이상</li><li>HDMI케이블</li><li>5V 2A USB 케이블과 어뎁터</li><li>USB키보드 또는 게임기 패드</li></ul></blockquote><p>위의 준비물이 갖춰졌으면 본격적으로 레트로 게임기를 만들어 보겠습니다.</p><h4 id="라즈베리파이-오락실"><a href="#라즈베리파이-오락실" class="headerlink" title="라즈베리파이 오락실"></a>라즈베리파이 오락실</h4><p>레트로파이 간략한 준비물의 상태는 아래와 같습니다.</p><p><img src="001-5.jpg" alt="image"></p><p>케이스를 꺼내기전 박스포장된 상태 입니다.</p><p>박스포장도 레트로 게임기 디자인으로 되어 있습니다.</p><p><img src="002-3.jpg" alt="image"></p><p>박스에서 레트로게임기 케이스를 꺼낸 모습 입니다.</p><p>옆에는 각 구조 설명과 조립방법이 적혀져 있습니다.</p><p><img src="003-1.jpg" alt="image"></p><p>조립하기전 부품 상세 내용물 입니다.</p><p><img src="004-1.jpg" alt="image"></p><p>조립이 완성되었습니다.</p><p>본격적으로 게임기로 사용할수 있게 다음 준비를 하도록 하겠습니다.</p><p>우선 SD카드에 레트로파이용 OS를 설치부터 진행을 하도록 하겠습니다.</p><p>SD카드를 컴퓨터에 삽입후 balenaEtcher를 실행해 주세요.</p><p>balenaEtcher에 대해 잘 모르실경우 라즈베리파이3 B 설치하기를 참고해 주세요.</p><p>SD카드를 삽입을 하시고 balenaEtcher를 실행을 해주셨으면</p><p>아래의 레트로파이 사이트에서 레트로파이용 OS를 다운로드 받아주세요.</p><p><a href="https://retropie.org.uk/download/">https://retropie.org.uk/download/</a></p><p><img src="001-13.png" alt="image"></p><p>보유하신 라즈베리파이 기종에 맞게 다운로드를 해주시기 바랍니다.</p><p><img src="002-13.png" alt="image"></p><p>balenaEtcher를 실행한 상태 입니다.</p><p><img src="003-14.png" alt="image"></p><p>첫번째에 다운로드 받으신 레트로파이 OS 이미지파일을 선택하시고</p><p>두번째는 컴퓨터에 삽입하신 SD카드를 선택해 주세요. 그리고 마지막 Flash!버튼을 눌러주시기 바랍니다.</p><p><img src="004-13.png" alt="image"></p><p><img src="005-9.png" alt="image"></p><p>위와같이 나오면 SD카드를 포맷후 레트로파이 OS 설치가 진행 됩니다.</p><p><img src="006-10.png" alt="image"></p><p>레트로파이 OS 설치가 완료 되었습니다.</p><p>SD카드를 추출하시고 라즈베리파이에 삽입을 해주시기 바랍니다.</p><p>그리고 모니터 또는 티비에 연결을 하신후 전원을 넣어주시기 바랍니다.</p><p><img src="006.jpg" alt="image"></p><p>그러면 레트로파이 OS가 기동을 하는게 나오게 됩니다.</p><p>조금 기다리시면 자동으로 넘어가게 됩니다.</p><p><img src="007.jpg" alt="image"></p><p>처음 화면 입니다.</p><p><img src="008.jpg" alt="image"></p><p>USB키보드 또는 게임기 패드로 조작키 설정을 하는 화면이 나오게 되며</p><p>안내대로 따라서 설정을 하시고 완료를 하시면 됩니다.</p><p><img src="009.jpg" alt="image"></p><p>모든 설정이 끝나면 이런 화면이 나오고 이제 게임을 즐기실수 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/%EC%95%84%ED%82%A4%EB%B0%94-%EC%A0%95%EB%B3%B4/">아키바 정보</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/balenaEtcher/">balenaEtcher</category>
      
      <category domain="https://playneko.github.io/tags/HDMI/">HDMI</category>
      
      <category domain="https://playneko.github.io/tags/OS/">OS</category>
      
      <category domain="https://playneko.github.io/tags/ReTroPie/">ReTroPie</category>
      
      <category domain="https://playneko.github.io/tags/SD%EC%B9%B4%EB%93%9C/">SD카드</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B2%8C%EC%9E%84%EA%B8%B0/">게임기</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B2%8C%EC%9E%84%EA%B8%B0-%ED%8C%A8%EB%93%9C/">게임기 패드</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B3%A0%EC%A0%84%EA%B2%8C%EC%9E%84/">고전게임</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A0%88%ED%8A%B8%EB%A1%9C/">레트로</category>
      
      <category domain="https://playneko.github.io/tags/%EC%98%A4%EB%9D%BD%EC%8B%A4/">오락실</category>
      
      
      <comments>https://playneko.github.io/2020/06/20/rasberry-pi/rasberry-pi-026/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에 GPIO 파이썬을 이용해 초음파 센서(HC-SR04) 제어하기</title>
      <link>https://playneko.github.io/2020/06/19/rasberry-pi/rasberry-pi-025/</link>
      <guid>https://playneko.github.io/2020/06/19/rasberry-pi/rasberry-pi-025/</guid>
      <pubDate>Thu, 18 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에 GPIO 파이썬을 이용해 초음파 센서(HC-SR04) 제어하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이에 GPIO, 파이썬을 이용해 초음파 센서(HC-SR04) 제어하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에-GPIO-파이썬을-이용해-초음파-센서-HC-SR04-제어하기"><a href="#라즈베리파이에-GPIO-파이썬을-이용해-초음파-센서-HC-SR04-제어하기" class="headerlink" title="라즈베리파이에 GPIO 파이썬을 이용해 초음파 센서(HC-SR04) 제어하기"></a>라즈베리파이에 GPIO 파이썬을 이용해 초음파 센서(HC-SR04) 제어하기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 라즈베리파이에 GPIO, 파이썬을 이용해 초음파 센서(HC-SR04) 제어하기 입니다.</p><p>초음파 센서를 통해서 거리를 계산을 하거나 할경우 이용을 하실수가 있습니다.</p><p>초음파 센서를 제어하기 위해선 우선 준비물이 필요합니다.</p><blockquote><h5 id="준비물"><a href="#준비물" class="headerlink" title="준비물"></a>준비물</h5><ul><li>라즈베리파이 OS가 설치된 라즈베리파이</li><li>ELEGOO Arduino용 HC-SR04 초음파 센서 1개</li><li>점퍼케이블 암,수 4줄</li><li>플레이트 보드 1개</li><li>1KΩ 저항 1개, 2KΩ저항 1개</li></ul></blockquote><p>준비물이 준비가 되셨으면 본격적으로 초음파 센서 제어를 해보도록 하겠습니다.</p><p>아래의 회로도를 참고하셔서 케이블과 센서를 연결을 해주시기 바랍니다.</p><p><img src="001-12.png" alt="image"></p><p><img src="RasPiGPIO.png" alt="image"></p><p><img src="001-4.jpg" alt="image"></p><p><img src="002-2.jpg" alt="image"></p><blockquote><ul><li>1KΩ 저항은 Echo와 연결을 해주세요.</li><li>2KΩ 저항은 GND와 연결을 해주세요.</li><li>Trig는 GPIO 17번과 연결을 해주세요.</li><li>Echo는 GPIO 18번과 연결을 해주세요.</li></ul></blockquote><p>Echo의 경우 5V의 전압을 사용하기 때문에</p><p>저항을 이용해서 라즈베리파이에 부담을 주지않는 3.3V로 다시 낮춰 주셔야만 합니다.</p><table><thead><tr><th align="center">Color</th><th align="center">Pi GPIO Pin</th><th align="center">Notes</th></tr></thead><tbody><tr><td align="center">Red</td><td align="center">2</td><td align="center">5V</td></tr><tr><td align="center">Yellow</td><td align="center">11</td><td align="center">17</td></tr><tr><td align="center">White</td><td align="center">12</td><td align="center">18(PWM0)</td></tr><tr><td align="center">Gray</td><td align="center">39</td><td align="center">GND</td></tr></tbody></table><p>GPIO핀에 대한 자세한 내용을 원하시는 분은 아래의 링크를 들어가셔서 참고해 주세요.</p><p><a href="https://playneko.github.io/2020/05/28/rasberry-pi-011/">라즈베리파이에서 GPIO를 사용하기전 알아두어야 할 사항</a></p><p>위와같이 라즈베리파이와 플레이트 보드의 구성을 모두 마치셨으면</p><p>이제 본격적인 코딩을 해야만 합니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)를 실행해 주시기 바랍니다</p><p><img src="002-12.png" alt="image"></p><p>실행을 하셨으면 파일명을 gpio_HC-SR04.py로 추가를 해주시기 바랍니다.</p><p><img src="003-13.png" alt="image"></p><p>간단한 예제로 파이썬을 이용해 초음파 센서(HC-SR04)를 제어할 소스를 작성 하겠습니다.</p><p>아래의 코드를 입력해 주세요.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;AkibaTV HC-SR04 Start&quot;</span>)</span><br><span class="line"></span><br><span class="line">GPIO.setmode(GPIO.BCM)</span><br><span class="line"><span class="comment"># Yellow : Pin 11 : 17(Trig)</span></span><br><span class="line">GPIO.setup(<span class="number">17</span>, GPIO.OUT)</span><br><span class="line"><span class="comment"># White : Pin 12 : 18(Echo)</span></span><br><span class="line">GPIO.setup(<span class="number">18</span>, GPIO.IN)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        GPIO.output(<span class="number">17</span>, <span class="literal">False</span>)</span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">        GPIO.output(<span class="number">17</span>, <span class="literal">True</span>)</span><br><span class="line">        time.sleep(<span class="number">0.00001</span>)</span><br><span class="line">        GPIO.output(<span class="number">17</span>, <span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 18번이 OFF가 되는 시점을 시작시간으로 설정</span></span><br><span class="line">        <span class="keyword">while</span> GPIO.<span class="built_in">input</span>(<span class="number">18</span>) == <span class="number">0</span>:</span><br><span class="line">            start = time.time()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 18번이 ON이 되는 시점을 반사파 수신시간으로 설정</span></span><br><span class="line">        <span class="keyword">while</span> GPIO.<span class="built_in">input</span>(<span class="number">18</span>) == <span class="number">1</span>:</span><br><span class="line">            stop = time.time()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 초음파가 되돌아오는 시간차로 거리를 계산한다</span></span><br><span class="line">        time_interval = stop - start</span><br><span class="line">        distance = time_interval * <span class="number">17000</span></span><br><span class="line">        distance = <span class="built_in">round</span>(distance, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        print(<span class="string">&quot;Distance =&gt; &quot;</span>, distance, <span class="string">&quot;cm&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    GPIO.cleanup()</span><br><span class="line">    print(<span class="string">&quot;AkibaTV HC-SR04 End&quot;</span>)</span><br></pre></td></tr></table></figure><p>작성하신 소스를 라즈베리파이에 넣고 실행을 하기위해</p><p>소스파일을 라즈베리파이의 임의의 폴더에 올려주시기 바랍니다.</p><p>그리고 라즈베리파이를 VNC를 이용해 접속후 터미널을 실행해 주세요.</p><p><img src="004-1-2.png" alt="image"></p><p>라즈베리파이의 리스트 목록을 보시면 gpio_HC-SR04.py 파일명으로 파일이 올라가 있는걸 확인할수 있습니다.</p><p>이제 명령어로 초음파 센서(HC-SR04)가 작동하는지 확인 해보도록 하겠습니다.</p><p>아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬 2.x버전대를 이용하실경우</span></span><br><span class="line">$ sudo python ./gpio_HC-SR04.py</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬 3.x버전대를 이용하실경우</span></span><br><span class="line">$ sudo python3 ./gpio_HC-SR04.py</span><br></pre></td></tr></table></figure><p>저의 경우는 파이썬을 3.x버전대를 사용하고 있기에 3.x의 명령어로 실행을 하도록 하겠습니다.</p><p><img src="005-8.png" alt="image"></p><p>위와같이 초음파가 실행되면 거리에 대한 값이 터미널에 출력되는것을 확인 하실수 있습니다.</p><p>미묘한 오차는 발생할수는 있을수가 있겠습니다.</p><p>초음파 센서를 이용하시면 원거리의 값이나 가까이에 무엇인가 있을경우 측정을 하실때</p><p>유용하게 사용할수가 있겠습니다.</p><p>다음에는 좀더 다양한 방법으로 초음파 센서를 이용한 방법을 소개해 드리도록 하겠습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Python/">Python</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/GPIO/">GPIO</category>
      
      <category domain="https://playneko.github.io/tags/Python/">Python</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/Echo/">Echo</category>
      
      <category domain="https://playneko.github.io/tags/HC-SR04/">HC-SR04</category>
      
      <category domain="https://playneko.github.io/tags/Trig/">Trig</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B4%88%EC%9D%8C%ED%8C%8C/">초음파</category>
      
      <category domain="https://playneko.github.io/tags/%EC%B4%88%EC%9D%8C%ED%8C%8C-%EC%84%BC%EC%84%9C/">초음파 센서</category>
      
      
      <comments>https://playneko.github.io/2020/06/19/rasberry-pi/rasberry-pi-025/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>사신짱 스핀오프 고기 미노스 쇠고기 100% 1권 진보초에서 고기 먹는다!</title>
      <link>https://playneko.github.io/2020/06/19/akihabara/akihabara-003/</link>
      <guid>https://playneko.github.io/2020/06/19/akihabara/akihabara-003/</guid>
      <pubDate>Thu, 18 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;사신짱 스핀오프 고기 미노스 쇠고기 100% 1권 진보초에서 고기 먹는다!&lt;br&gt;사신짱 드롭킥 스핀오프 만화 [미노스의 비프 100%] 1권 발매&lt;br&gt;악마가 진보쵸에서 고기를 먹는 포만 코미디! 만화&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="사신짱-스핀오프-고기-미노스-쇠고기-100-1권-진보초에서-고기-먹는다"><a href="#사신짱-스핀오프-고기-미노스-쇠고기-100-1권-진보초에서-고기-먹는다" class="headerlink" title="사신짱 스핀오프 고기 미노스 쇠고기 100% 1권 진보초에서 고기 먹는다!"></a>사신짱 스핀오프 고기 미노스 쇠고기 100% 1권 진보초에서 고기 먹는다!</h2><p><img src="2_4662ea456352915e8c51a8ba19119d82.png" alt="image"></p><p>사신짱 드롭킥 스핀오프 만화 [미노스의 비프 100%] 1권 발매</p><p>악마가 진보쵸에서 고기를 먹는 포만 코미디! 만화</p><p><img src="3_8b5b40fe7f1dcec506a2767e6574542b.png" alt="image"></p><p>작중에는 실제 점포가 등장.</p><p>진보쵸 식육 센터</p><p>“여기다” “에이, 내장 전문점이야?”</p><p><img src="4_0f147ba92a7aaa9f6ee690bf05b2e25c.png" alt="image"></p><p>첫 육회 (고기 두께에 식감도 있고… 육회밖에 맛볼수 없는 이 단맛)</p><p><img src="5_3d389476ae458660bbdeb1f7a717da97.png" alt="image"></p><p>기뻐해라 미노스야. 다음에 오는 고기는 네가 가장 좋아하는 갈매기 같은 고기인데,</p><p>그것과는 차원이 다른, 아직 보지 못한 넥스트 스테이지 고기다!</p><p><img src="6_097264aec684ce06997f61ed3175be49.png" alt="image"></p><p>안경 (하라미 같은 탄력과 붉은색 고기의 맛을 가진 희귀 부위)</p><p>(두툼한 고기인데 엄청 부드럽고 고기 자체의 질감을 충분히 맛볼수 있다)</p><p><img src="7_ef6b631647752aaf0bb78074dfd8f345.png" alt="image"></p><p>게이머즈 본점 (특전: 북커버)</p><p><img src="8_7ad13d3262e64a2931fa172f6924aff1.png" alt="image"></p><p>게이머즈 한정판 있음 토라노아나 아키하바라점A</p><p>(특전: 일러스트 카드)</p><p><img src="9_9853cd0fa52c1818d015c568f79b53f8.png" alt="image"></p><p>COMICZIN 아키하바라점 (특전: 일러스트 카드)</p><p><img src="11_43a8056e79558b434becd306ba6d7763.png" alt="image"></p><p>카미보우 (와~ 유리네가 추천하는 가게구나~)</p><p>‘여긴 뒷면 본디야’</p><p><img src="12_2545a35216339f415db8b42e2c0c958a.png" alt="image"></p><p>이건 방심하면… 볼이 떨어지는 맛이야~</p><p><img src="13_abe824cb90306fd3c3d83102ada88727.png" alt="image"></p><p>비프 스튜, 햄버거, 그리고 살로인 스테이크.</p><p>오늘의 나는 비프 300%다!</p><p><img src="14_91076c6e07fd443d31ea6da5454ea471.png" alt="image"></p><p>오! 여기야! 오늘 가게는 야키니쿠처 삼행원</p><p><img src="15_eb20850c64d3d6ca7ce260ff754a8f73.png" alt="image"></p><p>“우선은 소 혀! 잘 썰린 소 혀 입니다~!”</p><p><img src="16_bf2859fa3f09907433716164ce4fa24b.png" alt="image"></p><p>들어올린 이 갈매기를… 철판 위로… 고!</p><p><img src="17_0ad5b426716fda4717f9c55d474b1781.png" alt="image"></p><p>어린 양고기 주물럭 입니다</p><p><img src="18_06320ed63bf100264f0f749944317849.png" alt="image"></p><p>오! 불고기에 머스타드 소스는 낭만적이야!</p><p><img src="19_c54cf9099139c1148fabbf9f11ce8f1e.png" alt="image"></p><p>응축된 살코기의 느낌과 비계의 단맛의 밸런스</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%95%84%ED%82%A4%EB%B0%94-%EC%A0%95%EB%B3%B4/">아키바 정보</category>
      
      
      <category domain="https://playneko.github.io/tags/%EC%95%84%ED%82%A4%ED%95%98%EB%B0%94%EB%9D%BC/">아키하바라</category>
      
      <category domain="https://playneko.github.io/tags/akihabara/">akihabara</category>
      
      <category domain="https://playneko.github.io/tags/%E7%A7%8B%E8%91%89%E5%8E%9F/">秋葉原</category>
      
      <category domain="https://playneko.github.io/tags/%E3%82%A2%E3%82%AD%E3%83%90/">アキバ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A7%8C%ED%99%94/">만화</category>
      
      <category domain="https://playneko.github.io/tags/%EB%AF%B8%EB%85%B8%EC%8A%A4%EC%9D%98-%EB%B9%84%ED%94%84-100/">미노스의 비프 100%</category>
      
      <category domain="https://playneko.github.io/tags/%EC%82%AC%EC%8B%A0%EC%A7%B1/">사신짱</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8A%A4%ED%95%80%EC%98%A4%ED%94%84/">스핀오프</category>
      
      <category domain="https://playneko.github.io/tags/%EC%95%84%ED%82%A4%EB%B0%94/">아키바</category>
      
      <category domain="https://playneko.github.io/tags/%EC%95%85%EB%A7%88/">악마</category>
      
      <category domain="https://playneko.github.io/tags/%EC%A7%84%EB%B3%B4%EC%B5%B8/">진보쵸</category>
      
      
      <comments>https://playneko.github.io/2020/06/19/akihabara/akihabara-003/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>PHP에서 JSON데이터를 json_decode() 사용해서 파싱하기</title>
      <link>https://playneko.github.io/2020/06/18/php/php-003/</link>
      <guid>https://playneko.github.io/2020/06/18/php/php-003/</guid>
      <pubDate>Wed, 17 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;PHP에서 JSON데이터를 json_decode() 사용해서 파싱하기&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="PHP에서-JSON데이터를-json-decode-사용해서-파싱하기"><a href="#PHP에서-JSON데이터를-json-decode-사용해서-파싱하기" class="headerlink" title="PHP에서 JSON데이터를 json_decode() 사용해서 파싱하기"></a>PHP에서 JSON데이터를 json_decode() 사용해서 파싱하기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 PHP에서 JSON데이터를 json_decode() 사용해서 파싱하기</p><p>웹사이트를 개발을 하시다보시면 JSON 데이터를 많이 이용하시는것을 아실것 입니다.</p><p>API를 이용해도 데이터를 주고 받을경우 JSON형태로 주고 받기때문에</p><p>JSON데이터를 받아도 PHP에서 사용할수있게 파싱을 해주는 작업이 필요 합니다.</p><p>이번시간에는 JSON데이터를 PHP의 json_decode()를 이용해서 간단히 파싱하는 방법을 알아보겠습니다.</p><p>우선 간단하게 예제를 이용해서 어떻게 변환이 되는지 해보도록 하겠습니다.</p><p>그럼 우선 Visual Studio Code(비주얼 스튜디오 코드)를 실행해 주시기 바랍니다.</p><p>실행을 하셨으면 파일명을 php_json_decode.php로 추가를 해주시기 바랍니다.</p><p><img src="https://playneko.com/wp-content/uploads/2020/06/001-16.png" alt="image"></p><p>그럼 1차원적인 JSON데이터를 Json_decode를 이용해서 파싱을 해보도록 하겠습니다.</p><p>아래의 코드를 작성해 주시기 바랍니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$jsonData</span> = <span class="string">&quot;&#123;\&quot;name\&quot;:\&quot;AkibaTV\&quot;,\&quot;age\&quot;:20,\&quot;birth\&quot;:\&quot;1900\/01\/01\&quot;,\&quot;date\&quot;:\&quot;2020-06-16 23:27:11\&quot;&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    print_r(json_decode(<span class="variable">$jsonData</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://playneko.com/wp-content/uploads/2020/06/002-2-1.png" alt="image"></p><p>작성을 하셨으면 라즈베리파이 웹서버 또는 개인서버, 호스팅서버에 업로드를 해주시기 바랍니다.</p><p>저는 라즈베리파이에 웹서버를 구축을 해두었기때문에 라즈베리파이 웹서버를 이용하도록 하겠습니다.</p><p><img src="https://playneko.com/wp-content/uploads/2020/06/004-16.png" alt="image"></p><p>서버에 파일이 올라간것을 확인 했으므로 실행을 해보도록 하겠습니다.</p><p>웹브라우저를 실행하시고 http://각웹서버URL/php_json_decode.php 를 실행해 주세요.</p><p><img src="https://playneko.com/wp-content/uploads/2020/06/003-17.png" alt="image"></p><p>JSON형태의 데이터가 Array형태의 오브젝트로 변환된것을 확인 하실수 있습니다.</p><p>변환된 데이터는 PHP에서 가공해서 사용을 하실수 있습니다.</p><p>그러면 이번에는 JSON안에 또다른 배열 데이터가 존재할 경우에 대해서 해보도록 하겠습니다.</p><p>아까 만들어둔 파일에서 추가로 작성을 하도록 하겠습니다.</p><p>아래의 소스코드를 작성해 주시기 바랍니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$jsonData</span> = <span class="string">&quot;&#123;\&quot;name\&quot;:\&quot;AkibaTV\&quot;,\&quot;age\&quot;:20,\&quot;birth\&quot;:\&quot;1900\/01\/01\&quot;,\&quot;date\&quot;:\&quot;2020-06-16 23:27:11\&quot;,\&quot;address\&quot;:&#123;\&quot;zipcode\&quot;:\&quot;123-1234\&quot;,\&quot;address1\&quot;:\&quot;abcdefg\&quot;,\&quot;address2\&quot;:\&quot;hijklmn\&quot;&#125;&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    print_r(json_decode(<span class="variable">$jsonData</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://playneko.com/wp-content/uploads/2020/06/005-11.png" alt="image"></p><p>작성을 하셨으면 서버에 올려주시고 실행을 해주시기 바랍니다.</p><p><img src="https://playneko.com/wp-content/uploads/2020/06/006-11.png" alt="image"></p><p>위와같이 JSON데이터가 Object형태로 변환이 된것을 보실수 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/PHP/">PHP</category>
      
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/%EC%84%9C%EB%B2%84/">서버</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/tags/%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C/">소스코드</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/%ED%95%A8%EC%88%98/">함수</category>
      
      <category domain="https://playneko.github.io/tags/JSON/">JSON</category>
      
      <category domain="https://playneko.github.io/tags/json-encode/">json_encode</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B0%B0%EC%97%B4/">배열</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC/">비주얼</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4/">비주얼 스튜디오</category>
      
      <category domain="https://playneko.github.io/tags/%ED%98%B8%EC%8A%A4%ED%8C%85/">호스팅</category>
      
      <category domain="https://playneko.github.io/tags/Object/">Object</category>
      
      <category domain="https://playneko.github.io/tags/%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8/">오브젝트</category>
      
      
      <comments>https://playneko.github.io/2020/06/18/php/php-003/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>PHP에서 json_encode() 사용해서 JSON데이터 변환</title>
      <link>https://playneko.github.io/2020/06/17/php/php-002/</link>
      <guid>https://playneko.github.io/2020/06/17/php/php-002/</guid>
      <pubDate>Tue, 16 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;PHP에서 json_encode() 사용해서 JSON데이터 변환&lt;br&gt;이번에 소개할 내용은 PHP에서 json_encode() 사용해서 JSON데이터 변환 하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="PHP에서-json-encode-사용해서-JSON데이터-변환"><a href="#PHP에서-json-encode-사용해서-JSON데이터-변환" class="headerlink" title="PHP에서 json_encode() 사용해서 JSON데이터 변환"></a>PHP에서 json_encode() 사용해서 JSON데이터 변환</h2><p>안녕하세요</p><p>이번에 소개할 내용은 PHP에서 json_encode() 사용해서 JSON데이터 변환 하기 입니다.</p><p>JSON데이터는 웹과 서버 또는 서버와 서버끼리</p><p>환경과 언어가 달라도 데이터를 주고 받을수 있는 데이터 전송 포맷 입니다.</p><p>우선 간단하게 예제를 이용해서 어떻게 변환이 되는지 해보도록 하겠습니다.</p><p>그럼 우선 Visual Studio Code(비주얼 스튜디오 코드)를 실행해 주시기 바랍니다.</p><p>실행을 하셨으면 파일명을 php_json_encode.php로 추가를 해주시기 바랍니다.</p><p><img src="https://playneko.com/wp-content/uploads/2020/06/001-15.png" alt="image"></p><p>그럼 1차원적인 Array를 Json_encode를 이용해서 json형식으로 변환을 해보도록 하겠습니다.</p><p>아래의 코드를 작성해 주시기 바랍니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$jsonData</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;AkibaTV&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span> =&gt; <span class="number">20</span>,</span><br><span class="line">        <span class="string">&#x27;birth&#x27;</span> =&gt; <span class="string">&#x27;1900/01/01&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;date&#x27;</span> =&gt; date(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$jsonData</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>작성을 하셨으면 라즈베리파이 웹서버 또는 개인서버, 호스팅서버에 업로드를 해주시기 바랍니다.</p><p>저는 라즈베리파이에 웹서버를 구축을 해두었기때문에 라즈베리파이 웹서버를 이용하도록 하겠습니다.</p><p><img src="https://playneko.com/wp-content/uploads/2020/06/002-15.png" alt="image"></p><p>서버에 파일이 올라간것을 확인 했으므로 실행을 해보도록 하겠습니다.</p><p>웹브라우저를 실행하시고 http://각웹서버URL/php_json_encode.php 를 실행해 주세요.</p><p><img src="https://playneko.com/wp-content/uploads/2020/06/003-16.png" alt="image"></p><p>Array데이터가 JSON형태로 변환된것을 확인할수가 있습니다.</p><p>그러면 이번에는 Array안에 Array가 존재 할경우에 대해서 해보도록 하겠습니다.</p><p>아까 만들어둔 파일에서 추가로 작성을 하도록 하겠습니다.</p><p>아래의 소스코드를 작성해 주시기 바랍니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$jsonData</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;AkibaTV&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span> =&gt; <span class="number">20</span>,</span><br><span class="line">        <span class="string">&#x27;birth&#x27;</span> =&gt; <span class="string">&#x27;1900/01/01&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;date&#x27;</span> =&gt; date(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;address&#x27;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;zipcode&#x27;</span> =&gt; <span class="string">&#x27;123-1234&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;address1&#x27;</span> =&gt; <span class="string">&#x27;abcdefg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;address2&#x27;</span> =&gt; <span class="string">&#x27;hijklmn&#x27;</span></span><br><span class="line">        )</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$jsonData</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://playneko.com/wp-content/uploads/2020/06/004-15.png" alt="image"></p><p>작성을 하셨으면 서버에 올려주시고 실행을 해주시기 바랍니다.</p><p><img src="https://playneko.com/wp-content/uploads/2020/06/005-10.png" alt="image"></p><p>위와같이 JSON데이터가 배열별로 변환이 된것을 보실수 있습니다.</p><p>PHP를 이용해서 JSON데이터를 간단히 변환하는것을 해보았습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/PHP/">PHP</category>
      
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/%EC%84%9C%EB%B2%84/">서버</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/%ED%95%A8%EC%88%98/">함수</category>
      
      <category domain="https://playneko.github.io/tags/JSON/">JSON</category>
      
      <category domain="https://playneko.github.io/tags/json-encode/">json_encode</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B0%B0%EC%97%B4/">배열</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC/">비주얼</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4/">비주얼 스튜디오</category>
      
      <category domain="https://playneko.github.io/tags/%ED%98%B8%EC%8A%A4%ED%8C%85/">호스팅</category>
      
      
      <comments>https://playneko.github.io/2020/06/17/php/php-002/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 또는 리눅스에서 OpenJDK JAVA_HOME설정</title>
      <link>https://playneko.github.io/2020/06/16/rasberry-pi/rasberry-pi-024/</link>
      <guid>https://playneko.github.io/2020/06/16/rasberry-pi/rasberry-pi-024/</guid>
      <pubDate>Mon, 15 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 또는 리눅스에서 OpenJDK JAVA_HOME설정&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-또는-리눅스에서-OpenJDK-JAVA-HOME설정"><a href="#라즈베리파이-또는-리눅스에서-OpenJDK-JAVA-HOME설정" class="headerlink" title="라즈베리파이 또는 리눅스에서 OpenJDK JAVA_HOME설정"></a>라즈베리파이 또는 리눅스에서 OpenJDK JAVA_HOME설정</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 라즈베리파이 또는 리눅스에서 OpenJDK JAVA_HOME설정 입니다.</p><p>저번시간에 라즈베리파이 또는 리눅스에서 OpenJDK 설치하기를 하셨으면</p><p>이부분을 필수로 설정을 해주셔야만 앞으로 JAVA프로그램을 라즈베리파이에서</p><p>구동하실때 문제없이 구동을 하실수가 있겠습니다.</p><p>JAVA_HOME은 설치하신 OpenJDK 경로와 버전을 신경쓰지 않고 바로 참조할수 있도록 하는</p><p>바로가기 기능이라고 보시면 되겠습니다.</p><p>아래는 설치하신 OpenJDK 에 따라서 설치 되어있는 경로 입니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># OpenJDK 11 버전</span></span><br><span class="line">$ OpenJDK 11 path – /usr/lib/jvm/java-11-openjdk-armhf/bin/java</span><br><span class="line"><span class="comment"># OpenJDK 8 버전</span></span><br><span class="line">$ OpenJDK 8 path – /usr/lib/jvm/java-8-openjdk-armhf/jre/bin/java</span><br></pre></td></tr></table></figure><p>이제 본격적으로 설정을 해보도록 하겠습니다.</p><h3 id="라즈베리파이-OpenJDK-11-또는-OpenJDK-8-JAVA-HOME-설정하기"><a href="#라즈베리파이-OpenJDK-11-또는-OpenJDK-8-JAVA-HOME-설정하기" class="headerlink" title="라즈베리파이 OpenJDK 11 또는 OpenJDK 8 JAVA_HOME 설정하기"></a>라즈베리파이 OpenJDK 11 또는 OpenJDK 8 JAVA_HOME 설정하기</h3><p>우선 라즈베리파이를 VNC를 이용해 접속후 터미널을 실행해 주세요.</p><p><img src="001-11.png" alt="image"></p><p>그럼 터미널에 아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi 에디터로 environment 파일을 엽니다.</span></span><br><span class="line">$ sudo vi /etc/environment</span><br></pre></td></tr></table></figure><p><img src="002-11.png" alt="image"></p><p>vi 에디터로 여시게 되면 아무것도 없는 빈페이지가 나오게 됩니다.</p><p>그럼 아래의 내용을 입력을 하시면 되겠습니다만</p><p>자신이 사용하시는 OpenJDK의 버전에 맞게 경로를 설정을 해주시면 되겠습니다.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># OpenJDK <span class="number">11</span>을 사용하시면 아래의 내용을 입력해 주시기 바랍니다.</span><br><span class="line">JAVA_HOME=<span class="string">&quot;path_of_your_default_version_of_java&quot;</span></span><br><span class="line"></span><br><span class="line"># OpenJDK <span class="number">8</span>을 설치하셨으면 아래의 내용을 입력해 주시기 바랍니다.</span><br><span class="line">JAVA_HOME=<span class="string">&quot;/usr/lib/jvm/java-8-openjdk-armhf/jre/bin/java&quot;</span></span><br><span class="line"></span><br><span class="line"># 주의사항 위의 내용을 두개다 적으시면 안됩니다. 무조건 <span class="number">1</span>개만 입력해 주세요.</span><br></pre></td></tr></table></figure><p><img src="003-12.png" alt="image"></p><p>입력을 다 하셨으면 :wq를 입력후 vi 에디터를 종료 합니다.</p><p>그리고 재부팅을 해야만 적용이 되니 아래의 명령어를 입력해서 재부팅을 하겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 재부팅</span></span><br><span class="line">$ sudo reboot</span><br></pre></td></tr></table></figure><p><img src="004-11.png" alt="image"></p><p>재부팅을 하셨으면 다시 라즈베리파이를 VNC로 실행후 터미널을 실행해 주시기 바랍니다.</p><p><img src="001-11.png" alt="image"></p><p>아래의 명령어를 입력하셔서 JAVA_HOME이 정상적으로 등록되었는지 확인해 보도록 하겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># JAVA_HOME 확인</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$JAVA_HOME</span></span><br></pre></td></tr></table></figure><p><img src="005-7.png" alt="image"></p><p>이렇게 해서 JAVA_HOME이 정상 등록이 되었습니다.</p><p>만일 설치하신 OpenJDK를 삭제를 하시고 싶으실 경우는 아래와 같이 하시면 되겠습니다.</p><p>자신의 환경에 맞게 버전을 선택하셔서 삭제를 해주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># OpenJDK 11 버전을 삭제하실 경우</span></span><br><span class="line">$ sudo apt remove default-jdk</span><br><span class="line"></span><br><span class="line"><span class="comment"># OpenJDK 8 버전을 삭제하실 경우</span></span><br><span class="line">$ sudo apt remove openjdk-8-jdk</span><br></pre></td></tr></table></figure><p>저는 OpenJDK 8을 사용하고 있기에 OpenJDK 11을 삭제하도록 하겠습니다.</p><p><img src="006-9.png" alt="image"></p><p>삭제 명령어를 하시면 위와같이 삭제를 할건지 물어보게 되면 삭제를 하실경우 Y를 입력해 주세요.</p><p><img src="007-9.png" alt="image"></p><p>이렇게해서 OpenJDK 삭제가 완료 되었습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Java/">Java</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Java/Linux/">Linux</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/vi/">vi</category>
      
      <category domain="https://playneko.github.io/tags/linux/">linux</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A6%AC%EB%88%85%EC%8A%A4/">리눅스</category>
      
      <category domain="https://playneko.github.io/tags/apt-get/">apt-get</category>
      
      <category domain="https://playneko.github.io/tags/apt/">apt</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/Java/">Java</category>
      
      <category domain="https://playneko.github.io/tags/java-version/">java -version</category>
      
      <category domain="https://playneko.github.io/tags/OpenJDK/">OpenJDK</category>
      
      <category domain="https://playneko.github.io/tags/openjdk-8-jre/">openjdk-8-jre</category>
      
      <category domain="https://playneko.github.io/tags/OpenJDK11/">OpenJDK11</category>
      
      <category domain="https://playneko.github.io/tags/OpenJDK8/">OpenJDK8</category>
      
      <category domain="https://playneko.github.io/tags/version/">version</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9E%90%EB%B0%94/">자바</category>
      
      <category domain="https://playneko.github.io/tags/JAVA-HOME/">JAVA_HOME</category>
      
      
      <comments>https://playneko.github.io/2020/06/16/rasberry-pi/rasberry-pi-024/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 또는 리눅스에서 OpenJDK 설치하기</title>
      <link>https://playneko.github.io/2020/06/15/rasberry-pi/rasberry-pi-023/</link>
      <guid>https://playneko.github.io/2020/06/15/rasberry-pi/rasberry-pi-023/</guid>
      <pubDate>Sun, 14 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 또는 리눅스에서 OpenJDK 설치하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이 또는 리눅스에서 OpenJDK 설치하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-또는-리눅스에서-OpenJDK-설치하기"><a href="#라즈베리파이-또는-리눅스에서-OpenJDK-설치하기" class="headerlink" title="라즈베리파이 또는 리눅스에서 OpenJDK 설치하기"></a>라즈베리파이 또는 리눅스에서 OpenJDK 설치하기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 라즈베리파이 또는 리눅스에서 OpenJDK 설치하기 입니다.</p><p>라즈베리파이를 처음 설치하시면 일단 기본적으로 JDK가 설치가 되어있지 않기때문에</p><p>JAVA개발 또는 Tomcat과 연동후 홈페이지를 운영하실 분들은 OpenJDK를 수동으로</p><p>설치를 해주셔야만 합니다.</p><h3 id="라즈베리파이-OpenJDK-11-설치하기"><a href="#라즈베리파이-OpenJDK-11-설치하기" class="headerlink" title="라즈베리파이 OpenJDK 11 설치하기"></a>라즈베리파이 OpenJDK 11 설치하기</h3><p>우선 라즈베리파이를 VNC를 이용해 접속후 터미널을 실행해 주세요.</p><p><img src="001-10.png" alt="image"></p><p>우선 자바가 설치되어 있는지 확인을 위해 아래의 명령어를 터미널에 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ java -version</span><br></pre></td></tr></table></figure><p><img src="002-10.png" alt="image"></p><p>명령어를 입력후 위와같이 알수없는 명령어라고 나오면 JAVA관련 패키지가 설치가 되어있지 않은것 입니다.</p><p>그럼 설치를 위해 아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 자동 인스톨 프로그램을 최신화 합니다.</span></span><br><span class="line">$ sudo apt update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 기본적은 가장 최신버전의 jdk를 설치 합니다.</span></span><br><span class="line">$ sudo apt install default-jdk</span><br></pre></td></tr></table></figure><p><img src="003-11.png" alt="image"></p><p>가지고 계신 라즈베리파이의 성능에 따라서 업데이트 시간에 조금 차이가 있을수 있겠습니다.</p><p><img src="004-10.png" alt="image"></p><p>OpenJDK설치가 완료 되었습니다만</p><p>위와 같이 에러가 나오면 라즈베리파이의 cpu코어가 최신의 JDK를 실행을 할수가 없는것 입니다.</p><p>그래도 설치가 제대로 되었는지 확인을 해야하기에 아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 자바 버전확인</span></span><br><span class="line">$ java –version</span><br></pre></td></tr></table></figure><p>터미널에 자바버전이 출력이 되시면 정상적으로 설치가 되신것 입니다.</p><p>그래도 구형 라즈베리파이를 사용하시는 분들이 좌절하지 않으시도록</p><p>어떻게하면 구형 라즈베리파이에서도 JDK를 사용할수 있는지 해보도록 하겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 아래의 명령어를 터미널에 입력해 주세요.</span></span><br><span class="line"><span class="comment"># 일단은 OpenJDK8버전을 설치를 합니다.</span></span><br><span class="line">$ sudo apt-get install openjdk-8-jre</span><br></pre></td></tr></table></figure><p><img src="005-0.png" alt="image"></p><p><img src="006-8.png" alt="image"></p><p>명령어를 입력하시면 OpenJDK8버전을 설치하기 시작 합니다.</p><p><img src="007-8.png" alt="image"></p><p>이번에는 아무런 에러가 없이 무사히 설치가 완료 되었습니다.</p><p>설치가 완료되었으면 기존 기본으로 설치한 OpenJDK의 버전을 변경하도록 하겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 설치가 완료되셨으면 아래의 명령어를 입력해 주세요.</span></span><br><span class="line">$ sudo update-alternatives --config java</span><br></pre></td></tr></table></figure><p><img src="008-8.png" alt="image"></p><p>위와같은 화면이 나오시게 되면 기본으로 사용하실 OpenJDK 버전을 변경하실수 있습니다.</p><p>그럼 새롭게 설치한 OpenJDK8버전인 2를 입력하시기 바랍니다.</p><p><img src="009-6.png" alt="image"></p><p>그러면 설정이 변경이 되었습니다.</p><p>그러면 이제 자바가 정상 설치와 버전변경이 되었는지 확인을 해보도록 하겠습니다.</p><p>아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 자바 버전확인</span></span><br><span class="line">$ java –version</span><br></pre></td></tr></table></figure><p><img src="010-6.png" alt="image"></p><p>OpenJDK버전도 정상적으로 출력되신것을 확인 하실수 있습니다.</p><p>이것으로 라즈베리파이 또는 리눅스에서 OpenJDK 설치하기를 해보았습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Java/">Java</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Java/Linux/">Linux</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/linux/">linux</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A6%AC%EB%88%85%EC%8A%A4/">리눅스</category>
      
      <category domain="https://playneko.github.io/tags/apt-get/">apt-get</category>
      
      <category domain="https://playneko.github.io/tags/apt/">apt</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/Java/">Java</category>
      
      <category domain="https://playneko.github.io/tags/java-version/">java -version</category>
      
      <category domain="https://playneko.github.io/tags/OpenJDK/">OpenJDK</category>
      
      <category domain="https://playneko.github.io/tags/openjdk-8-jre/">openjdk-8-jre</category>
      
      <category domain="https://playneko.github.io/tags/OpenJDK11/">OpenJDK11</category>
      
      <category domain="https://playneko.github.io/tags/OpenJDK8/">OpenJDK8</category>
      
      <category domain="https://playneko.github.io/tags/version/">version</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9E%90%EB%B0%94/">자바</category>
      
      
      <comments>https://playneko.github.io/2020/06/15/rasberry-pi/rasberry-pi-023/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 GPIO 파이썬을 이용 PUSH버튼으로 LED점등</title>
      <link>https://playneko.github.io/2020/06/14/rasberry-pi/rasberry-pi-022/</link>
      <guid>https://playneko.github.io/2020/06/14/rasberry-pi/rasberry-pi-022/</guid>
      <pubDate>Sat, 13 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에서 GPIO 파이썬을 이용해서 PUSH버튼으로 LED점등 #2&lt;br&gt;이번에 소개할 내용은 라즈베리파이에서 GPIO, 파이썬을 이용해서 PUSH버튼으로 LED점등하기 #2 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에서-GPIO-파이썬을-이용해서-PUSH버튼으로-LED점등-2"><a href="#라즈베리파이에서-GPIO-파이썬을-이용해서-PUSH버튼으로-LED점등-2" class="headerlink" title="라즈베리파이에서 GPIO 파이썬을 이용해서 PUSH버튼으로 LED점등 #2"></a>라즈베리파이에서 GPIO 파이썬을 이용해서 PUSH버튼으로 LED점등 #2</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 라즈베리파이에서 GPIO, 파이썬을 이용해서 PUSH버튼으로 LED점등하기 #2 입니다.</p><p>우리가 일상적으로 집에 들어왔을경우 버튼을 누르고 거실의 등을 키는것과 같은 역활로</p><p>버튼을 누르게 되면 LED 2개가 순차적으로 점등이 되는것을 만들어 보도록 하겠습니다.</p><blockquote><h5 id="준비물"><a href="#준비물" class="headerlink" title="준비물"></a>준비물</h5><ul><li>라즈베리파이 OS, 파이썬 설치가 완료된 상태</li><li>점퍼케이블 암/수 5줄, 수컷 3줄</li><li>플레이트 보드</li><li>저항 330Ω 2개, 10KΩ 1개</li><li>LED전구 2개</li><li>푸쉬버튼</li></ul></blockquote><p><img src="001-3.jpg" alt="image"></p><p>색깔별 점퍼케이블의 연결순서는 아래의 표를 참고해 주세요.</p><table><thead><tr><th align="center">Color</th><th align="center">Pi GPIO Pin</th><th align="center">Notes</th></tr></thead><tbody><tr><td align="center">Red</td><td align="center">1</td><td align="center">3.3V</td></tr><tr><td align="center">White</td><td align="center">40</td><td align="center">21(SP1_SCLK)</td></tr><tr><td align="center">Brown</td><td align="center">10</td><td align="center">15(UART_RXD)</td></tr><tr><td align="center">Yellow</td><td align="center">8</td><td align="center">14(UART_TXD)</td></tr><tr><td align="center">Gray</td><td align="center">39</td><td align="center">GND</td></tr></tbody></table><p>GPIO핀에 대한 자세한 내용을 원하시는 분은 아래의 링크를 들어가셔서 참고해 주세요.</p><p><a href="https://playneko.github.io/2020/05/28/rasberry-pi-011/">라즈베리파이에서 GPIO를 사용하기전 알아두어야 할 사항</a></p><p>위와같이 라즈베리파이와 플레이트 보드의 구성을 모두 마치셨으면</p><p>이제 본격적인 코딩을 해야만 합니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)를 실행해 주시기 바랍니다.</p><p><img src="002-9.png" alt="image"></p><p>실행을 하셨으면 파일명을 gpio_multi_push_led.py로 추가를 해주시기 바랍니다.</p><p><img src="003-10.png" alt="image"></p><p>간단한 예제로 버튼을 누르면 첫번째 LED가 5초간 켜지고 꺼진뒤 2번째 LED가 켜지고 꺼지는 소스를 작성 하겠습니다.</p><p>아래의 코드를 입력해 주세요.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"></span><br><span class="line">GPIO.setmode(GPIO.BCM)</span><br><span class="line"></span><br><span class="line"><span class="comment"># PUSH Button</span></span><br><span class="line"><span class="comment"># 40Pin 21(SP1_SCLK)</span></span><br><span class="line">GPIO.setup(<span class="number">21</span>, GPIO.IN)</span><br><span class="line"></span><br><span class="line"><span class="comment"># LED</span></span><br><span class="line"><span class="comment"># 8 14(UART_TXD)</span></span><br><span class="line">GPIO.setup(<span class="number">14</span>, GPIO.OUT)</span><br><span class="line"><span class="comment"># 10 15(UART_RXD)</span></span><br><span class="line">GPIO.setup(<span class="number">15</span>, GPIO.OUT)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 40Pin의 버튼에 대한 입력값</span></span><br><span class="line">        inputIO = GPIO.<span class="built_in">input</span>(<span class="number">21</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 버튼이 눌렸는지 체크</span></span><br><span class="line">        <span class="keyword">if</span> inputIO == <span class="literal">False</span>:</span><br><span class="line">            <span class="comment"># LED를 켜기</span></span><br><span class="line">            GPIO.output(<span class="number">14</span>, GPIO.HIGH)</span><br><span class="line">            time.sleep(<span class="number">5</span>)</span><br><span class="line">            GPIO.output(<span class="number">14</span>, GPIO.LOW)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            GPIO.output(<span class="number">15</span>, GPIO.HIGH)</span><br><span class="line">            time.sleep(<span class="number">5</span>)</span><br><span class="line">            GPIO.output(<span class="number">15</span>, GPIO.LOW)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># LED를 끄기</span></span><br><span class="line">            GPIO.output(<span class="number">14</span>, GPIO.LOW)</span><br><span class="line">            GPIO.output(<span class="number">15</span>, GPIO.LOW)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ctrl + C키를 누르면 종료 됩니다.</span></span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    <span class="comment"># 종료시 LED를 무조건 끄기</span></span><br><span class="line">    GPIO.output(<span class="number">14</span>, GPIO.LOW)</span><br><span class="line">    GPIO.output(<span class="number">15</span>, GPIO.LOW)</span><br><span class="line"></span><br><span class="line"><span class="comment"># GPIO 클린업</span></span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    GPIO.cleanup()</span><br></pre></td></tr></table></figure><p>작성하신 소스를 라즈베리파이에 넣고 실행을 하기위해</p><p>소스파일을 라즈베리파이의 임의의 폴더에 올려주시기 바랍니다.</p><p>그리고 라즈베리파이를 VNC를 이용해 접속후 터미널을 실행해 주세요.</p><p><img src="004-9.png" alt="image"></p><p>라즈베리파이의 리스트 목록을 보시면 gpio_multi_push_led.py 파일명으로 파일이 올라가 있는걸 확인할수 있습니다.</p><p>이제 명령어로 버튼을 눌렀을경우 순차적으로 LED가 켜지고 꺼지는지 확인 해보도록 하겠습니다.</p><p>아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬 2.x버전대를 이용하실경우</span></span><br><span class="line">$ sudo python ./gpio_multi_push_led.py</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬 3.x버전대를 이용하실경우</span></span><br><span class="line">$ sudo python3 ./gpio_multi_push_led.py</span><br></pre></td></tr></table></figure><p>저의 경우는 3.x버전대를 이용하기에 3.x버전대의 명령어로 실행을 하겠습니다.</p><p><img src="005-1-1.png" alt="image"></p><p>위와같이 실행이 된 상태에서 버튼을 눌러보시면 첫번째 LED가 켜지고 5초뒤에 두번째 LED가 켜지는것을 확인하실수 있습니다.</p><p>만일 LED가 켜키지 않을경우 배선이 맞게 되어있는지 LED를 (+,-)가 맞게 꼽혀있는지 확인해 주세요.</p><p>프로그램을 종료를 하실경우에는 Ctrl + C키를 눌러주시면 프로그램이 종료 됩니다.</p><p>이렇게해서 푸쉬버튼을 이용한 멀티 LED 켜고 끄기가 끝났습니다.</p><p>다음에도 더 다양한 방식을 소개하도록 하겠습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Python/">Python</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/LED/">LED</category>
      
      <category domain="https://playneko.github.io/tags/GPIO/">GPIO</category>
      
      <category domain="https://playneko.github.io/tags/Python/">Python</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/Button/">Button</category>
      
      <category domain="https://playneko.github.io/tags/Push/">Push</category>
      
      <category domain="https://playneko.github.io/tags/Push-Button/">Push Button</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B2%84%ED%8A%BC/">버튼</category>
      
      <category domain="https://playneko.github.io/tags/%ED%91%B8%EC%89%AC%EB%B2%84%ED%8A%BC/">푸쉬버튼</category>
      
      
      <comments>https://playneko.github.io/2020/06/14/rasberry-pi/rasberry-pi-022/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 GPIO 파이썬을 이용 PUSH버튼으로 LED점등</title>
      <link>https://playneko.github.io/2020/06/13/rasberry-pi/rasberry-pi-021/</link>
      <guid>https://playneko.github.io/2020/06/13/rasberry-pi/rasberry-pi-021/</guid>
      <pubDate>Fri, 12 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에서 GPIO 파이썬을 이용해서 PUSH버튼으로 LED점등 #1&lt;br&gt;이번에 소개할 내용은 라즈베리파이에서 GPIO, 파이썬을 이용해서 PUSH버튼으로 LED점등하기 #1 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에서-GPIO-파이썬을-이용해서-PUSH버튼으로-LED점등-1"><a href="#라즈베리파이에서-GPIO-파이썬을-이용해서-PUSH버튼으로-LED점등-1" class="headerlink" title="라즈베리파이에서 GPIO 파이썬을 이용해서 PUSH버튼으로 LED점등 #1"></a>라즈베리파이에서 GPIO 파이썬을 이용해서 PUSH버튼으로 LED점등 #1</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 라즈베리파이에서 GPIO, 파이썬을 이용해서 PUSH버튼으로 LED점등하기 #1 입니다.</p><p>우리가 일상적으로 집에 들어왔을경우 버튼을 누르고 거실의 등을 키는것과 같은 역활로</p><p>버튼을 누르게 되면 LED가 점등이 되는것을 만들어 보도록 하겠습니다.</p><blockquote><h5 id="준비물"><a href="#준비물" class="headerlink" title="준비물"></a>준비물</h5><ul><li>라즈베리파이 OS, 파이썬 설치가 완료된 상태</li><li>점퍼케이블 암/수 4줄, 수컷 2줄</li><li>플레이트 보드</li><li>저항 330Ω, 10KΩ 각 1개씩</li><li>LED전구</li><li>푸쉬버튼</li></ul></blockquote><p><img src="002.jpg" alt="image"></p><p>저항과 점퍼케이블 연결 회로도와 같이 연결을 해주시면 되겠습니다.</p><p><img src="001-e1591430993708.jpg" alt="image"></p><p>색깔별 점퍼케이블의 연결순서는 아래의 표를 참고해 주세요.</p><table><thead><tr><th align="center">Color</th><th align="center">Pi GPIO Pin</th><th align="center">Notes</th></tr></thead><tbody><tr><td align="center">Red</td><td align="center">1</td><td align="center">3.3V</td></tr><tr><td align="center">Yellow</td><td align="center">31</td><td align="center">6(GPCLK2)</td></tr><tr><td align="center">Black</td><td align="center">39</td><td align="center">GND</td></tr><tr><td align="center">Blue</td><td align="center">40</td><td align="center">21(SP1_SCLK)</td></tr></tbody></table><p>GPIO핀에 대한 자세한 내용을 원하시는 분은 아래의 링크를 들어가셔서 참고해 주세요.</p><p>라즈베리파이에서 GPIO를 사용하기전 알아두어야 할 사항</p><p>위와같이 라즈베리파이와 플레이트 보드의 구성을 모두 마치셨으면</p><p>이제 본격적인 코딩을 해야만 합니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)를 실행해 주시기 바랍니다.</p><p><img src="003-7.png" alt="image"></p><p>실행을 하셨으면 파일명을 gpio_push_led.py로 추가를 해주시기 바랍니다.</p><p><img src="004-6.png" alt="image"></p><p>간단한 예제로 버튼을 누르면 LED가 켜지고 버튼을 떼면 LED가 꺼지는 소스를 작성 하겠습니다.</p><p>아래의 코드를 입력해 주세요.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"></span><br><span class="line">GPIO.setmode(GPIO.BCM)</span><br><span class="line"><span class="comment"># 31Pin GPCLK2</span></span><br><span class="line">GPIO.setup(<span class="number">6</span>, GPIO.OUT)</span><br><span class="line"><span class="comment"># 40Pin SP1_SCLK</span></span><br><span class="line">GPIO.setup(<span class="number">21</span>, GPIO.IN)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 40Pin의 버튼에 대한 입력값</span></span><br><span class="line">        inputIO = GPIO.<span class="built_in">input</span>(<span class="number">21</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 버튼이 눌렸는지 체크</span></span><br><span class="line">        <span class="keyword">if</span> inputIO == <span class="literal">False</span>:</span><br><span class="line">            <span class="comment"># LED를 켜기</span></span><br><span class="line">            GPIO.output(<span class="number">6</span>, GPIO.HIGH)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># LED를 끄기</span></span><br><span class="line">            GPIO.output(<span class="number">6</span>, GPIO.LOW)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ctrl + C키를 누르면 종료 됩니다.</span></span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    <span class="comment"># 종료시 LED를 무조건 끄기</span></span><br><span class="line">    GPIO.output(<span class="number">6</span>, GPIO.LOW)</span><br><span class="line"></span><br><span class="line"><span class="comment"># GPIO 클린업</span></span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    GPIO.cleanup()</span><br></pre></td></tr></table></figure><p>작성하신 소스를 라즈베리파이에 넣고 실행을 하기위해</p><p>소스파일을 라즈베리파이의 임의의 폴더에 올려주시기 바랍니다.</p><p>그리고 라즈베리파이를 VNC를 이용해 접속후 터미널을 실행해 주세요.</p><p><img src="005-5.png" alt="image"></p><p>라즈베리파이의 리스트 목록을 보시면 gpio_push_led.py 파일명으로 파일이 올라가 있는걸 확인할수 있습니다.</p><p>이제 명령어로 버튼을 눌렀을경우 LED가 켜지고 꺼지는지 확인 해보도록 하겠습니다.</p><p>아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬 2.x버전대를 이용하실경우</span></span><br><span class="line">$ sudo python ./gpio_push_led.py</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬 3.x버전대를 이용하실경우</span></span><br><span class="line">$ sudo python3 ./gpio_push_led.py</span><br></pre></td></tr></table></figure><p>저의 경우는 3.x버전대를 이용하기에 3.x버전대의 명령어로 실행을 하겠습니다.</p><p><img src="006-5.png" alt="image"></p><p>위와같이 실행이 된 상태에서 버튼을 눌러보시면 LED가 켜지는것을 확인하실수 있습니다.</p><p>만일 LED가 켜키지 않을경우 배선이 맞게 되어있는지 LED를 (+,-)가 맞게 꼽혀있는지 확인해 주세요.</p><p>프로그램을 종료를 하실경우에는 Ctrl + C키를 눌러주시면 프로그램이 종료 됩니다.</p><p>이렇게해서 푸쉬버튼을 이용한 LED 켜고 끄기가 끝났습니다.</p><p>이것을 이용을 하시면 좀더 다양한 방식으로 버튼을 이용한 여러가지 개발을 하실수가 있겠습니다.</p><p><a href="https://youtu.be/vH6dUXWdupM"><img src="http://img.youtube.com/vi/vH6dUXWdupM/0.jpg" alt="AkibaTV"></a></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Python/">Python</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/LED/">LED</category>
      
      <category domain="https://playneko.github.io/tags/GPIO/">GPIO</category>
      
      <category domain="https://playneko.github.io/tags/Python/">Python</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/Button/">Button</category>
      
      <category domain="https://playneko.github.io/tags/Push/">Push</category>
      
      <category domain="https://playneko.github.io/tags/Push-Button/">Push Button</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B2%84%ED%8A%BC/">버튼</category>
      
      <category domain="https://playneko.github.io/tags/%ED%91%B8%EC%89%AC%EB%B2%84%ED%8A%BC/">푸쉬버튼</category>
      
      
      <comments>https://playneko.github.io/2020/06/13/rasberry-pi/rasberry-pi-021/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Model SBS-206 열차와 SL의 교환음 키트 만들기</title>
      <link>https://playneko.github.io/2020/06/12/akihabara/akihabara-002/</link>
      <guid>https://playneko.github.io/2020/06/12/akihabara/akihabara-002/</guid>
      <pubDate>Thu, 11 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Model SBS-206 열차와 SL의 교환음 키트 만들기&lt;br&gt;이번에 소개할 내용은 Model SBS-206 열차와 SL의 교환음 키트 만들기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="Model-SBS-206-열차와-SL의-교환음-키트-만들기"><a href="#Model-SBS-206-열차와-SL의-교환음-키트-만들기" class="headerlink" title="Model SBS-206 열차와 SL의 교환음 키트 만들기"></a>Model SBS-206 열차와 SL의 교환음 키트 만들기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 Model SBS-206 열차와 SL의 교환음 키트 만들기 입니다.</p><p>아키하바라에서 세금포함 1749엔에 전자 공작 키트를 구매를 해보았습니다.</p><p>구성품은 아래와 같습니다.</p><p><img src="001-2.jpg" alt="image"></p><p>이런 비닐안에 필요한 부품이 모두 들어 있습니다.</p><p>조립만 하면 바로 쓸수있게 회로도 설계도 들어가 있기에 누구나 쉽고 빠르게</p><p>전자 공작을 하실수 있습니다.</p><p>좀 아쉬운것은 생각보다 비싸다는점이에요…</p><p><img src="002-1.jpg" alt="image"></p><p>뒷면에는 부품갯수와 간략한 회로도를 볼수 있습니다.</p><p><img src="003.jpg" alt="image"></p><p>전체적인 부품과 설계도는 위와 같습니다.</p><p>부품이 생각보다 많아보이지만 대부분이 점퍼케이블이기에</p><p>하나하나 연결을 하다보면 어느센가 끝나있습니다.</p><p>플레이트 보드에도 번호와 알파벳이 적혀져 있으므로 설계도와 맞춰서 연결을 할수가 있습니다.</p><p>라즈베리파이 처럼 코딩을 하실 필요없이 연결만 하면 끝납니다.</p><p><img src="004-1536x709.jpg" alt="image"></p><p>전체적으로 조립이 완료된 상태입니다.</p><p>버튼을 누르면 버튼에 따라서 스피커로 기차음을 들을수가 있습니다만</p><p>무슨문제인지 LED는 불이 잘 들어오지만 스피커에서 소리가 안나옵니다.</p><p>불량인것인지… ㅠㅠ</p><p>여러분도 이런 키트를 구매를 하실때는 교환등 따져보고 구매를 하세요.</p><p><a href="https://youtu.be/dtN_72W24mk"><img src="http://img.youtube.com/vi/dtN_72W24mk/0.jpg" alt="AkibaTV"></a></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%95%84%ED%82%A4%EB%B0%94-%EC%A0%95%EB%B3%B4/">아키바 정보</category>
      
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/%EC%95%84%ED%82%A4%ED%95%98%EB%B0%94%EB%9D%BC/">아키하바라</category>
      
      <category domain="https://playneko.github.io/tags/model/">model</category>
      
      <category domain="https://playneko.github.io/tags/sbs/">sbs</category>
      
      <category domain="https://playneko.github.io/tags/sbs-206/">sbs-206</category>
      
      <category domain="https://playneko.github.io/tags/SL/">SL</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B3%B5%EC%9E%91/">공작</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B5%90%ED%99%98%EC%9D%8C/">교환음</category>
      
      <category domain="https://playneko.github.io/tags/%EB%AA%A8%EB%8D%B8/">모델</category>
      
      <category domain="https://playneko.github.io/tags/%EC%84%A0%ED%95%98%EC%95%BC%ED%86%A0/">선하야토</category>
      
      <category domain="https://playneko.github.io/tags/%EC%97%B4%EC%B0%A8/">열차</category>
      
      <category domain="https://playneko.github.io/tags/%EC%A0%84%EC%9E%90/">전자</category>
      
      <category domain="https://playneko.github.io/tags/%ED%82%A4%ED%8A%B8/">키트</category>
      
      <category domain="https://playneko.github.io/tags/%EC%A0%84%EC%9E%90-%EA%B3%B5%EC%9E%91-%ED%82%A4%ED%8A%B8/">전자 공작 키트</category>
      
      
      <comments>https://playneko.github.io/2020/06/12/akihabara/akihabara-002/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에 GPIO Python PWM Servo Motor 제어하기</title>
      <link>https://playneko.github.io/2020/06/11/rasberry-pi/rasberry-pi-020/</link>
      <guid>https://playneko.github.io/2020/06/11/rasberry-pi/rasberry-pi-020/</guid>
      <pubDate>Wed, 10 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에 GPIO Python PWM 컨트롤러로 Servo Motor 제어하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이에서 GPIO Python PWM컨트롤러(PCA9685)로 Servo Motor 제어하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에-GPIO-Python-PWM-컨트롤러로-Servo-Motor-제어하기"><a href="#라즈베리파이에-GPIO-Python-PWM-컨트롤러로-Servo-Motor-제어하기" class="headerlink" title="라즈베리파이에 GPIO Python PWM 컨트롤러로 Servo Motor 제어하기"></a>라즈베리파이에 GPIO Python PWM 컨트롤러로 Servo Motor 제어하기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 라즈베리파이에서 GPIO Python PWM컨트롤러(PCA9685)로 Servo Motor 제어하기 입니다.</p><p>저번에 소개드린 라즈베리파이에 GPIO와 Python으로 Servo Motor 제어하기에 이어서</p><p>이번에는 PWM컨트롤러(PCA9685)를 이용해서 좀더 많은 모터와 보조전력을 공급하며</p><p>복잡한 구성의 모터를 제어할수 있게 해주는 컨트롤러 입니다.</p><p>PWM컨트롤러(PCA9685)는 2개에 999엔정도에 구매가 가능 합니다.</p><p>일단 PWM컨트롤러(PCA9685)를 이용해서 서보모터 제어를 하기 위해선 준비물이 기존보다 조금더 많이 필요 하겠습니다.</p><blockquote><h5 id="준비물"><a href="#준비물" class="headerlink" title="준비물"></a>준비물</h5><ul><li>라즈베리파이 본체 OS설치와 Python설치가 끝난 상태</li><li>Servo Motor(서보모터)</li><li>PWM컨트롤러(PCA9685)</li><li>점퍼케이블 암컷으로 5줄</li></ul></blockquote><p>이렇게 준비물이 갖춰져 있는지 확인 하시고 PWM컨트롤러(PCA9685)로 Servo Motor(서보모터) 제어하기를 하겠습니다.</p><p><img src="001-1.jpg" alt="image"></p><p>점퍼케이블 5줄에 대해서 PWM컨트롤러(PCA9685)와 다음과 같이 연결을 해주시기 바랍니다.</p><table><thead><tr><th align="center">Color</th><th align="center">Pi GPIO Pin</th><th align="center">Notes</th><th align="center">PCA9685</th></tr></thead><tbody><tr><td align="center">Red</td><td align="center">2</td><td align="center">5V</td><td align="center">V+</td></tr><tr><td align="center">Brown</td><td align="center">1</td><td align="center">3.3V</td><td align="center">VCC</td></tr><tr><td align="center">Orange</td><td align="center">3</td><td align="center">2(I2C1_SDA1)</td><td align="center">SDA</td></tr><tr><td align="center">Yellow</td><td align="center">5</td><td align="center">3(I2C1_SCL1)</td><td align="center">SCL</td></tr><tr><td align="center">Green</td><td align="center">6</td><td align="center">GND</td><td align="center">GND</td></tr></tbody></table><p>라즈베리파이와 점퍼케이블 서보모터를 전부 연결을 하셨으면</p><p>우선 코딩을 해보도록 하겠습니다.</p><p>이번에도 오픈소스를 이용해 PWM컨트롤러 제어 소스를 참고해 만들어 보았습니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)를 실행해 주시기 바랍니다.</p><p>코딩에 들어가기에 앞서 VNC로 라즈베리파이에 접속후 터미널을 실행해 주세요.</p><p>아래의 명령어로 I2C연결된 위치를 확인 합니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo i2cdetect -y 1</span><br></pre></td></tr></table></figure><p><img src="007-7.png" alt="image"></p><p>위에 보듯이 PWM컨트롤러(PCA9685)의 I2C는 0x40과 0x70이라는 채널에 연결되어 있음을 알수 있습니다.</p><p>코드를 작성할때는 0x40 채널을 이용해서 작성을 하도록 하겠습니다.</p><p>그리고 파일명은 gpio_pwm_servo_motor.py 로 추가해 주시기 바랍니다.</p><p>아래의 코드를 작성해 주시기 바랍니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"><span class="keyword">import</span> Adafruit_PCA9685</span><br><span class="line"></span><br><span class="line"><span class="comment"># SG92R를 컨트롤하기 위한 클래스</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SG90_92R_Class</span>:</span></span><br><span class="line">    <span class="comment"># mPin : GPIO Number (PWM)</span></span><br><span class="line">    <span class="comment"># mPwm : PWM컨트롤러용 인스턴스</span></span><br><span class="line">    <span class="comment"># m_Zero_offset_duty</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, Channel, ZeroOffset</span>):</span></span><br><span class="line">        self.mChannel = Channel</span><br><span class="line">        self.m_ZeroOffset = ZeroOffset</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Adafruit_PCA9685 초기화</span></span><br><span class="line">        <span class="comment"># address : PCA9685의 I2C Channel 0x40</span></span><br><span class="line">        self.mPwm = Adafruit_PCA9685.PCA9685(address = <span class="number">0x40</span>)</span><br><span class="line">        <span class="comment"># 50Hz로 설정하셔야 하지만 60Hz로 하시는게 좀더 좋습니다.</span></span><br><span class="line">        self.mPwm.set_pwm_freq(<span class="number">60</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 서보모터 위치 설정</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">SetPos</span>(<span class="params">self, pos</span>):</span></span><br><span class="line">        pulse = (<span class="number">650</span> - <span class="number">150</span>) * pos / <span class="number">180</span> + <span class="number">150</span> + self.m_ZeroOffset</span><br><span class="line">        self.mPwm.set_pwm(self.mChannel, <span class="number">0</span>, <span class="built_in">int</span>(pulse))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 종료처리</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Cleanup</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 서보모터를 90도로 재설정</span></span><br><span class="line">        self.SetPos(<span class="number">90</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 여기가 시작하는 메인 입니다.</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    Servo = SG90_92R_Class(Channel = <span class="number">0</span>, ZeroOffset = -<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            Servo.SetPos(<span class="number">0</span>)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            Servo.SetPos(<span class="number">90</span>)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            Servo.SetPos(<span class="number">180</span>)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            Servo.SetPos(<span class="number">90</span>)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Ctrl + C키를 누르면 종료 됩니다.</span></span><br><span class="line">    <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">        print(<span class="string">&quot;Ctrl + C&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="built_in">str</span>(e))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        Servo.Cleanup()</span><br><span class="line">        print(<span class="string">&quot;exit program&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="006-7.png" alt="image"></p><p>코드 작성이 끝나셨으면 VNC로 라즈베리파이에 접속후 터미널을 실행해 주세요.</p><p><img src="001-9.png" alt="image"></p><p>PWM컨트롤러를 제어할 오픈소스를 깃허브에서 다운로드 받은후 설치를 하도록 하겠습니다.</p><p>오픈소스를 다운받기 위해 적당한 위치로 이동을 하신후 아래의 명령어를 차례대로 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/adafruit/Adafruit_Python_PCA9685.git</span><br><span class="line">$ <span class="built_in">cd</span> Adafruit_Python_PCA9685</span><br><span class="line"></span><br><span class="line"><span class="comment"># 파이썬을 2.x버전대이신 분은 아래의 명령어를 입력해 주세요.</span></span><br><span class="line">$ sudo python setup.py install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 파이썬을 3.x버전대이신 분은 아래의 명령어를 입력해 주세요.</span></span><br><span class="line">$ sudo python3 setup.py install</span><br></pre></td></tr></table></figure><p><img src="002-8.png" alt="image"></p><p>깃허브에서 소스를 다운로드가 시작되며 정상적으로 다운로드가 완료 되었습니다.</p><p><img src="003-9.png" alt="image"></p><p>다운로드한 소스폴더로 이동을 합니다.</p><p><img src="004-8.png" alt="image"></p><p>소스파일이 설치가 완료 되면 작성하신 소스코드를 실행을 위해 작성하신 소스코드 폴더로 이동해 주세요.</p><p>아래의 명령으로 gpio_pwm_servo_motor.py를 실행하도록 하겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이썬을 2.x버전대이신 분은 아래의 명령어를 입력해 주세요.</span></span><br><span class="line">$ sudo python gpio_pwm_servo_motor.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 파이썬을 3.x버전대이신 분은 아래의 명령어를 입력해 주세요.</span></span><br><span class="line">$ sudo python3 gpio_pwm_servo_motor.py</span><br></pre></td></tr></table></figure><p><img src="008-7.png" alt="image"></p><p>실행을 하시면 서보모터가 움직이는것을 확인 하실수 있습니다.</p><p>프로그램을 종료를 하실려면 Ctrl + C키를 누르면 종료 됩니다.</p><p><a href="https://youtu.be/vklkj--9pDM"><img src="http://img.youtube.com/vi/vklkj--9pDM/0.jpg" alt="AkibaTV"></a></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Python/">Python</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/Servo-Motor/">Servo Motor</category>
      
      <category domain="https://playneko.github.io/tags/GPIO/">GPIO</category>
      
      <category domain="https://playneko.github.io/tags/Python/">Python</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/%EC%84%9C%EB%B3%B4%EB%AA%A8%ED%84%B0/">서보모터</category>
      
      <category domain="https://playneko.github.io/tags/I2C/">I2C</category>
      
      <category domain="https://playneko.github.io/tags/PCA9685/">PCA9685</category>
      
      <category domain="https://playneko.github.io/tags/PWM/">PWM</category>
      
      <category domain="https://playneko.github.io/tags/PWM%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC/">PWM컨트롤러</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC/">컨트롤러</category>
      
      
      <comments>https://playneko.github.io/2020/06/11/rasberry-pi/rasberry-pi-020/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA에서 JDBC를 이용해 MariaDB 사용해 보기</title>
      <link>https://playneko.github.io/2020/06/10/java/java-008/</link>
      <guid>https://playneko.github.io/2020/06/10/java/java-008/</guid>
      <pubDate>Tue, 09 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;JAVA프로그램에서 JDBC를 이용해 MariaDB 사용해 보기&lt;br&gt;이번에 소개할 내용은 JAVA에서 JDBC를 이용해 MariaDB 사용해 보기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="JAVA프로그램에서-JDBC를-이용해-MariaDB-사용해-보기"><a href="#JAVA프로그램에서-JDBC를-이용해-MariaDB-사용해-보기" class="headerlink" title="JAVA프로그램에서 JDBC를 이용해 MariaDB 사용해 보기"></a>JAVA프로그램에서 JDBC를 이용해 MariaDB 사용해 보기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 JAVA에서 JDBC를 이용해 MariaDB 사용해 보기 입니다.</p><p>JDBC란 JAVA와 디비를 연결해 사용해줄수 있게 해주는 다리 역할로</p><p>Oracle, MySql, PostgreSql, MS-SQL, MariaDB….등등 수많은 DB가 있습니다.</p><p>이런 수많은 디비들을 다 개발자가 관리하며 접속하는것이 힘들기 때문에</p><p>JDBC가 중간 역할로 하나의 공통 메소드를 사용하여 어떤 DB를 사용해도</p><p>똑같은 메소드로 공통 처리가 가능하게 해주는 역할을 합니다.</p><p>그러면 이제 MariaDB를 어떻게하면 JAVA에서 사용가능한지 해보도록 하겠습니다.</p><p>우선 MariaDB를 사용하기 위해선 드라이버를 다운로드 받으셔야만 합니다.</p><p>아래의 링크에서 드라이버를 다운받아 주세요.</p><p><a href="https://downloads.mariadb.org/connector-java/">https://downloads.mariadb.org/connector-java/</a></p><p>다운로드 방법은 아래의 캡쳐를 보고 따라하시면 됩니다.</p><p><img src="001-8.png" alt="image"></p><p>다운로드 버튼을 누르시면 아래의 페이지로 이동을 하게 되며</p><p>jar 파일을 두종류로 나눠져서 다운로드가 가능 합니다.</p><p>소스를 포함한 jar을 다운로드 할것인지 이경우는 소스를 전부 포함하고 있기에 용량이 큽니다.</p><p>다음은 소스를 포함하지 않은 DB를 사용하기 위한 jar파일 입니다.</p><p>어느것을 다운로드 받아도 사용하는데는 지장은 없기때문에 저는 소스가 포함되지 않은 jar을 다운받겠습니다.</p><p>파일명을 클릭하시기 바랍니다.</p><p><img src="002-7.png" alt="image"></p><p>아래의 페이지로 이동을 하시면 mariadb-java-client-2.6.0.jar 을 클릭하시어 다운로드 받습니다.</p><p><img src="003-8.png" alt="image"></p><p>다운로드가 되셨으면 이클립스를 실행하시기 바랍니다.</p><p><img src="004-7.png" alt="image"></p><p>이클립스를 실행하시고 기존에 만들어둔 프로젝트에서 jar 파일을 넣어둘 폴더를 추가하도록 하겠습니다.</p><p><img src="005-6.png" alt="image"></p><p><img src="006-6.png" alt="image"></p><p>폴더명은 lib로 입력후 finish버튼을 눌러주세요.</p><p><img src="007-6.png" alt="image"></p><p>lib폴더가 추가 된것을 확인할수 있습니다.</p><p>다운로드 받으신 mariadb-java-client-2.6.0.jar 파일을 Ctrl + X키로 잘라내신후</p><p>이클립스의 lib폴더에 붙여넣어주시기 바랍니다.</p><p><img src="008-6.png" alt="image"></p><p><img src="009-5.png" alt="image"></p><p>lib폴더에 mariadb-java-client-2.6.0.jar 파일이 추가된것을 확인할수 있습니다.</p><p><img src="010-5.png" alt="image"></p><p>이젠 추가한 jar파일을 빌드패스에 등록해 줍니다.</p><p><img src="011-5.png" alt="image"></p><p>mariadb-java-client-2.6.0.jar를 빌드패스로 추가했습니다.</p><p>이렇게해서 JAVA에서 MariaDB를 사용할수 있게 되었습니다.</p><p>그러면 JDBC를 이용해서 MariaDB에 접속후 Select, Insert, Update, Delete를 해보도록 하겠습니다만</p><p>우선 MariaDB에 테이블을 생성을 하도록 하겠습니다.</p><p>아직 환경이나 DB가 설치가 안되어 있으신 분은 라즈베리파이 또는 리눅스에서 NPM (Nginx + PHP + MariaDB) 설치하기를 참고해주시기 바랍니다.</p><p><img src="012-5.png" alt="image"></p><p>우선 DB에 간단한 테이블을 만들어 보도록 하겠습니다.</p><p>phpMyAdmin에 로그인을 해주시기 바랍니다.</p><p><img src="013-6.png" alt="image"></p><p>로그인을 하셨으면 New링크를 누르시고 데이터베이스를 추가를 하도록 하겠습니다.</p><p><img src="014-3.png" alt="image"></p><p>데이터베이스명과 utf8mb4_unicode_ci를 선택하시고 만들기 버튼을 눌러주세요.</p><p><img src="015-3.png" alt="image"></p><p>데이터베이스가 추가된것을 보실수 있습니다.</p><p>이젠 간단한 테이블을 만들어 보도록 하겠습니다.</p><p><img src="016-4.png" alt="image"></p><p>테이블명은 test, 컬럼은 이름,나이,생년월일을 만들것이기에 3개로 지정후 실행을 눌러주세요.</p><p><img src="017-4.png" alt="image"></p><p>컬럼을 위와같이 설정후 저장을 눌러주세요.</p><p><img src="018-4.png" alt="image"></p><p>테이블이 추가가 되었습니다.</p><p>그럼 다시 이클립스로 돌아오셔서 본격적으로 코딩을 시작하도록 하겠습니다.</p><p>아래와같이 5개의 클래스파일을 만들도록 하겠습니다.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TestConnection.java</span><br><span class="line">TestInsert.java</span><br><span class="line">TestSelect.java</span><br><span class="line">TestUpdate.java</span><br><span class="line">TestDelete.java</span><br></pre></td></tr></table></figure><p><img src="019-4.png" alt="image"></p><p>5개의 클래스파일 전부 위와같이 세팅후 추가를 해주시기 바랍니다.</p><p><img src="020-4.png" alt="image"></p><p>클래스파일을 전부 추가한 상태 입니다.</p><p>이제 TestConnection.java부터 코딩을 하며 추가한 데이터베이스에 연결이 되는지 확인하도록 하겠습니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestConnection</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// mariaDB 드라이버 설정</span></span><br><span class="line">Class.forName(<span class="string">&quot;org.mariadb.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 접속할 DB주소 설정</span></span><br><span class="line">String url = <span class="string">&quot;jdbc:mysql://10.0.1.30/akibatv&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 접속할 아이디, 비밀번호 설정</span></span><br><span class="line">conn = DriverManager.getConnection(url, <span class="string">&quot;akibatv&quot;</span>, <span class="string">&quot;akibatv&quot;</span>);</span><br><span class="line">      System.out.println(<span class="string">&quot;DB 연결 성공&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e)&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;mariaDB Driver를 찾을수 없습니다.&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Database 연결중 에러가 발생 했습니다.&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="021-1-1.png" alt="image"></p><p>코딩을 하셨으면 DB에 연결이 되는지 확인을 해보도록 하겠습니다. 상단의 ▶를 눌러주셔서 실행을 합니다.</p><p><img src="022-2.png" alt="image"></p><p>실행을 하시면 위와같이 DB 연결 성공이라고 나오게 됩니다.</p><p>그럼 테이블에 간단한 데이터를 Insert 해보도록 하겠습니다.</p><p>TestInsert.java를 열어주시기 바랍니다.</p><p>그리고 아래와 같이 코딩을 하시고 상단의 ▶를 눌러주셔서 실행을 합니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestInsert</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// mariaDB 드라이버 설정</span></span><br><span class="line">Class.forName(<span class="string">&quot;org.mariadb.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 접속할 DB주소 설정</span></span><br><span class="line">String url = <span class="string">&quot;jdbc:mysql://10.0.1.30/akibatv&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 접속할 아이디, 비밀번호 설정</span></span><br><span class="line">conn = DriverManager.getConnection(url, <span class="string">&quot;akibatv&quot;</span>, <span class="string">&quot;akibatv&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;DB 연결 성공&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Insert문 ?부분은 아래의 입력값이 자동으로 변환이 됩니다.</span></span><br><span class="line">String sql = <span class="string">&quot; INSERT INTO test VALUES (?,?,?) &quot;</span>;</span><br><span class="line">pstmt = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> index = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// Insert 데이터값</span></span><br><span class="line"><span class="comment">// 이름은 String형태 TEST</span></span><br><span class="line">pstmt.setString(index++, <span class="string">&quot;TEST&quot;</span>);</span><br><span class="line"><span class="comment">// 나이는 Int형태 99살</span></span><br><span class="line">pstmt.setInt(index++, <span class="number">99</span>);</span><br><span class="line"><span class="comment">// 나이는 String형태 20200607</span></span><br><span class="line">pstmt.setString(index++, <span class="string">&quot;20200607&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// SQL실행</span></span><br><span class="line"><span class="keyword">int</span> count = pstmt.executeUpdate();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;데이터값에 이상이 있습니다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;데이터 Insert 성공!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;mariaDB Driver를 찾을수 없습니다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Database 연결중 에러가 발생 했습니다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="023-2.png" alt="image"></p><p>DB연결과 데이터 Insert가 성공했다고 출력 됩니다.</p><p>그럼 정상적으로 데이터가 들어갔는지 phpMyAdmin에서 확인해 보도록 하겠습니다.</p><p><img src="024-2.png" alt="image"></p><p>phpMyAdmin에서도 데이터가 정상적으로 등록된것을 확인할수가 있습니다.</p><p>그럼 이번에는 등록한 데이터를 출력하는 Select를 해보도록 하겠습니다.</p><p>TestSelect.java를 열어주시기 바랍니다.</p><p>그리고 아래와 같이 코딩을 하시고 상단의 ▶를 눌러주셔서 실행을 합니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSelect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">Statement stmt = <span class="keyword">null</span>;</span><br><span class="line">    ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// mariaDB 드라이버 설정</span></span><br><span class="line">Class.forName(<span class="string">&quot;org.mariadb.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 접속할 DB주소 설정</span></span><br><span class="line">String url = <span class="string">&quot;jdbc:mysql://10.0.1.30/akibatv&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 접속할 아이디, 비밀번호 설정</span></span><br><span class="line">conn = DriverManager.getConnection(url, <span class="string">&quot;akibatv&quot;</span>, <span class="string">&quot;akibatv&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;DB 연결 성공&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Select 쿼리문</span></span><br><span class="line">String sql = <span class="string">&quot; SELECT name, age, birthday FROM test &quot;</span>;</span><br><span class="line"><span class="comment">// 객체 생성</span></span><br><span class="line">stmt = conn.createStatement();</span><br><span class="line"><span class="comment">// SQL실행</span></span><br><span class="line">rs = stmt.executeQuery(sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 결과값 출력</span></span><br><span class="line"><span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">String name = rs.getString(<span class="number">1</span>);</span><br><span class="line">String age = rs.getString(<span class="number">2</span>);</span><br><span class="line">String birthday = rs.getString(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;이름 : &quot;</span> + name);</span><br><span class="line">System.out.println(<span class="string">&quot;나이 : &quot;</span> + age);</span><br><span class="line">System.out.println(<span class="string">&quot;생년월일 : &quot;</span> + birthday);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;mariaDB Driver를 찾을수 없습니다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Database 연결중 에러가 발생 했습니다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="025-2.png" alt="image"></p><p>DB연결과 Select가 성공후 콘솔창에 내용이 출력된것을 확인할수 있습니다.</p><p>그럼 이번에는 등록한 데이터를 출력하는 Update를 해보도록 하겠습니다.</p><p>TestUpdate.java를 열어주시기 바랍니다.</p><p>그리고 아래와 같이 코딩을 하시고 상단의 ▶를 눌러주셔서 실행을 합니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestUpdate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// mariaDB 드라이버 설정</span></span><br><span class="line">Class.forName(<span class="string">&quot;org.mariadb.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 접속할 DB주소 설정</span></span><br><span class="line">String url = <span class="string">&quot;jdbc:mysql://10.0.1.30/akibatv&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 접속할 아이디, 비밀번호 설정</span></span><br><span class="line">conn = DriverManager.getConnection(url, <span class="string">&quot;akibatv&quot;</span>, <span class="string">&quot;akibatv&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;DB 연결 성공&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Update 쿼리문</span></span><br><span class="line">String sql = <span class="string">&quot; UPDATE test SET name = ?, age = ?, birthday = ? &quot;</span>;</span><br><span class="line"><span class="comment">// 객체 생성과 쿼리문을 넘겨줍니다.</span></span><br><span class="line">pstmt = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> index = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// Update 데이터값</span></span><br><span class="line"><span class="comment">// 이름은 String형태 AkibaTV</span></span><br><span class="line">pstmt.setString(index++, <span class="string">&quot;AkibaTV&quot;</span>);</span><br><span class="line"><span class="comment">// 나이는 Int형태 15살</span></span><br><span class="line">pstmt.setInt(index++, <span class="number">15</span>);</span><br><span class="line"><span class="comment">// 나이는 String형태 19990101</span></span><br><span class="line">pstmt.setString(index++, <span class="string">&quot;19990101&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// SQL실행</span></span><br><span class="line"><span class="keyword">int</span> count = pstmt.executeUpdate();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;데이터값에 이상이 있습니다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;데이터 Update 성공!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;mariaDB Driver를 찾을수 없습니다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Database 연결중 에러가 발생 했습니다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="026-2.png" alt="image"></p><p>DB연결과 데이터 Update가 성공했다고 출력 됩니다.</p><p>그럼 정상적으로 데이터가 갱신이 되었는지 phpMyAdmin에서 확인해 보도록 하겠습니다.</p><p><img src="027.png" alt="image"></p><p>phpMyAdmin에서도 정상적으로 데이터가 갱신된것을 확인하실수 있습니다.</p><p>그럼 이번에는 마지막으로 데이터를 삭제하는 Delete를 해보도록 하겠습니다.</p><p>TestDelete.java를 열어주시기 바랍니다.</p><p>그리고 아래와 같이 코딩을 하시고 상단의 ▶를 눌러주셔서 실행을 합니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDelete</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// mariaDB 드라이버 설정</span></span><br><span class="line">Class.forName(<span class="string">&quot;org.mariadb.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 접속할 DB주소 설정</span></span><br><span class="line">String url = <span class="string">&quot;jdbc:mysql://10.0.1.30/akibatv&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 접속할 아이디, 비밀번호 설정</span></span><br><span class="line">conn = DriverManager.getConnection(url, <span class="string">&quot;akibatv&quot;</span>, <span class="string">&quot;akibatv&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;DB 연결 성공&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Update 쿼리문</span></span><br><span class="line">String sql = <span class="string">&quot; DELETE FROM test WHERE name = ? &quot;</span>;</span><br><span class="line"><span class="comment">// 객체 생성과 쿼리문을 넘겨줍니다.</span></span><br><span class="line">pstmt = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> index = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// Delete 데이터값</span></span><br><span class="line">pstmt.setString(index++, <span class="string">&quot;AkibaTV&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// SQL실행</span></span><br><span class="line"><span class="keyword">int</span> count = pstmt.executeUpdate();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;데이터값에 이상이 있습니다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;데이터 Delete 성공!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;mariaDB Driver를 찾을수 없습니다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Database 연결중 에러가 발생 했습니다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="028-1.png" alt="image"></p><p>DB연결과 데이터 Delete가 성공했다고 출력 됩니다.</p><p>그럼 정상적으로 데이터가 삭제가 되었는지 phpMyAdmin에서 확인해 보도록 하겠습니다.</p><p><img src="029-1.png" alt="image"></p><p>phpMyAdmin에서도 정상적으로 데이터가 삭제된것을 확인하실수 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Java/">Java</category>
      
      
      <category domain="https://playneko.github.io/tags/MariaDB/">MariaDB</category>
      
      <category domain="https://playneko.github.io/tags/NPM/">NPM</category>
      
      <category domain="https://playneko.github.io/tags/phpMyAdmin/">phpMyAdmin</category>
      
      <category domain="https://playneko.github.io/tags/Java/">Java</category>
      
      <category domain="https://playneko.github.io/tags/connection/">connection</category>
      
      <category domain="https://playneko.github.io/tags/delete/">delete</category>
      
      <category domain="https://playneko.github.io/tags/insert/">insert</category>
      
      <category domain="https://playneko.github.io/tags/select/">select</category>
      
      <category domain="https://playneko.github.io/tags/update/">update</category>
      
      <category domain="https://playneko.github.io/tags/jar/">jar</category>
      
      <category domain="https://playneko.github.io/tags/jdk/">jdk</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4/">이클립스</category>
      
      <category domain="https://playneko.github.io/tags/eclipse/">eclipse</category>
      
      <category domain="https://playneko.github.io/tags/jre/">jre</category>
      
      <category domain="https://playneko.github.io/tags/Open-JDK/">Open JDK</category>
      
      <category domain="https://playneko.github.io/tags/Oracle/">Oracle</category>
      
      <category domain="https://playneko.github.io/tags/Oracle-JDK/">Oracle JDK</category>
      
      <category domain="https://playneko.github.io/tags/Oracle-JRE/">Oracle JRE</category>
      
      <category domain="https://playneko.github.io/tags/%EC%98%A4%EB%9D%BC%ED%81%B4/">오라클</category>
      
      <category domain="https://playneko.github.io/tags/sql/">sql</category>
      
      <category domain="https://playneko.github.io/tags/JDBC/">JDBC</category>
      
      <category domain="https://playneko.github.io/tags/lib/">lib</category>
      
      
      <comments>https://playneko.github.io/2020/06/10/java/java-008/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA 프로그램 개발을 위한 Eclipse 기본 환경구축</title>
      <link>https://playneko.github.io/2020/06/09/java/java-007/</link>
      <guid>https://playneko.github.io/2020/06/09/java/java-007/</guid>
      <pubDate>Mon, 08 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;JAVA 프로그램 개발을 위한 Eclipse 기본 환경구축&lt;br&gt;이번에 소개할 내용은 JAVA 개발을 위한 Eclipse 기본 환경구축 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="JAVA-프로그램-개발을-위한-Eclipse-기본-환경구축"><a href="#JAVA-프로그램-개발을-위한-Eclipse-기본-환경구축" class="headerlink" title="JAVA 프로그램 개발을 위한 Eclipse 기본 환경구축"></a>JAVA 프로그램 개발을 위한 Eclipse 기본 환경구축</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 JAVA 개발을 위한 Eclipse 기본 환경구축 입니다.</p><p>본격적으로 이클립스상에서 개발을 하기전에 사전에 미리 환경설정을 하시고 프로젝트를 진행을 하셔야만</p><p>나중에 여러가지 다시 환경을 맞추고 하는 번거로움이 사라지게 됩니다.</p><p>그러므로 이클립스를 처음 설치후 사용하실때는 기본적인 설정을 해두시면</p><p>여러모로 편안한 개발을 하실수 있게 되겠습니다.</p><p>일단 이클립스를 실행해 주시기 바랍니다.</p><p><img src="001-7.png" alt="image"></p><p>이클립스가 열리셨으면 설정을 해야하기때문에 Window메뉴 Preferences를 선택해 주시기 바랍니다.</p><p><img src="002-6.png" alt="image"></p><p>아래와같이 설정화면이 나오게 되면 이클립스에 대한 세부적인 설정을 모두 여기서 하실수가 있습니다.</p><p>일단 최소 개발환경의 JAVA설정을 하기 위함이니 다른 설정은 다른 소개를 하면서 진행을 하도록 하겠습니다.</p><p>화면에서 Java앞의 &gt; 를 선택해 주시기 바랍니다.</p><p><img src="003-6.png" alt="image"></p><p>아래와 같이 Java의 상세 설정 메뉴들이 나오게 됩니다. 여기서 인스톨된 JDK 또는 JRE추가와</p><p>자바 컴파일러를 설정을 해보도록 하겠습니다.</p><p>그럼 메뉴의 Installed JREs를 선택해 주세요.</p><p><img src="004-5.png" alt="image"></p><p>Installed JREs메뉴에 가시면 기본적으로 설치가 되어있는 jre1.8버전이 선택이 되어 있는것을 보실수 있습니다.</p><p>만일 개발중인 프로젝트에 따라 버전이 틀린경우 여기서 JDK 또는 JRE를 추가하시고 체크를 해주시면 되겠습니다.</p><p>일단 추가방법을 보겠습니다. ADD 버튼을 눌러주세요.</p><p><img src="005-4.png" alt="image"></p><p>아래의 화면이 나오시면 Standard VM을 선택하시고  NEXT버튼을 눌러주세요.</p><p><img src="006-4.png" alt="image"></p><p>새로운 JDK 또는 JRE를 추가를 해주어야 하기때문에 Directory를 눌러주세요.</p><p><img src="007-5.png" alt="image"></p><p>JDK 또는 JRE가 설치된 폴더를 이동하신후 해당 폴더를 선택하시고 선택버튼을 눌러주세요.</p><p><img src="008-5.png" alt="image"></p><p>그러면 선택하신 JDK 또는 JRE가 아래와같이 나오게 됩니다.</p><p>저는 이미 1.8버전이 추가가 되어 있는상태이므로 아래와같이 나오게 됩니다만</p><p>다른 버전을 추가하면 Finish가 활성화가 되며 버튼을 눌러주시면 처음의 리스트 목록에 등록이 된것을 확인할수 있습니다.</p><p><img src="009-4.png" alt="image"></p><p>이렇게해서 설치된 JDK 또는 JRE의 다른 버전을 추가 등록하는 방법을 알아보았습니다.</p><p>이번에는 이클립스에서 프로젝트를 추가 하거나 할경우 처음 기본 컴파일러 버전 설정을 보겠습니다.</p><p>아래의 화면에서 왼쪽의 Compiler메뉴를 선택해 주세요.</p><p><img src="005-4.png" alt="image"></p><p>Compiler메뉴로 이동하시면 아래와 같이 설치된 JDK 또는 JRE의 기본 버전으로 선택되어 있는것을 보실수 있습니다.</p><p>만일 개발한 프로젝트가 1.4 또는 1.6버전에 맞춰서 개발이 되어있으신 경우는 Compiler compliance level의 버전을</p><p>변경하셔서 해당 프로젝트에 맞게 바꾸실수 있습니다.</p><p><img src="010-4.png" alt="image"></p><p><img src="011-4.png" alt="image"></p><p>여기까지가 이클립스에서 JAVA개발에 필요한 기본 설정이 되겠습니다.</p><p>이제 간단한 프로젝트를 생성후 실행을 해보는것까지 해보도록 하겠습니다.</p><p>창을 닫아주시기 바랍니다.</p><p><img src="012-4.png" alt="image"></p><p>간단하게 콘솔에 출력할수 있는 프로젝트를 생성을 위해 Create a project를 선택해 주세요.</p><p><img src="013-5.png" alt="image"></p><p>위와 같이 나오시면 Java Project를 선택하시고 Next를 눌러주세요.</p><p><img src="014-1-1.png" alt="image"></p><p>프로젝트 생성 화면이 나오시면 프로젝트명을 넣어주시고 다른건 기본설정으로 Finish버튼을 눌러주세요.</p><p><img src="015-2.png" alt="image"></p><p>위와같이 프로젝트가 생성이 된것을 보시게 됩니다.</p><p><img src="016-3.png" alt="image"></p><p>src에서 오른쪽 마우스 클릭후 New -&gt; Class를 선택해 주세요.</p><p><img src="017-3.png" alt="image"></p><p>클래스 파일명을 입력하시고 public static void main에 체크를 넣어주세요.</p><p>public static void main를 체크함으로써 메인클래스로 지정을 하며 콘솔용으로</p><p>바로 실행이 가능한 클래스로 선언을 하겠다는것 입니다.</p><p>그리고 Finish버튼을 눌러주세요.</p><p><img src="018-3.png" alt="image"></p><p>위와같이 클래스파일과 기본적인 문법이 작성되어 있는것을 보실수 있습니다.</p><p>이제 여기서 간단하게 Hello, AkibaTV!라는 문장을 입력후 콘솔에 출력이 되는것을 해보도록 하겠습니다.</p><p>아래와 같이 코딩을 해주세요.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">System.out.println(<span class="string">&quot;Hello, AkibaTV!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="019-3.png" alt="image"></p><p>작성을 하셨으면 이제 실행을 해보도록 하겠습니다.</p><p><img src="020-3-e1591418948321.png" alt="image"></p><p>상단의 &gt; 버튼옆의 작은 ▼을 누르시면 test프로젝트를 선택해서 실행하실수 있습니다.</p><p><img src="021-2.png" alt="image"></p><p>프로젝트를 실행하시면 위와같이 콘솔창에 Hello, AkibaTV!가 출력된것을 확인하실수 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Java/">Java</category>
      
      
      <category domain="https://playneko.github.io/tags/Java/">Java</category>
      
      <category domain="https://playneko.github.io/tags/jdk/">jdk</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4/">이클립스</category>
      
      <category domain="https://playneko.github.io/tags/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/">프로젝트</category>
      
      <category domain="https://playneko.github.io/tags/eclipse/">eclipse</category>
      
      <category domain="https://playneko.github.io/tags/jre/">jre</category>
      
      <category domain="https://playneko.github.io/tags/Open-JDK/">Open JDK</category>
      
      <category domain="https://playneko.github.io/tags/Oracle/">Oracle</category>
      
      <category domain="https://playneko.github.io/tags/Oracle-JDK/">Oracle JDK</category>
      
      <category domain="https://playneko.github.io/tags/Oracle-JRE/">Oracle JRE</category>
      
      <category domain="https://playneko.github.io/tags/Compiler/">Compiler</category>
      
      <category domain="https://playneko.github.io/tags/Directory/">Directory</category>
      
      <category domain="https://playneko.github.io/tags/Installed-JREs/">Installed JREs</category>
      
      <category domain="https://playneko.github.io/tags/Java-Project/">Java Project</category>
      
      <category domain="https://playneko.github.io/tags/jre1-8/">jre1.8</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC/">컴파일러</category>
      
      
      <comments>https://playneko.github.io/2020/06/09/java/java-007/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA 프로그램 개발시 JDK 환경 변수 설정하기</title>
      <link>https://playneko.github.io/2020/06/08/java/java-006/</link>
      <guid>https://playneko.github.io/2020/06/08/java/java-006/</guid>
      <pubDate>Sun, 07 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;JAVA 프로그램 개발시 JDK 환경 변수 설정하기&lt;br&gt;이번에 소개할 내용은 JAVA JDK 환경 변수 설정 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="JAVA-프로그램-개발시-JDK-환경-변수-설정하기"><a href="#JAVA-프로그램-개발시-JDK-환경-변수-설정하기" class="headerlink" title="JAVA 프로그램 개발시 JDK 환경 변수 설정하기"></a>JAVA 프로그램 개발시 JDK 환경 변수 설정하기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 JAVA JDK 환경 변수 설정 입니다.</p><p>JDK와 이클립스를 설치는 되었지만 환경변수 설정을 하셔야만</p><p>제대로된 개발환경이 완성 되겠습니다.</p><p>그래서 이번에 개발환경을 완성시켜줄수 있는 JDK를 시스템 환경설정에 등록하는 방법과</p><p>이클립스에서 기본적으로 해주어야할 자바개발 환경 설정을 해보도록 하겠습니다.</p><p>처음 개발시작을 하실때 이것만 제대로 해주셔도 문제없이 개발을 하실수 있습니다.</p><p>이제 막 개발을 시작하거나 개발 초보분들은 이부분에서 많이 놓치시기 때문에</p><p>기본적으로 환경설정부터 해주시기 바랍니다.</p><p>그럼 이제 시스템 환경설정부터 차례대로 시작해 보겠습니다.</p><p><img src="001-6.png" alt="image"></p><p>PC에서 오른쪽 클릭후 프로퍼티를 선택해 주세요.</p><p><img src="002-5.png" alt="image"></p><p>왼쪽의 시스템 환경설정을 클릭해 주세요.</p><p><img src="003-5.png" alt="image"></p><p>가장 하단 마지막 버튼이 환경변수 버튼을 눌러주세요.</p><p><img src="004-1-1.png" alt="image"></p><p>그러면 위와같은 화면이 나온것을 확인하실수 있겠습니다.</p><p>신규버튼을 눌러주세요.</p><p>그런다음 아래와 같이 환경설정값을 세팅해 주시기 바랍니다.</p><p><img src="005-3.png" alt="image"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">변수명 : JAVA_HOME</span><br><span class="line"></span><br><span class="line"># 각자 자신이 설치한 JDK 또는 JRE의 경로를 선택해 주세요.</span><br><span class="line">변수값 : C:\Program Files\Java\jre1.8.0_251</span><br></pre></td></tr></table></figure><p>설정을 하셨으면 OK버튼을 눌러주세요.</p><p><img src="006-1-1.png" alt="image"></p><p>그다음은 추가한 JAVA_HOME을 Path경로에 등록을 해줘야만 합니다.</p><p>Path를 선택후 편집을 눌러주시기 바랍니다.</p><p><img src="007-4.png" alt="image"></p><p>위와같은 화면이 나오시면 신규추가를 누르시고 아래의 경로를 입력해서 설정후 OK를 눌러주시기 바랍니다.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%JAVA_HOME%\bin</span><br></pre></td></tr></table></figure><p>그다음 CLASSPATH를 추가를 해줘야만 하기에 아래와 같이 등록해 주시기 바랍니다.</p><p><img src="008-4.png" alt="image"></p><p><img src="009-3.png" alt="image"></p><p>위와같이 입력후 OK버튼을 눌러주세요.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">변수명 : CLASSPATH</span><br><span class="line">변수값 : %JAVA_HOME%\lib</span><br></pre></td></tr></table></figure><p>환경변수창도 OK버튼을 눌러주세요.</p><p>윈도우키 + R키를 누르시면 아래의 창이 열리게 되며 CMD를 입력후 OK버튼을 눌러주세요.</p><p><img src="010-3.png" alt="image"></p><p><img src="011-3.png" alt="image"></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 터미널이 열리면 아래의 명령어를 입력해 주세요.</span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><p>자바 버전이 출력이 되시면 JAVA가 정상적으로 설치가 되어 있는것 입니다.</p><p><img src="012-3.png" alt="image"></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 터미널이 열리면 아래의 명령어를 입력해 주세요.</span><br><span class="line">java</span><br></pre></td></tr></table></figure><p>위와같은 화면이 나오면 정상적으로 환경변수 설정이 끝났습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Java/">Java</category>
      
      
      <category domain="https://playneko.github.io/tags/Java/">Java</category>
      
      <category domain="https://playneko.github.io/tags/java-version/">java -version</category>
      
      <category domain="https://playneko.github.io/tags/jdk/">jdk</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4/">이클립스</category>
      
      <category domain="https://playneko.github.io/tags/eclipse/">eclipse</category>
      
      <category domain="https://playneko.github.io/tags/jre/">jre</category>
      
      <category domain="https://playneko.github.io/tags/Open-JDK/">Open JDK</category>
      
      <category domain="https://playneko.github.io/tags/Oracle/">Oracle</category>
      
      <category domain="https://playneko.github.io/tags/Oracle-JDK/">Oracle JDK</category>
      
      <category domain="https://playneko.github.io/tags/Oracle-JRE/">Oracle JRE</category>
      
      <category domain="https://playneko.github.io/tags/cmd/">cmd</category>
      
      <category domain="https://playneko.github.io/tags/javac/">javac</category>
      
      <category domain="https://playneko.github.io/tags/%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98/">환경변수</category>
      
      
      <comments>https://playneko.github.io/2020/06/08/java/java-006/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA 프로그램 개발을 위한 이클립스 환경 구축</title>
      <link>https://playneko.github.io/2020/06/07/java/java-005/</link>
      <guid>https://playneko.github.io/2020/06/07/java/java-005/</guid>
      <pubDate>Sat, 06 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;JAVA 프로그램 개발을 위한 이클립스 환경 구축&lt;br&gt;이번에 소개할 내용은 JAVA 개발을 위한 이클립스 환경 구축을 해보도록 하겠습니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="JAVA-프로그램-개발을-위한-이클립스-환경-구축"><a href="#JAVA-프로그램-개발을-위한-이클립스-환경-구축" class="headerlink" title="JAVA 프로그램 개발을 위한 이클립스 환경 구축"></a>JAVA 프로그램 개발을 위한 이클립스 환경 구축</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 JAVA 개발을 위한 이클립스 환경 구축을 해보도록 하겠습니다.</p><blockquote><h5 id="우선-자바개발에-필요한-프로그램을-다운로드를-하겠습니다"><a href="#우선-자바개발에-필요한-프로그램을-다운로드를-하겠습니다" class="headerlink" title="우선 자바개발에 필요한 프로그램을 다운로드를 하겠습니다."></a>우선 자바개발에 필요한 프로그램을 다운로드를 하겠습니다.</h5><ul><li>이클립스</li><li>JDK 또는 OpenJDK</li></ul></blockquote><p>이클립스를 다운받기 위해 아래의 이클립스 사이트로 접속해 주시기 바랍니다.</p><p><a href="https://www.eclipse.org/">https://www.eclipse.org/</a></p><p><img src="001-5.png" alt="image"></p><p>다운로드 버튼을 누르시면 아래와 같이 다운로드가능한 버전과 32비트/64비트에 맞게</p><p>이클립스를 바로 다운로드 가능하게 표시가 됩니다.</p><p>다운로드를 해서 이클립스를 받아주시기 바랍니다.</p><p><img src="002-4.png" alt="image"></p><p><img src="003-4.png" alt="image"></p><p>다운로드를 시작하면 하단에 파일이 다운로드 되는것을 보실수 있습니다.</p><p>이클립스는 후원으로 제공을 하고 있기에 후원을 해주실분은 원하시는 금액으로 후원도 가능 합니다.</p><p><img src="004-4.png" alt="image"></p><p>이클립스가 다운로드 된것을 확인 하실수 있습니다.</p><p>다운로드 받으신 eclipse-inst-win64.exe를 실행해 주시기 바랍니다.</p><p><img src="005-2.png" alt="image"></p><p>이클립스는 기본적으로 JAVA가 설치가 되어 있어야만 설치가 가능 합니다.</p><p>만일 JAVA가 설치가 안되어 있으시면 아래와 같이 메세지가 나오게 되며 예를 눌러주시면</p><p>JDK를 다운받을수 있는 페이지가 열리게 됩니다.</p><p><img src="006-3.png" alt="image"></p><p>JDK는 여러분들의 개발상황에 맞게 다운로드를 해주시기 바랍니다.</p><p><img src="007-3.png" alt="image"></p><p>저는 Oracle JRE 8을 다운로드 하도록 하겠습니다.</p><p><img src="008-3.png" alt="image"></p><p>Oracle JRE 8링크를 클릭하시면 아래의 다운로드 페이지로 이동 합니다.</p><p><img src="009-2.png" alt="image"></p><p>각자의 환경에 맞는 파일을 다운로드를 받아주시기 바랍니다.</p><p>저의 경우에는 Windows x64의 jre-8u251-windows-x64.exe를 다운로드 하겠습니다.</p><p><img src="010-2.png" alt="image"></p><p>다운로드를 하면 아래와 같은 메세지창이 나오게 됩니다.</p><p>체크박스에 체크를 해주시면 다운로드 버튼이 활성화가 되어 다운로드 하실수 있습니다.</p><p><img src="012-2.png" alt="image"></p><p>다운로드를 누르시면 오라클 계정으로 로그인을 하라고 나오게 됩니다.</p><p>계정을 가지고 계시면 로그인을 해주시고 없으시면 신규추가로 등록을 해주시기 바랍니다.</p><p><img src="013-4.png" alt="image"></p><p>오라클 계정으로 로그인 하시면 아래와같이 하단에 JRE파일이 다운로드 되는것을 확인 하실수 있습니다.</p><p><img src="014-2.png" alt="image"></p><p><img src="015-1.png" alt="image"></p><p>다운로드한 jre-8u251-windows-x64.exe를 설치를 해주시기 바랍니다.</p><p><img src="016-2.png" alt="image"></p><p><img src="017-2.png" alt="image"></p><p><img src="018-2.png" alt="image"></p><p>JAVA 설치가 정상적으로 완료 되었습니다.</p><p>이젠 이클립스를 설치를 하도록 하겠습니다.</p><p>eclipse-inst-win64.exe를 실행해서 설치를 진행해 주세요.</p><p>아래와 같이 나오시면 자기가 개발할 환경에 맞는것을 설치하시면 됩니다.</p><p>저는 Eclipse IDE for Enterprise Java Developers를 설치하도록 하겠습니다.</p><p><img src="019-2.png" alt="image"></p><p><img src="020-2.png" alt="image"></p><p>아래의 창이 나오시면 승인을 눌러주세요.</p><p><img src="021-1.png" alt="image"></p><p>이제 설치가 진행되기 시작 합니다.</p><p><img src="022-1.png" alt="image"></p><p>이클립스 설치가 완료 되었습니다.</p><p>LAUNCH를 클릭하시면 이클립스가 실행 됩니다.</p><p><img src="023-1.png" alt="image"></p><p><img src="024-1-520x347.png" alt="image"></p><p>이클립스가 기동되면서 워크스페이스 경로를 지정하라고 나오게 됩니다.</p><p>자신의 개발상황에 맞게 선택을 해주시면 되겠습니다.</p><p><img src="025-1.png" alt="image"></p><p><img src="026-1.png" alt="image"></p><p>이렇게 해서 JAVA의 JDK 설치부터 이클립스 설치까지 모두 완료 되었습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Java/">Java</category>
      
      
      <category domain="https://playneko.github.io/tags/Java/">Java</category>
      
      <category domain="https://playneko.github.io/tags/jdk/">jdk</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4/">이클립스</category>
      
      <category domain="https://playneko.github.io/tags/32bit/">32bit</category>
      
      <category domain="https://playneko.github.io/tags/64bit/">64bit</category>
      
      <category domain="https://playneko.github.io/tags/eclipse/">eclipse</category>
      
      <category domain="https://playneko.github.io/tags/jre/">jre</category>
      
      <category domain="https://playneko.github.io/tags/Open-JDK/">Open JDK</category>
      
      <category domain="https://playneko.github.io/tags/Oracle/">Oracle</category>
      
      <category domain="https://playneko.github.io/tags/Oracle-JDK/">Oracle JDK</category>
      
      <category domain="https://playneko.github.io/tags/Oracle-JRE/">Oracle JRE</category>
      
      <category domain="https://playneko.github.io/tags/win32/">win32</category>
      
      <category domain="https://playneko.github.io/tags/win64/">win64</category>
      
      <category domain="https://playneko.github.io/tags/%EC%98%A4%EB%9D%BC%ED%81%B4/">오라클</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B3%84%EC%A0%95/">계정</category>
      
      
      <comments>https://playneko.github.io/2020/06/07/java/java-005/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에 GPIO, 파이썬으로 FM 라디오방송국 만들기</title>
      <link>https://playneko.github.io/2020/06/06/rasberry-pi/rasberry-pi-019/</link>
      <guid>https://playneko.github.io/2020/06/06/rasberry-pi/rasberry-pi-019/</guid>
      <pubDate>Fri, 05 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에 GPIO, 파이썬을 이용해 FM 라디오 방송국 만들기&lt;br&gt;이번에 소개할 내용은 라즈베리파이에 GPIO, 파이썬을 이용해 FM Radio 방송국 만들기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에-GPIO-파이썬을-이용해-FM-라디오-방송국-만들기"><a href="#라즈베리파이에-GPIO-파이썬을-이용해-FM-라디오-방송국-만들기" class="headerlink" title="라즈베리파이에 GPIO, 파이썬을 이용해 FM 라디오 방송국 만들기"></a>라즈베리파이에 GPIO, 파이썬을 이용해 FM 라디오 방송국 만들기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 라즈베리파이에 GPIO, 파이썬을 이용해 FM Radio 방송국 만들기 입니다.</p><p>오픈소스를 이용해서 설치후 실행만 하시면 바로 라디오 송출이 가능하게 되는것으로</p><p>누구나 쉽고 빠르게 나만의 라디오 방송국을 구축하실수 있습니다.</p><p>나만의 방송국을 쉽게 만들수는 있지만 일단 준비물이 필요하겠습니다.</p><blockquote><h5 id="준비물은-간단하게"><a href="#준비물은-간단하게" class="headerlink" title="준비물은 간단하게"></a>준비물은 간단하게</h5><ul><li>라즈베리파이 OS가 설치된 라즈베리파이</li><li>점퍼케이블 1줄</li><li>라디오</li></ul></blockquote><p>저는 라즈베리파이 제로를 이용해서 설명을 드리겠습니다.</p><p>라디오가 없으면 송출했는지 확인을 할수가 없습니다.</p><p><img src="002-e1590889756380.jpg" alt="image"></p><p><img src="IMG_6627.jpg" alt="image"></p><p><img src="005.jpg" alt="image"></p><p>점퍼케이블을 아래의 표를 보시고 해당하는 위치에 연결을 해주시기 바랍니다.</p><p><img src="RasPiGPIO.png" alt="image"></p><table><thead><tr><th align="center">Pi GPIO Pin</th><th align="center">Notes</th></tr></thead><tbody><tr><td align="center">7</td><td align="center">GPCLK0</td></tr></tbody></table><p>해당하시는 핀에 점퍼케이블을 연결 하셨으면 이제 라디오방송을 할수있는</p><p>오픈소스를 다운로드를 하셔야만 합니다.</p><p>라즈베리파이를 VNC로 접속하시고 터미널을 실행해 주시기 바랍니다.</p><p><img src="001-4.png" alt="image"></p><p>오픈소스를 다운받아서 설치할 경로에 위치를 해주시기 바랍니다.</p><p>저의 경우 /home/pi/Document에 별도의 폴더를 만들어 관리하기 위해 폴더를 추가 하였습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># piRadio 이름으로 디렉토리 생성</span></span><br><span class="line">$ mkdir piRadio</span><br><span class="line"></span><br><span class="line"><span class="comment"># piRadio 디렉토리로 이동</span></span><br><span class="line">$ <span class="built_in">cd</span> piRadio</span><br><span class="line"></span><br><span class="line"><span class="comment"># 디렉토리안의 리스트를 출력 합니다.</span></span><br><span class="line">$ ls -al</span><br></pre></td></tr></table></figure><p><img src="003-3.png" alt="image"></p><p>오픈소스가 wav파일만 가능한 버전과 wav, mp3가 가능한 버전이 있습니다만</p><p>저는 wav, mp3 둘가 가능한 버전으로 소개를 해드리도록 하겠습니다.</p><p>오픈소스를 다운받기 위해 깃허브로 부터 소스를 클론하여 받도록 하겠습니다.</p><p>아래의 명령어를 터미널에 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/Mikael-Jakhelln/PiFMPlay.git</span><br></pre></td></tr></table></figure><p><img src="004-3.png" alt="image"></p><p>다운로드를 시작하시면 파일수가 많습니다만 조금만 기다리시면 다운로드가 되어있는것을 확인하실수 있습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 아래의 명령어를 입력후</span></span><br><span class="line"><span class="comment"># PiFMPlay란 폴더가 생성 된것을 확인할수 있습니다.</span></span><br><span class="line">$ ls -al</span><br><span class="line"></span><br><span class="line"><span class="comment"># PiFMPlay 폴더로 이동을 합니다.</span></span><br><span class="line">$ <span class="built_in">cd</span> PiFMPlay</span><br></pre></td></tr></table></figure><p><img src="006-2.png" alt="image"></p><p>PiFMPlay 폴더로 이동을 하시면 아래와 같은 리스트가 나오게 됩니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># .git 폴더, README.md</span></span><br><span class="line"><span class="comment"># pifmplay 폴더가 보입니다.</span></span><br><span class="line"><span class="comment"># 아래의 명령어로 pifmplay폴더로 이동 합니다.</span></span><br><span class="line">$ <span class="built_in">cd</span> pifmplay</span><br></pre></td></tr></table></figure><p><img src="007-2.png" alt="image"></p><p>폴더를 확인하시면 여러가지 샘플용 mp3, wav파일과 파이썬으로 개발된 오픈소스도 보입니다.</p><p><img src="008-2.png" alt="image"></p><p>이제 실행하기전에 아래의 명령어로 실행파일에 권한을 부여를 해주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +x pifm</span><br><span class="line">$ chmod +x pifmplay</span><br></pre></td></tr></table></figure><p>mp3파일을 재생하면 pifmplay의 경우 ffmpeg라이브러리가 필요로 하기에 우선 라이브러리도 설치 하겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install ffmpeg sox libsox-fmt-allffmpeg sox libsox-fmt-all</span><br></pre></td></tr></table></figure><p><img src="010-1-1.png" alt="image"></p><p>설치가 끝나셨으면 우선 starwars.wav파일을 송출해 보도록 하겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 라디오 주파수는 가지고 계신</span></span><br><span class="line"><span class="comment"># 라디오 주파수에 맞추어서 설정해 주세요.</span></span><br><span class="line">$ sudo ./pifm starwars.wav 98.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 실행을 종료 하실때는 Ctrl + C키를 입력해 주세요.</span></span><br></pre></td></tr></table></figure><p><img src="011-2.png" alt="image"></p><p>위와같이 실행을 하신후 라디오 주파수를 맞춰 주시면 라디오에서 스타워즈 노래가 나오는것을 확인하실수 있습니다.</p><p>그럼 계속해서 pifmplay를 이용한 mp3파일을 송출을 해보도록 하겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ./pifmplay Porcelain.mp3 98.1</span><br></pre></td></tr></table></figure><p><img src="013-3.png" alt="image"></p><p>위와같이 출력후 라디오와 주파수를 맞춰주시면 mp3 음악이 라디오로 재생되는것을 확인하실수 있습니다.</p><p>이렇게해서 나만의 라디오 방송국을 만드는 방법을 알아보았습니다.</p><p>아래는 실제 라디오로 재생되는 음악파일 입니다.</p><p><a href="https://youtu.be/U7wfQ608Ysw"><img src="http://img.youtube.com/vi/U7wfQ608Ysw/0.jpg" alt="AkibaTV"></a></p><blockquote><h4 id="주의사항"><a href="#주의사항" class="headerlink" title="주의사항"></a>주의사항</h4><ol><li>적합성 평가 : 전파법시행령 25조 국내에서 사용하기 위해서는 적합성 평가를 받은 제품이어야만 합니다.</li><li>출력 : 미래부에서는 ‘신고하지 아니하고 개설할 수 있는 무선국용 무선기기’의 규격을 정해놓고 있으며</li><li>오디오에 해당하는 ‘4. 음성 및 음향신호 전송용 무선기기’는 10mW 이하여야 합니다. </li></ol></blockquote><p>자세한 내용은 아래의 한국전파진흥협회를 참고해 주세요.</p><p><a href="https://www.spectrum.or.kr/">https://www.spectrum.or.kr/</a></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Python/">Python</category>
      
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B9%83%ED%97%88%EB%B8%8C/">깃허브</category>
      
      <category domain="https://playneko.github.io/tags/e100/">e100</category>
      
      <category domain="https://playneko.github.io/tags/FM/">FM</category>
      
      <category domain="https://playneko.github.io/tags/FM-RADIO/">FM RADIO</category>
      
      <category domain="https://playneko.github.io/tags/gihub/">gihub</category>
      
      <category domain="https://playneko.github.io/tags/iriver/">iriver</category>
      
      <category domain="https://playneko.github.io/tags/mp3/">mp3</category>
      
      <category domain="https://playneko.github.io/tags/RADIO/">RADIO</category>
      
      <category domain="https://playneko.github.io/tags/wav/">wav</category>
      
      <category domain="https://playneko.github.io/tags/YouTube/">YouTube</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EB%94%94%EC%98%A4/">라디오</category>
      
      <category domain="https://playneko.github.io/tags/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4/">오픈소스</category>
      
      <category domain="https://playneko.github.io/tags/%EC%A0%84%ED%8C%8C%EB%B2%95/">전파법</category>
      
      
      <comments>https://playneko.github.io/2020/06/06/rasberry-pi/rasberry-pi-019/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 PHP에서 URL의 Image Download 해보기</title>
      <link>https://playneko.github.io/2020/06/05/rasberry-pi/rasberry-pi-018/</link>
      <guid>https://playneko.github.io/2020/06/05/rasberry-pi/rasberry-pi-018/</guid>
      <pubDate>Thu, 04 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 PHP에서 URL의 Image Download 해보기&lt;br&gt;이번에 소개할 내용은 라즈베리파이와 PHP에서 URL의 Image Download 해보기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-PHP에서-URL의-Image-Download-해보기"><a href="#라즈베리파이-PHP에서-URL의-Image-Download-해보기" class="headerlink" title="라즈베리파이 PHP에서 URL의 Image Download 해보기"></a>라즈베리파이 PHP에서 URL의 Image Download 해보기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 라즈베리파이와 PHP에서 URL의 Image Download 해보기 입니다.</p><p>개인서버 또는 웹호스팅 또는 라즈베리에 웹서버를 설치가 되신상태로 준비를 해주시기 바랍니다.</p><p>웹페이지를 오픈하실 상태가 되셨으면</p><p>그럼 개발을 하기위해서  Visual Studio Code(비주얼 스튜디오 코드)를 실행해 주시기 바랍니다.</p><p><img src="001-3.png" alt="image"></p><p>Visual Studio Code(비주얼 스튜디오 코드)를 실행을 하셨으면</p><p>파일명을 url_image_download1.php 로 지정하시고 파일을 추가해 주시기 바랍니다.</p><p><img src="002-3.png" alt="image"></p><p>코딩에 들어가기 앞서 우선 PHP의 설정을 확인해 주시기 바랍니다.</p><p>우선 라즈베리파이를 VNC로 접속을 하시고 터미널을 실행해 주세요.</p><p><img src="003-2.png" alt="image"></p><p>아래의 명령어를 입력해주시고 PHP설정을 확인 하실수 있습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/php/7.3/fpm/php.ini</span><br></pre></td></tr></table></figure><p><img src="004-2.png" alt="image"></p><p>설정파일이 열리면 852라인까지 이동을 합니다.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 852라인에 allow_url_fopen의 ; 주석처리를 제거해 주세요.</span><br><span class="line"># 아래처럼 해주셔야만 PHP가 외부 URL의 데이터를 가져오실수가 있습니다.</span><br><span class="line"># 주석이 되어 있거나 Off상태로는 함수가 정상작동을 하지 않습니다.</span><br><span class="line">allow_url_fopen = On</span><br></pre></td></tr></table></figure><p><img src="005-1.png" alt="image"></p><p>설정확인이 되셨으면 vi 에디터를 종료해 주시기 바랍니다.</p><p>그럼 다시 Visual Studio Code(비주얼 스튜디오 코드)로 돌아오셔서</p><p>file_get_contents 함수를 이용해서 아래의 URL의 이미지를 가져오기를 하겠습니다.</p><p><img src="006-1.png" alt="image"></p><p>비주얼 스튜디오 코드에서 아래의 코드를 작성해 주시기 바랍니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$img</span> = file_get_contents(<span class="string">&quot;https://pbs.twimg.com/media/DevPZktUYAETTGg.jpg&quot;</span>);</span><br><span class="line">    <span class="variable">$fp</span> = fopen(<span class="string">&quot;./001.jpg&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">    fwrite(<span class="variable">$fp</span>, <span class="variable">$img</span>);</span><br><span class="line">    fclose(<span class="variable">$fp</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="007-1-e1591275930939.png" alt="image"></p><p>저장하신 파일을 웹서버의 루트 경로에 올려주시기 바랍니다.</p><p><img src="008-1.png" alt="image"></p><p>웹브라우져를 실행하신후 http://아이피주소 또는 도메인/url_image_download1.php 를 입력해 주세요.</p><p><img src="010-1.png" alt="image"></p><p>OK가 출력이 되셨으면 파일이 저장이 되었는지 확인해 보도록 하겠습니다.</p><p><img src="011-1.png" alt="image"></p><p>001.jpg 파일명을 다운로드가 된것을 확인이 되었습니다.</p><p>이번에는 fopen 함수를 이용한 다운로드를 해보도록 하겠습니다.</p><p>fopen도 file_get_contents와 사용법이 비슷해서 크게 어렵지 않게 사용하실수 있습니다.</p><p>그러면 비주얼 스튜디오를 실행을 해주시고 파일명을 url_image_download2.php 로 지정하시고 파일을 추가해 주시기 바랍니다.</p><p>아래와 같이 코딩을 해주시기 바랍니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$rf</span> = fopen(<span class="string">&quot;https://i.pinimg.com/474x/e7/6b/2e/e76b2ed4803bbe7c5f82d6967acb3298.jpg&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="variable">$fp</span> = fopen(<span class="string">&quot;./002.jpg&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!feof(<span class="variable">$rf</span>)) &#123;</span><br><span class="line">        fwrite(<span class="variable">$fp</span>, fread(<span class="variable">$rf</span>, <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fclose(<span class="variable">$rf</span>);</span><br><span class="line">    fclose(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="012-1.png" alt="image"></p><p>이번에 다운로드할 이미지는 아래와 같습니다.</p><p><img src="013-2.png" alt="image"></p><p>작성하신 소스파일을 웹서버에 올려주시기 바랍니다.</p><p><img src="014-1.png" alt="image"></p><p>파일을 올려주셨으면 이제 웹브라우져를 실행하신후 http://아이피주소 또는 도메인/url_image_download2.php 를 입력해 주세요.</p><p><img src="016-1.png" alt="image"></p><p>002.jpg파일명으로 정상적으로 다운로드 된것을 확인하실수 있습니다.</p><p>이렇게 해서 PHP를 이용한 외부 사이트의 이미지를 다운로드 하는 방법을 알아보았습니다만</p><p>만일 allow_url_fopen를 수정하기 어려우신 경우 다른방법으로 다운로드 하는 방법을 알려드리도록 하겠습니다.</p><p>이방법은 소스가 조금 길어지기는 하지만 거의 확실하게 받으실수 있겠습니다.</p><p>그러면 비주얼 스튜디오를 실행을 해주시고 파일명을 url_image_download3.php 로 지정하시고 파일을 추가해 주시기 바랍니다.</p><p>아래와 같이 코딩을 해주시기 바랍니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$fp</span> = fopen(<span class="string">&quot;./003.jpg&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="variable">$ch</span> = curl_init();</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="string">&quot;https://pbs.twimg.com/media/ETcYpHbUEAIs9tF.jpg&quot;</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_USERAGENT, <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36&quot;</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_FILE, <span class="variable">$fp</span>);</span><br><span class="line">    curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">    fclose(<span class="variable">$fp</span>);</span><br><span class="line">    curl_close(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="017-1.png" alt="image"></p><p>이번에 다운로드할 이미지는 아래와 같습니다.</p><p><img src="018-1.png" alt="image"></p><p>작성하신 소스파일을 웹서버에 올려주시기 바랍니다.</p><p><img src="019-1.png" alt="image"></p><p>파일을 올려주셨으면 이제 웹브라우져를 실행하신후 http://아이피주소 또는 도메인/url_image_download3.php 를 입력해 주세요.</p><p><img src="020-1.png" alt="image"></p><p>003.jpg파일명으로 정상적으로 다운로드 된것을 확인하실수 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/PHP/">PHP</category>
      
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/tags/download/">download</category>
      
      <category domain="https://playneko.github.io/tags/http/">http</category>
      
      <category domain="https://playneko.github.io/tags/image/">image</category>
      
      <category domain="https://playneko.github.io/tags/Image-Download/">Image Download</category>
      
      <category domain="https://playneko.github.io/tags/%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C/">소스코드</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%ED%8E%98%EC%9D%B4%EC%A7%80/">웹페이지</category>
      
      <category domain="https://playneko.github.io/tags/%ED%81%AC%EB%A1%A4%EB%A7%81/">크롤링</category>
      
      
      <comments>https://playneko.github.io/2020/06/05/rasberry-pi/rasberry-pi-018/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에서 NPM (Nginx + PHP + MariaDB) 설치하기</title>
      <link>https://playneko.github.io/2020/06/04/rasberry-pi/rasberry-pi-017/</link>
      <guid>https://playneko.github.io/2020/06/04/rasberry-pi/rasberry-pi-017/</guid>
      <pubDate>Wed, 03 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 또는 리눅스에서 NPM (Nginx + PHP + MariaDB) 설치하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이 또는 리눅스에서 NPM (Nginx + PHP + MariaDB) 설치하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-또는-리눅스에서-NPM-Nginx-PHP-MariaDB-설치하기"><a href="#라즈베리파이-또는-리눅스에서-NPM-Nginx-PHP-MariaDB-설치하기" class="headerlink" title="라즈베리파이 또는 리눅스에서 NPM (Nginx + PHP + MariaDB) 설치하기"></a>라즈베리파이 또는 리눅스에서 NPM (Nginx + PHP + MariaDB) 설치하기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 라즈베리파이 또는 리눅스에서 NPM (Nginx + PHP + MariaDB) 설치하기 입니다.</p><p>그리고 저는 라즈베리파이를 이용해서 설치를 하겠습니다.</p><p>많은 분들이 저렴한 가격으로 홈 웹서버를 구축할수 있게 따라만 하시면</p><p>누구나 다 웹서버를 구축하실수 있습니다.</p><p>우선 준비물이 필요 합니다.</p><blockquote><h4 id="준비물"><a href="#준비물" class="headerlink" title="준비물"></a>준비물</h4><p>라즈베리파이 가장싼 제로도 가능 합니다.<br>저는 이번에 660엔(약 7천원)짜리 Raspberry Pi Zero v1.3을 이용해서 설명을 드립니다.</p></blockquote><p>라즈베리파이 제로 1.3에 대해 간략하게 설명을 드리면</p><p>우선 싱글코어에 512램 그리고 끝입니다. 모니터에 연결을 할수있게 HDMI는 지원합니다.</p><p>블루투스나 와이파이 유선랜이 기본적으로 제공되지 않기때문에 별도 모듈을 구매 하셔야만 합니다.</p><p>거기다 GPIO를 이용하실려면 별도의 핀소켓도 구매하신후 납땜을 해주셔야만 합니다.</p><p><img src="001-2-e1591186183705.png" alt="image"></p><p><img src="001_1.png" alt="image"></p><p>싱글코어이다보니 초기 세팅에 시간이 많이 소요가 되었습니다.</p><p>테스트용으로 사용하실게 아니면 별로 추천을 안드리겠습니다.</p><p>그래서 이제부터 NPM 구축하는 방법을 설명해 드리도록 하겠습니다.</p><p>우선 VNC로 라즈베리파이에 접속을 해주시고 터미널을 실행해 주세요.</p><p><img src="002-2.png" alt="image"></p><p>터미널을 실행이 되셨으면 아래의 명령어를 차례대로 입력해 주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt update</span><br><span class="line">$ sudo apt upgrade</span><br><span class="line">$ sudo apt dist-upgrade</span><br></pre></td></tr></table></figure><p><img src="004-1.png" alt="image"></p><p><img src="005.png" alt="image"></p><p><img src="006.png" alt="image"></p><p>이렇게 해서 APT를 최신상태로 갱신이 완료 되었습니다.</p><p>만일 최신버전이 있을경우가 있기때문에 APT로 프로그램을 설치하실 경우 우선 최신으로 갱신을 해주시기 바랍니다.</p><p>이제 본격적으로 Nginx를 설치를 하도록 하겠습니다. 아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install nginx</span><br><span class="line">$ sudo service nginx start</span><br></pre></td></tr></table></figure><p><img src="007.png" alt="image"></p><p>Nginx설치가 완료 되었습니다.</p><p>Nginx서버를 시작만 하면 됩니다.</p><p><img src="008.png" alt="image"></p><p>처음 Nginx를 설치하시면 웹사이트 디렉토리가 /var/www/html 로 설정되어 있습니다.</p><p>그래서 그대로 사용하실분은 설정을 하지 않으셔도 됩니다만</p><p>만일 삼바를 설치하신 분들은 삼바 디렉토리 설정을 별도로 하지 않으신경우 /var/www/html 경로까지 권한문제로 이동을 하실수 없습니다.</p><p>그렇기에 기본 디렉토리를 변경해 주도록 하겠습니다.</p><p>설정을 변경하기 전에 www 폴더를 만들어 주도록 하겠습니다.</p><p>저는 /home밑에 www 폴더를 만들겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mkdir www</span><br></pre></td></tr></table></figure><p><img src="009.png" alt="image"></p><p>폴더를 만드시고 리스트를 출력하시게 되면 폴더의 사용자와 그룹이 root로 되어있는것을 보실수 있습니다.</p><p>root를 pi계정이 읽고 쓰기가 가능하도록 권한자를 변경하도록 하겠습니다.</p><p><img src="010.png" alt="image"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chown pi:pi ./www</span><br></pre></td></tr></table></figure><p>명령어를 입력하시면 폴더의 권한자와 그룹이 pi로 변경되신것을 확인 하실수 있습니다.</p><p><img src="012.png" alt="image"></p><p>이제 Nginx의 설정을 변경하도록 하겠습니다.</p><p>그전에 www폴더까지의 절대패스를 확인 합니다.</p><p><img src="013-1.png" alt="image"></p><p>아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure><p><img src="014.png" alt="image"></p><p><img src="015.png" alt="image"></p><p>중간쯤 스크롤을 내리다 보시면</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root /var/www/html; 부분이 보이게 됩니다. 이부분을 아래와 같이 입력해 주세요.</span><br><span class="line"></span><br><span class="line"># root /var/www/html;</span><br><span class="line">root /home/www;</span><br><span class="line"></span><br><span class="line">PHP도 설치를 해야하기때문에 밑에쪽 줄부분도 같이 수정을 해주세요.</span><br><span class="line">index index.html index.htm index.nginx-debian.html index.php;</span><br><span class="line"></span><br><span class="line">작성이 다 끝나셨으면 :<span class="keyword">wq</span> 를 하시고 저장장과 동시에 빠져나오기</span><br></pre></td></tr></table></figure><p><img src="016.png" alt="image"></p><p>저장을 하시고 vi에디터에서 나오시면 되겠습니다.</p><p>설정정보를 반영을 해야하기때문에 Nginx서버를 재기동 합니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service nginx restart</span><br></pre></td></tr></table></figure><p><img src="017.png" alt="image"></p><p>일단 Nginx서버가 제대로 설치가 되었는지 일단 라즈베리파이 아이피를 브라우저에 입력해서 접속을 해보시면</p><p>기본페이지를 올려둔게 없는 관계로 아래와 같이 표시가 되면 제대로 된것 입니다.</p><p><img src="018-e1591189523396.png" alt="image"></p><p>이제부터 PHP를 설치를 하도록 하겠습니다.</p><p>아래의 명령어를 차례대로 입력해 주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 설치전에 갱신을 한번 합니다. -y는 예/아니오를</span></span><br><span class="line"><span class="comment"># 물어보는게 나올경우 자동으로 Yes로 선택해 줍니다.</span></span><br><span class="line">$ sudo apt-get update -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># PHP가 7버전대에서 가장 최신버전의 파일 리스트를</span></span><br><span class="line"><span class="comment"># 모조리 가져와서 보여주는 명령어 입니다.</span></span><br><span class="line">$ sudo apt list php7*</span><br><span class="line"></span><br><span class="line"><span class="comment"># PHP설치시 가장 많이 사용하는 패키지를 한꺼번에 설치하도록 하겠습니다.</span></span><br><span class="line">$ sudo apt-get install php7.3 php7.3-cli php7.3-common php7.3-fpm php7.3-gd php7.3-json php7.3-mysql php7.3-readline -y</span><br></pre></td></tr></table></figure><p><img src="019.png" alt="image"></p><p><img src="020.png" alt="image"></p><p><img src="021.png" alt="image"></p><p><img src="022.png" alt="image"></p><p>이렇게 해서 PHP설치가 완료 되었습니다만 Nginx에서 추가설정을 하셔야만 합니다.</p><p>아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure><p><img src="023.png" alt="image"></p><p><img src="024.png" alt="image"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php$ 부분이 나오는곳이 보이시면 아래와 같이 #을 제거를 해주시기 바랍니다.</span><br><span class="line"></span><br><span class="line">추가로 location ~ /\.ht 부분의 #도 같이 제거를 해주시기 바랍니다.</span><br></pre></td></tr></table></figure><p><img src="025.png" alt="image"></p><p>주석을 다 제거를 해주셨으면 아래와 같이 :wq 명령어를 입력후 저장후 빠져나오시기 바랍니다.</p><p><img src="026.png" alt="image"></p><p>아래의 명령어를 입력하여 Nginx서버를 재기동을 합니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service nginx restart</span><br></pre></td></tr></table></figure><p>이제 PHP설치와 기본설정이 끝났기에 이젠 PHP가 정상설치 되었는지 확인해 보도록 하겠습니다.</p><p>아래의 명령어를 차례대로 입력해 주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 각자 설정하신 루트 디렉토리를 이동해 주세요.</span></span><br><span class="line">$ <span class="built_in">cd</span> /home/www</span><br><span class="line"></span><br><span class="line"><span class="comment"># 간단하게 PHP 정보를 출력해줄 페이지를 하나 작성 합니다.</span></span><br><span class="line">$ vi info.php</span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">vi</span> 에디터가 열리시면 아래의 문장을 입력해 주세요.</span><br><span class="line">&lt;?php phpinfo(); ?&gt;</span><br><span class="line"></span><br><span class="line"># 저장후 나옵니다.</span><br><span class="line">:<span class="keyword">wq</span></span><br></pre></td></tr></table></figure><p><img src="028.png" alt="image"></p><p><img src="029.png" alt="image"></p><p>이제 다시 브라우져를 여시고 라즈베리파이 아이피 + /info.php를 브라우저에 입력해서 접속을 해주시기 바랍니다.</p><p>아래와 같은 화면이 나오시면 PHP가 정상설치 되셨습니다.</p><p><img src="030-972x1024.png" alt="image"></p><p>이젠 MariaDB를 설치하도록 하겠습니다.</p><p>원래 MySQL이었지만 오라클이 MySQL을 인수하면서 MySQL개발하신 분께서 기존 엔진을 가지고</p><p>새로만든 DB가 MariaDB입니다.</p><p>그럼 아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install mariadb-server</span><br><span class="line"></span><br><span class="line"><span class="comment">#설치 완료후 mariaDB 암호 재설정하기</span></span><br><span class="line">$ sudo mysql -uroot mysql</span><br><span class="line">update user <span class="built_in">set</span> password=password(<span class="string">&#x27;새암호입력&#x27;</span>) <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">flush privileges;</span><br><span class="line">quit;</span><br></pre></td></tr></table></figure><p><img src="031.png" alt="image"></p><p><img src="033_1.png" alt="image"></p><p>여기까지가 NPM 구축하기가 끝났습니다.</p><p>덤으로 phpMyAdmin을 설치해서 디비를 좀더 편하게 관리할수 있도록 하겠습니다.</p><p>아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install phpmyadmin</span><br></pre></td></tr></table></figure><p><img src="034.png" alt="image"></p><p>설치하는 도중에 갑자기 이런 화면이 나오게 되시면 일단 둘다 설치한게 없기에 그냥 넘기시면 됩니다.</p><p><img src="035_1.png" alt="image"></p><p>아래와 같은 화면이 다시 등장하시면 여기서도 아니오를 해주시기 바랍니다.</p><p><img src="036.png" alt="image"></p><p>phpMyAdmin설치가 끝났습니다.</p><p><img src="037.png" alt="image"></p><p>그럼 아래의 명령어를 입력해서 홈페이지의 루트 디렉토리에서 phpMyAdmin 페이지에 접속할수 있게 해줍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /home/www 디렉토리에 심볼릭 링크로 phpMyAdmin을 연결시킵니다.</span></span><br><span class="line">$ sudo ln -s /usr/share/phpmyadmin /home/www</span><br><span class="line">$ ls -al</span><br></pre></td></tr></table></figure><p><img src="038.png" alt="image"></p><p>심볼릭 링크가 정상적으로 연결된것을 확인 하실수 있습니다.</p><p>이제 phpMyAdmin을 정상으로 뜨는지 해보도록 하겠습니다.</p><p>브라우저를 실행하신후 http://아이피주소/phpmyadmin 주소를 입력해 주세요.</p><p><img src="039-972x1024.png" alt="image"></p><p>정상적으로 phpMyAdmin이 열린것을 확인 되었습니다.</p><p>이것으로 NPM (Nginx + PHP + MariaDB) 설치하기가 완료 되었습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Linux/">Linux</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Linux/PHP/">PHP</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/server/">server</category>
      
      <category domain="https://playneko.github.io/tags/nginx/">nginx</category>
      
      <category domain="https://playneko.github.io/tags/link/">link</category>
      
      <category domain="https://playneko.github.io/tags/apache/">apache</category>
      
      <category domain="https://playneko.github.io/tags/apt/">apt</category>
      
      <category domain="https://playneko.github.io/tags/chown/">chown</category>
      
      <category domain="https://playneko.github.io/tags/MariaDB/">MariaDB</category>
      
      <category domain="https://playneko.github.io/tags/mkdir/">mkdir</category>
      
      <category domain="https://playneko.github.io/tags/mysql/">mysql</category>
      
      <category domain="https://playneko.github.io/tags/NPM/">NPM</category>
      
      <category domain="https://playneko.github.io/tags/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/tags/phpinfo/">phpinfo</category>
      
      <category domain="https://playneko.github.io/tags/phpMyAdmin/">phpMyAdmin</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/sites/">sites</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8B%AC%EB%B3%BC%EB%A6%AD-%EB%A7%81%ED%81%AC/">심볼릭 링크</category>
      
      
      <comments>https://playneko.github.io/2020/06/04/rasberry-pi/rasberry-pi-017/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA에서 웹페이지 이미지 URL 다운로드후 저장하기</title>
      <link>https://playneko.github.io/2020/06/03/java/java-004/</link>
      <guid>https://playneko.github.io/2020/06/03/java/java-004/</guid>
      <pubDate>Tue, 02 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;JAVA에서 웹페이지 이미지 URL 다운로드후 저장하기&lt;br&gt;이번에 소개할 내용은 JAVA에서 웹페이지 이미지 URL 다운로드후 저장하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="JAVA에서-웹페이지-이미지-URL-다운로드후-저장하기"><a href="#JAVA에서-웹페이지-이미지-URL-다운로드후-저장하기" class="headerlink" title="JAVA에서 웹페이지 이미지 URL 다운로드후 저장하기"></a>JAVA에서 웹페이지 이미지 URL 다운로드후 저장하기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 JAVA에서 웹페이지 이미지 URL 다운로드후 저장하기 입니다.</p><p>웹페이지 크롤링 프로그램을 개발하시거나</p><p>특정 URL을 입력하면 해당 URL의 이미지를 자동으로 다운로드후</p><p>PC 또는 서버에 저장이 되게끔 하는것으로 사람이 일일이 수작업으로 다운로드하지 않고</p><p>자동으로 다운로드를 할수있는 기능을 개발하는게 가능합니다.</p><p>소스코드를 참고를 하셔서 좀더 응용을 하시게 되면 자신만의 멋진 프로그램으로 개발하는게 가능하게 될것입니다.</p><p>자바개발은 이클립스로 개발을 해야만 사람들이 많이 알면서 편하지만 이번에는 소스코드만 공개를 하는것이기에</p><p>좀더 자세한 내용에 대해서는 이클립스 환경에 대한 소개후 진행하도록 하겠습니다.</p><p>그럼 개발을 하기위해 Visual Studio Code(비주얼 스튜디오 코드)를 우선 실행을 해주시기 바랍니다.</p><p><img src="001-1.png" alt="image"></p><p>Visual Studio Code(비주얼 스튜디오 코드)를 실행을 하셨으면</p><p>파일명을 url_image_download.java 으로 지정하시고 파일을 추가해 주시기 바랍니다.</p><p><img src="002-1.png" alt="image"></p><p>그럼 이제 아래의 소스코드를 작성해 주시기 바랍니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetUrlToImage</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 불러올 이미지 URL</span></span><br><span class="line">        String imageUrl = <span class="string">&quot;https://playneko.com/wp-content/uploads/2020/04/cropped-avatarimg_user1.png&quot;</span>;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            getImageUrl(imageUrl);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">          <span class="comment">// 예외처리</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getImageUrl</span><span class="params">(String imageUrl)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        URL url = <span class="keyword">null</span>;</span><br><span class="line">        InputStream in = <span class="keyword">null</span>;</span><br><span class="line">        OutputStream out = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            url = <span class="keyword">new</span> URL(imageUrl);</span><br><span class="line">            in = url.openStream();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 컴퓨터 또는 서버의 저장할 경로(절대패스로 지정해 주세요.)</span></span><br><span class="line">            out = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;C:/images/AkibaTV.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="comment">// 루프를 돌면서 이미지데이터를 읽어들이게 됩니다.</span></span><br><span class="line">                <span class="keyword">int</span> data = in.read();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 데이터값이 -1이면 루프를 종료하고 나오게 됩니다.</span></span><br><span class="line">                <span class="keyword">if</span> (data == -<span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 읽어들인 이미지 데이터값을 컴퓨터 또는 서버공간에 저장하게 됩니다.</span></span><br><span class="line">                out.write(data);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 저장이 끝난후 사용한 객체는 클로즈를 해줍니다.</span></span><br><span class="line">            in.close();</span><br><span class="line">            out.close();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">          <span class="comment">// 예외처리</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 만일 에러가 발생해서 클로즈가 안됐을 가능성이 있기에</span></span><br><span class="line">            <span class="comment">// NULL값을 체크후 클로즈 처리를 합니다.</span></span><br><span class="line">            <span class="keyword">if</span> (in != <span class="keyword">null</span>) &#123;</span><br><span class="line">                in.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (out != <span class="keyword">null</span>) &#123;</span><br><span class="line">                out.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="003-1.png" alt="image"></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Java/">Java</category>
      
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C/">소스코드</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%ED%8E%98%EC%9D%B4%EC%A7%80/">웹페이지</category>
      
      <category domain="https://playneko.github.io/tags/%ED%81%AC%EB%A1%A4%EB%A7%81/">크롤링</category>
      
      <category domain="https://playneko.github.io/tags/Java/">Java</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9E%90%EB%B0%94/">자바</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4/">이클립스</category>
      
      <category domain="https://playneko.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0/">데이터</category>
      
      <category domain="https://playneko.github.io/tags/Code/">Code</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%93%9C/">코드</category>
      
      
      <comments>https://playneko.github.io/2020/06/03/java/java-004/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA에서 JSON데이터 Parsing 처리 방법</title>
      <link>https://playneko.github.io/2020/06/02/java/java-003/</link>
      <guid>https://playneko.github.io/2020/06/02/java/java-003/</guid>
      <pubDate>Mon, 01 Jun 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;JAVA에서 JSON데이터 Parsing 처리 방법&lt;br&gt;이번에 소개할 내용은 요즘 웹페이지를 많이 개발을 하고 있습니다만…&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="JAVA에서-JSON데이터-Parsing-처리-방법"><a href="#JAVA에서-JSON데이터-Parsing-처리-방법" class="headerlink" title="JAVA에서 JSON데이터 Parsing 처리 방법"></a>JAVA에서 JSON데이터 Parsing 처리 방법</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 요즘 웹페이지를 많이 개발을 하고 있습니다만</p><p>jQuery등 사용중에 JSON 데이터로 많이 주고 받고 있을것 입니다.</p><p>그래서 자바로 개발을 하다보면 JSON 데이터를 받았는데 데이터를 파싱처리를 해서</p><p>자바의 변수에 넣고 그걸 사용할수 있도록 하는 JSON 라이브러리를 이용해 파싱처리 방법을 알려드리도록 하겠습니다.</p><p>일단 JSON 파싱에 필요한 라이브러리를 다운로드 하시기 바랍니다.</p><p>요즘 라이브러리가 여러종류가 있습니다만 json-simple을 이용해서 해보도록 하겠습니다.</p><p>아래의 링크에서 라이브러리를 다운로드후 빌드패스에 추가를 해주시기 바랍니다.</p><p><a href="https://code.google.com/archive/p/json-simple/downloads">라이브러리 다운로드</a></p><p>JSON 데이터를 읽어들이고 읽어들인 데이터를 파싱처리해서 JSON 객체에 넣는 소스는 아래와 같습니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.json.simple.JSONArray;</span><br><span class="line"><span class="keyword">import</span> org.json.simple.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.json.simple.parser.JSONParser;</span><br><span class="line"><span class="keyword">import</span> org.json.simple.parser.ParseException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsonParserApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//JSON으로 Parsing 처리할 문자열 데이터</span></span><br><span class="line">        String jsonStr = <span class="string">&quot;&#123;\&quot;lists\&quot;:[&quot;</span></span><br><span class="line">                + <span class="string">&quot;&#123;\&quot;channel\&quot;:\&quot;AkibaTV\&quot;,&quot;</span></span><br><span class="line">                + <span class="string">&quot;\&quot;email\&quot;:\&quot;test@test.com\&quot;,&quot;</span></span><br><span class="line">                + <span class="string">&quot;\&quot;url\&quot;:\&quot;https://playneko.com\&quot;,&quot;</span></span><br><span class="line">                + <span class="string">&quot;\&quot;viewCnt\&quot;:\&quot;999\&quot;&quot;</span></span><br><span class="line">                + <span class="string">&quot;&#125;,&quot;</span></span><br><span class="line">                + <span class="string">&quot;&#123;\&quot;channel\&quot;:\&quot;아키바티비\&quot;,&quot;</span></span><br><span class="line">                + <span class="string">&quot;\&quot;email\&quot;:\&quot;xxxx@test.com\&quot;,&quot;</span></span><br><span class="line">                + <span class="string">&quot;\&quot;url\&quot;:\&quot;https://playneko.com\&quot;,&quot;</span></span><br><span class="line">                + <span class="string">&quot;\&quot;viewCnt\&quot;:\&quot;100\&quot;&quot;</span></span><br><span class="line">                + <span class="string">&quot;&#125;]&#125;&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            JSONParser jsonParser = <span class="keyword">new</span> JSONParser();</span><br><span class="line">            JSONObject jsonObj = (JSONObject) jsonParser.parse(jsonStr);</span><br><span class="line">            JSONArray jsonArray = (JSONArray) jsonObj.get(<span class="string">&quot;lists&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; jsonArray.size(); i++)&#123;</span><br><span class="line">                JSONObject getObj = (JSONObject) jsonArray.get(i);</span><br><span class="line">                System.out.println(<span class="string">&quot;채널명 : &quot;</span> + getObj.get(<span class="string">&quot;channel&quot;</span>));</span><br><span class="line">                System.out.println(<span class="string">&quot;이메일 : &quot;</span> + getObj.get(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">                System.out.println(<span class="string">&quot;사이트 주소 &quot;</span> + getObj.get(<span class="string">&quot;url&quot;</span>));</span><br><span class="line">                System.out.println(<span class="string">&quot;조회수 &quot;</span> + getObj.get(<span class="string">&quot;viewCnt&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Java/">Java</category>
      
      
      <category domain="https://playneko.github.io/tags/Java/">Java</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9E%90%EB%B0%94/">자바</category>
      
      <category domain="https://playneko.github.io/tags/jQuery/">jQuery</category>
      
      <category domain="https://playneko.github.io/tags/library/">library</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC/">라이브러리</category>
      
      <category domain="https://playneko.github.io/tags/JSON/">JSON</category>
      
      <category domain="https://playneko.github.io/tags/Object/">Object</category>
      
      <category domain="https://playneko.github.io/tags/Data/">Data</category>
      
      <category domain="https://playneko.github.io/tags/json-simple/">json-simple</category>
      
      <category domain="https://playneko.github.io/tags/Parsing/">Parsing</category>
      
      <category domain="https://playneko.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0/">데이터</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8C%8C%EC%8B%B1/">파싱</category>
      
      
      <comments>https://playneko.github.io/2020/06/02/java/java-003/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이와 Python으로 Servo Motor 제어하기</title>
      <link>https://playneko.github.io/2020/06/01/rasberry-pi/rasberry-pi-016/</link>
      <guid>https://playneko.github.io/2020/06/01/rasberry-pi/rasberry-pi-016/</guid>
      <pubDate>Sun, 31 May 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에 GPIO와 Python으로 Servo Motor 제어하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이에 GPIO를 파이선을 이용해서 Servo Motor(서보모터) 제어하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에-GPIO와-Python으로-Servo-Motor-제어하기"><a href="#라즈베리파이에-GPIO와-Python으로-Servo-Motor-제어하기" class="headerlink" title="라즈베리파이에 GPIO와 Python으로 Servo Motor 제어하기"></a>라즈베리파이에 GPIO와 Python으로 Servo Motor 제어하기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 라즈베리파이에 GPIO를 파이선을 이용해서 Servo Motor(서보모터) 제어하기 입니다.</p><blockquote><h5 id="우선-준비물이-필요-합니다"><a href="#우선-준비물이-필요-합니다" class="headerlink" title="우선 준비물이 필요 합니다."></a>우선 준비물이 필요 합니다.</h5><p>라즈베리파이 본체 OS설치와 Python설치가 끝난 상태<br>저의 경우는 라즈베리파이 제로를 이용해서 테스트를 했습니다.</p><ul><li>Servo Motor(서보모터)</li><li>점퍼와이어 암,수가 있는걸로 합니다. (3줄필요)</li></ul></blockquote><p>이렇게 준비물이 갖춰져 있는지 확인 하시고 본격적으로 Servo Motor(서보모터) 제어하기를 하겠습니다.</p><p><img src="001-1.jpg" alt="image"></p><p>서보모터를 구매하시면 어떤게 시그널이고 어떤게 전압이고 어떤게 GND인지 구분을하기 어렵습니다.</p><p>가장 알기 쉬운것은 무조건 빨간색 또는 가운데선이 전압을 넣어주는 선 입니다.</p><p>제가 사용하는 서보모터의 색깔별 구성은 아래의 표를 참고해 주세요.</p><table><thead><tr><th align="center">Color</th><th align="center">Pi GPIO Pin</th><th align="center">Notes</th></tr></thead><tbody><tr><td align="center">White</td><td align="center">12</td><td align="center">18(PWM)</td></tr><tr><td align="center">RED</td><td align="center">2</td><td align="center">5V</td></tr><tr><td align="center">Black</td><td align="center">14</td><td align="center">GND</td></tr></tbody></table><p>서보모터를 사용하실때는 전압이 5V에 점퍼를 연결하는걸 추천드립니다.</p><p>3.3V로도 가능은 하지만 회전력과 파워가 한참 떨어집니다.</p><p>GPIO핀에 대한 자세한 내용을 원하시는 분은 아래의 링크를 들어가셔서 참고해 주세요.</p><p><a href="https://playneko.github.io/2020/05/28/rasberry-pi-010/">라즈베리파이에서 GPIO를 사용하기전 알아두어야 할 사항</a></p><p>서보모터를 구동하기 위해선 우선 코딩을 하셔야만 합니다.</p><p>이번부터는 메모장으로 코딩을 하지않고 Visual Studio Code(비주얼 스튜디오 코드)를 이용해서 하겠습니다.</p><p>설치가 안되어 있으신 분들은 미리 설치를 해주시기 바랍니다.</p><p><img src="001_1-1.png" alt="image"></p><p>실행하시고 기존에 사용했던 작업폴더를 추가해 주시기 바랍니다.</p><p>그리고 서보모터 관련해서 파일명을 gpio_servo_motor.py로 파일을 하나 추가해 주시기 바랍니다.</p><p>간단한 예제로 서보모터가 잘 돌아가는지 확인하는 코드를 작성해 보도록 하겠습니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;AkibaTV Servo Motor Test&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># White : Pin 12 : 18(PWM)</span></span><br><span class="line"><span class="comment"># RED   : Pin 2  : 5v</span></span><br><span class="line"><span class="comment"># Black : Pin 14 : GND</span></span><br><span class="line">GPIO.setmode(GPIO.BCM)</span><br><span class="line">GPIO.setup(<span class="number">18</span>, GPIO.OUT)</span><br><span class="line"></span><br><span class="line">phz = GPIO.PWM(<span class="number">18</span>, <span class="number">50</span>) <span class="comment"># 18Pin, 50hz</span></span><br><span class="line">phz.start(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 루프가 3번을 반복하면서 모터를 돌리게끔 설정</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">3</span>):</span><br><span class="line">    print(<span class="string">&quot;10&quot;</span>);</span><br><span class="line">    phz.ChangeDutyCycle(<span class="number">10</span>)</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">&quot;20.5&quot;</span>);</span><br><span class="line">    phz.ChangeDutyCycle(<span class="number">20.5</span>)</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">&quot;5&quot;</span>);</span><br><span class="line">    phz.ChangeDutyCycle(<span class="number">5</span>)</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">&quot;30&quot;</span>);</span><br><span class="line">    phz.ChangeDutyCycle(<span class="number">30</span>)</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">&quot;7.5&quot;</span>);</span><br><span class="line">    phz.ChangeDutyCycle(<span class="number">7.5</span>)</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;AkibaTV Servo Motor End&quot;</span>)</span><br><span class="line">GPIO.cleanup()</span><br></pre></td></tr></table></figure><p><img src="002_2.png" alt="image"></p><p>3번의 루프가 돌아가면서 2초마다 5번의 지정된 수치만큼 회전을 하게되는 코딩을 해보았습니다.</p><p>실제로 동작을 확인하기 위해서 라즈베리파이에 삼바를 통해 적당한 위치에 소스파일을 넣어주시기 바랍니다.</p><p>라즈베리파이를 VNC로 접속후 소스파일을 넣어주신 경로까지 이동해 주시기 바랍니다.</p><p><img src="003-11.png" alt="image"></p><p>위와같이 작성한 서보모터 파이선 소스파일이 있는것을 확인하실수 있습니다.</p><p>이제 이것을 실행을 해보도록 하겠습니다.</p><p>파이선을 2.x버전대를 사용하시는 분들은 아래의 명령어를 입력해 주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo python ./gpio_servo_motor.py</span><br></pre></td></tr></table></figure><p>파이선을 3.x버전대를 사용하시는 분들은 아래의 명령어를 입력해 주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo python3 ./gpio_servo_motor.py</span><br></pre></td></tr></table></figure><p>저의경우는 파이선 3.x버전대를 사용하기때문에 3버전대 명령어로 진행 하겠습니다.</p><p><img src="004-9.png" alt="image"></p><p><a href="https://youtu.be/QiT1bXrTlro"><img src="http://img.youtube.com/vi/QiT1bXrTlro/0.jpg" alt="AkibaTV"></a></p><p>실행을 하게되면 3번의 루프가 돌면서 서보모터가 회전된것을 보시게 되셨을겁니다.</p><p>이번에는 랜덤으로 무한루프를 돌려서 서보모터를 회전시키는 예제를 해보도록 하겠습니다.</p><p>Visual Studio Code(비주얼 스튜디오 코드)에서 파일명을 gpio_servo_motor2.py로 해서 추가를 해주시기 바랍니다.</p><p>추가를 하셨으면 아래와 같이 소스코드를 작성해 주시기 바랍니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;Servo Motor Test&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;Stop is Keyboard Ctrl + C&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># White : Pin 12 : 18(PWM)</span></span><br><span class="line"><span class="comment"># RED   : Pin 2  : 5v</span></span><br><span class="line"><span class="comment"># Black : Pin 14 : GND</span></span><br><span class="line">GPIO.setmode(GPIO.BCM)</span><br><span class="line">GPIO.setup(<span class="number">18</span>, GPIO.OUT)</span><br><span class="line"></span><br><span class="line">phz = GPIO.PWM(<span class="number">18</span>, <span class="number">100</span>)</span><br><span class="line">phz.start(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 0부터 180까지의 랜덤숫자</span></span><br><span class="line">    angle = random.randrange(<span class="number">0</span>, <span class="number">180</span>)</span><br><span class="line">    duty = <span class="built_in">float</span>(angle) / <span class="number">10.0</span> + <span class="number">2.5</span></span><br><span class="line">    phz.ChangeDutyCycle(duty)</span><br><span class="line">    time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;Servo Motor End&quot;</span>)</span><br><span class="line">GPIO.cleanup()</span><br></pre></td></tr></table></figure><p><img src="005-9.png" alt="image"></p><p>작성이 되셨으면 소스파일을 라즈베리파이에 배치를 해주시기 바랍니다.</p><p><img src="006-8.png" alt="image"></p><p>파이선을 2.x버전대를 사용하시는 분들은 아래의 명령어를 입력해 주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo python ./gpio_servo_motor2.py</span><br></pre></td></tr></table></figure><p>파이선을 3.x버전대를 사용하시는 분들은 아래의 명령어를 입력해 주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo python3 ./gpio_servo_motor2.py</span><br></pre></td></tr></table></figure><p>명령어를 치시고 실행을 하시게 되면 무한반복으로 서보모터가 돌아가는것을 확인 하실수 있습니다.</p><p>프로그램을 도중에 멈추시기 위해선 Ctrl + C키를 눌러주시면 프로그램이 강제 종료가 됩니다.</p><p><img src="007-8.png" alt="image"></p><p><a href="https://youtu.be/gyUVgh5Rc4g"><img src="http://img.youtube.com/vi/gyUVgh5Rc4g/0.jpg" alt="AkibaTV"></a></p><p>이렇게해서 라즈베리파이에서 서보모터 제어하기를 해보았습니다.</p><p>서보모터를 좀더 응용을 하시게 되면 여러가지 제어하는 기술을 만드실수 있게 되겠습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Python/">Python</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/Servo-Motor/">Servo Motor</category>
      
      <category domain="https://playneko.github.io/tags/GPIO/">GPIO</category>
      
      <category domain="https://playneko.github.io/tags/Python/">Python</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/%EC%84%9C%EB%B3%B4%EB%AA%A8%ED%84%B0/">서보모터</category>
      
      
      <comments>https://playneko.github.io/2020/06/01/rasberry-pi/rasberry-pi-016/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 파이썬 기본버전을 최신버전으로 변경하기</title>
      <link>https://playneko.github.io/2020/05/31/rasberry-pi/rasberry-pi-015/</link>
      <guid>https://playneko.github.io/2020/05/31/rasberry-pi/rasberry-pi-015/</guid>
      <pubDate>Sat, 30 May 2020 17:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 파이썬 기본버전을 최신버전으로 변경하기&lt;br&gt;이번에 소개할 내용은 라즈베리파이를 설치후 파이썬을 설치했습니다만….&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-파이썬-기본버전을-최신버전으로-변경하기"><a href="#라즈베리파이-파이썬-기본버전을-최신버전으로-변경하기" class="headerlink" title="라즈베리파이 파이썬 기본버전을 최신버전으로 변경하기"></a>라즈베리파이 파이썬 기본버전을 최신버전으로 변경하기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 라즈베리파이를 설치후 파이썬을 설치했습니다만</p><p>최신버전을 사용하지 않고 기본버전 2.x버전대를 사용하게 되는것을 알수가 있습니다.</p><p>그래서 기본버전대에서 최신버전인 3.x버전으로 변경하는 방법을 소개해 드리도록 하겠습니다.</p><blockquote><h5 id="주의사항"><a href="#주의사항" class="headerlink" title="주의사항"></a>주의사항</h5><p>아래의 방법은 꼭 필요하신 분들에게만 추천 합니다.<br>apt-get에서 최신버전 업데이트를 할경우 여러가지 에러나 문제점이 발생할 가능성이 있습니다.</p></blockquote><p>우선 라즈베리파이를 VNC를 이용해서 접속후 터미널을 실행해 주세요.</p><p><img src="001-11.png" alt="image"></p><p>아래의 명령어를 입력해서 파이선 버전을 확인 합니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python --version</span><br></pre></td></tr></table></figure><p>아래와 같이 2.x버전대가 출력되는것을 알수가 있습니다.</p><p><img src="002-10.png" alt="image"></p><p>아래의 명령어를 입력하시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /usr/bin</span><br></pre></td></tr></table></figure><p><img src="003-10.png" alt="image"></p><p>최신버전의 파이썬이 설치가 되어있는지 확인을 위해서 아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -al python3*</span><br></pre></td></tr></table></figure><p><img src="004-8.png" alt="image"></p><p><img src="005-8.png" alt="image"></p><p>설치되어있는 3버전대의 파이썬이 있는것을 확인하실수 있습니다.</p><p>이젠 python3을 python으로 변경을 할것입니다.</p><p>나는 변경하지 않고 그냥사용하실 분들은 파이썬을 실행하실때 python이 아닌 python3을 입력해서</p><p>사용하셔도 되지만 깜빡하고 3을 빼먹는 경우가 있기때문에 재설정을 해주겠습니다.</p><p>이때 기존의 파이썬 링크를 3버전대의 링크로 재설정을 하기위해선 심볼릭링크란 명령어를 사용하게 됩니다.</p><p>심볼릭링크는 유닉스,리눅스 시스템에서 사용하는것으로 윈도우에서 쇼트컷(바로가기)와 동일한 기능입니다.</p><p>아래의 명령어를 콘솔에 입력해 주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ls -sf /usr/bin/python3.7 /usr/bin/python</span><br></pre></td></tr></table></figure><p><img src="006-7.png" alt="image"></p><p>실행을 하시면 아래와 같이 나오게 됩니다.</p><p><img src="007-7.png" alt="image"></p><p>그럼 이제 버전이 제대로 설정이 되었는지 확인을 해봐야 합니다.</p><p>아래의 명령어를 입력해서 2.x버전대에서 3.x버전대로 변경이 되었는지 확인해 보시면 되겠습니다.</p><p><a href="https://www.python.org/">파이썬 공식 홈페이지</a></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Python/">Python</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/Python/">Python</category>
      
      <category domain="https://playneko.github.io/tags/link/">link</category>
      
      <category domain="https://playneko.github.io/tags/ln/">ln</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8B%AC%EB%B3%BC%EB%A6%AD%EB%A7%81%ED%81%AC/">심볼릭링크</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      
      <comments>https://playneko.github.io/2020/05/31/rasberry-pi/rasberry-pi-015/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에 GPIO 파이썬을 이용해 OLED화면 글자출력</title>
      <link>https://playneko.github.io/2020/05/31/rasberry-pi/rasberry-pi-014/</link>
      <guid>https://playneko.github.io/2020/05/31/rasberry-pi/rasberry-pi-014/</guid>
      <pubDate>Sat, 30 May 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에 GPIO와 파이선을 이용해서 OLED화면에 글자 출력&lt;br&gt;이번에 소개할 내용은 라즈베리파이에 GPIO를 이용해서 OLED화면에 글자나 그림을 출력하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에-GPIO와-파이선을-이용해서-OLED화면에-글자-출력"><a href="#라즈베리파이에-GPIO와-파이선을-이용해서-OLED화면에-글자-출력" class="headerlink" title="라즈베리파이에 GPIO와 파이선을 이용해서 OLED화면에 글자 출력"></a>라즈베리파이에 GPIO와 파이선을 이용해서 OLED화면에 글자 출력</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 라즈베리파이에 GPIO를 이용해서 OLED화면에 글자나 그림을 출력하기 입니다.</p><p>우선 준비물이 필요 합니다.</p><p>라즈베리파이 본체 OS설치와 Python설치가 끝난 상태</p><p>저의 경우는 라즈베리파이 제로를 이용해서 테스트를 했습니다.</p><blockquote><ul><li>준비물<ul><li>플레이트 보드</li><li>0.96인치 OLED LCD스크린</li><li>점퍼와이어 암,수가 붙어있는걸로 합니다. 4줄필요</li></ul></li></ul></blockquote><p>이렇게 준비물이 갖춰져 있는지 확인 하시고 본격적으로 OLED화면에 출력하기를 하겠습니다.</p><p><img src="002-e1590889756380.jpg" alt="image"></p><p><img src="003-e1590889774899.jpg" alt="image"></p><p><img src="001-e1590889826174.jpg" alt="image"></p><p><img src="002-1-e1590889857249.jpg" alt="image"></p><p><img src="003-1-e1590889887151.jpg" alt="image"></p><p>모든 구성품이 준비가 되셨으면 점퍼케이블을 라즈베리파이와 플레이트보드에 연결을 해야만 합니다만</p><p>구매하신 OLED에 따라 화면위에 적혀져 있는 핀값에 라즈베리파이의 핀번호를 연결을 해주셔야 합니다.</p><p>저의 경우는 GND, VCC, SCL, SDA라고 적혀져 있습니다.</p><p>라즈베리파이의 핀 번호에 관련해선 아래의 링크로 들어가시면 확인 하실수 있습니다.</p><p><a href="https://playneko.github.io/2020/05/28/rasberry-pi-010/">라즈베리파이에서 GPIO를 사용하기전 알아두어야 할 사항</a></p><p>저의 경우는 아래의 표와같이 라즈베리파이와 OLED의 핀과 연결을 했습니다.</p><table><thead><tr><th align="center">OLED Pin</th><th align="center">Pi GPIO Pin</th><th align="center">Notes</th></tr></thead><tbody><tr><td align="center">VCC</td><td align="center">1</td><td align="center">3.3V</td></tr><tr><td align="center">SDA</td><td align="center">3</td><td align="center">I2C SCA</td></tr><tr><td align="center">SCL</td><td align="center">5</td><td align="center">I2C SCL</td></tr><tr><td align="center">GND</td><td align="center">9</td><td align="center">Ground</td></tr></tbody></table><p><img src="004-1.jpg" alt="image"></p><p>라즈베리파이를 이용해서 OLED 출력을 하기위해선 코딩을 해야만 합니다.</p><p>기본적인 코딩관련 설명은 이전의 LED점등하기 글에 올려두었으니 참고를 해주시기 바랍니다.</p><p><a href="https://playneko.github.io/2020/05/30/rasberry-pi-013/">라즈베리파이에 GPIO와 파이선을 이용해서 LED를 켜보자 바로가기</a></p><p>라즈베리파이를 VNC로 접속을 하시고 터미널을 실행해 주세요.</p><p><img src="001-10.png" alt="image"></p><p>OLED를 사용하기위해선 몇가지 설정과 설치가 필요합니다.</p><p>콘솔에 아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo raspi-config</span><br></pre></td></tr></table></figure><p><img src="002-9.png" alt="image"></p><p>아래와 같이 설정화면이 표시가 되면 5번항목의 인터페이스 옵션설정으로 들어가시면 됩니다.</p><p><img src="003-9.png" alt="image"></p><p>아래의 화면과 같이 P5의 I2C항목에 들어가시기 바랍니다.</p><p><img src="004-7.png" alt="image"></p><p>I2C를 활성화 할것인지 물어보게 됩니다. 그러면 승인을 해주시면 되겠습니다.</p><p><img src="005-7.png" alt="image"></p><p>승인완료 화면이 나오게 되며 확인을 눌러주세요.</p><p><img src="006-6.png" alt="image"></p><p>그러면 다시 처음 설정화면으로 돌아오게 되며 피니쉬를 눌러서 나오시면 되겠습니다.</p><p><img src="007-6.png" alt="image"></p><p><img src="008-5.png" alt="image"></p><p>다시 콘솔창이 나오게 되면 동작에 필요한 파이선 라이브러리를 설치를 하셔야만 합니다.</p><p>우선 라즈베리파이에 파이선이 설치가 안되어 있으신 분들은 아래의 링크를 통해서 설치를 해주시기 바랍니다.</p><p><a href="https://playneko.github.io/2020/05/28/rasberry-pi-011/">라즈베리파이에 GPIO를 이용하여 코딩을 위해 파이썬 준비</a></p><p>파이선 버전이 3버전대인 경우는 아래의 명령어를 차례대로 입력해서 설치를 해주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install -y python3-dev</span><br><span class="line">$ sudo apt install -y python-smbus i2c-tools</span><br><span class="line">$ sudo apt install -y python3-pil</span><br><span class="line">$ sudo apt install -y python3-pip</span><br><span class="line">$ sudo apt install -y python3-setuptools</span><br><span class="line">$ sudo apt install -y python3-rpi.gpio</span><br></pre></td></tr></table></figure><p>파이선 버전이 2버전대인 경우는 아래의 명령어를 차례대로 입력해서 설치를 해주시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install -y python-dev</span><br><span class="line">$ sudo apt install -y python-smbus i2c-tools</span><br><span class="line">$ sudo apt install -y python-pil</span><br><span class="line">$ sudo apt install -y python-pip</span><br><span class="line">$ sudo apt install -y python-setuptools</span><br></pre></td></tr></table></figure><p>일단 저는 3.x버전이 설치되어있는 상태이므로 3.x의 명령어를 입력해서 설치를 하겠습니다.</p><p><img src="009_1.png" alt="image"></p><p><img src="009_2.png" alt="image"></p><p><img src="009_3.png" alt="image"></p><p><img src="009_4.png" alt="image"></p><p><img src="009_5.png" alt="image"></p><p><img src="009_6.png" alt="image"></p><p>이렇게 설치가 모두 완료가 되었습니다.</p><p>이제 OLED 모듈주소를 찾아야 합니다.</p><p>아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ i2cdetect -y 1</span><br></pre></td></tr></table></figure><p>아래와같이 3c라고 표시되는것이 OLED 스크린 장치가 정상 인식이 된것을 확인 되었습니다.</p><p><img src="010-4.png" alt="image"></p><p>장치 인식까지 모두 되셨으면</p><p>깃허브에서 화면에 출력가능한 샘플을 받아서 실행을 해보도록 하겠습니다.</p><p>우선 깃허브를 설치를 해야하므로 아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install -y git</span><br></pre></td></tr></table></figure><p><img src="011-3.png" alt="image"></p><p>아래의 깃허브 주소에서 샘플예제를 다운로드 받겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/adafruit/Adafruit_Python_SSD1306.git</span><br><span class="line">$ ls -al</span><br><span class="line">$ <span class="built_in">cd</span> Adafruit_Python_SSD1306</span><br></pre></td></tr></table></figure><p><img src="012-3.png" alt="image"></p><p><img src="013-3.png" alt="image"></p><p>깃허브에서 샘플데이터를 받으신후 폴더안을 확인 하시면 setup.py가 있는것을 확인하실수 있습니다.</p><p>우선 setup.py을 이용해 설치를 해보도록 하겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 파이선 2.x사용자</span></span><br><span class="line">$ sudo python setup.py install</span><br><span class="line"><span class="comment"># 파이선 3.x사용자</span></span><br><span class="line">$ sudo python3 setup.py install</span><br></pre></td></tr></table></figure><p>설치를 하시게 되면 설치과정이 나오게되며 성공적으로 설치가 끝난것을 확인 하실수 있습니다.</p><p><img src="014-3.png" alt="image"></p><p>그럼 샘플폴더로 이동을 하시고 실행을 해보도록 하겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> examples</span><br></pre></td></tr></table></figure><p><img src="015-2.png" alt="image"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 샘플폴더를 확인하시면 여러가지 샘플파일이 있는것을 확인 하실수 있습니다.</span><br><span class="line">animate.py, buttons.py, image.py, shapes.py, stats.py</span><br></pre></td></tr></table></figure><p>이중에 몇가지만 실행을 해보도록 하겠습니다.</p><p><img src="016-1.png" alt="image"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python3 animate.py</span><br><span class="line"><span class="comment"># 실행후 종료시에는 Ctrl + C키를 눌러주세요.</span></span><br></pre></td></tr></table></figure><p><img src="005-1.jpg" alt="image"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python3 image.py</span><br><span class="line"><span class="comment"># 실행후 종료시에는 Ctrl + C키를 눌러주세요.</span></span><br></pre></td></tr></table></figure><p><img src="006-1.jpg" alt="image"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python3 stats.py</span><br><span class="line"><span class="comment"># 실행후 종료시에는 Ctrl + C키를 눌러주세요.</span></span><br></pre></td></tr></table></figure><p><img src="007-1.jpg" alt="image"></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Python/">Python</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/Python/">Python</category>
      
      <category domain="https://playneko.github.io/tags/git-hub/">git hub</category>
      
      <category domain="https://playneko.github.io/tags/git/">git</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B9%83%ED%97%88%EB%B8%8C/">깃허브</category>
      
      <category domain="https://playneko.github.io/tags/0-96%EC%9D%B8%EC%B9%98/">0.96인치</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8A%A4%ED%81%AC%EB%A6%B0/">스크린</category>
      
      <category domain="https://playneko.github.io/tags/LCD/">LCD</category>
      
      <category domain="https://playneko.github.io/tags/oled/">oled</category>
      
      
      <comments>https://playneko.github.io/2020/05/31/rasberry-pi/rasberry-pi-014/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에 GPIO와 파이선을 이용해서 LED를 켜보자</title>
      <link>https://playneko.github.io/2020/05/30/rasberry-pi/rasberry-pi-013/</link>
      <guid>https://playneko.github.io/2020/05/30/rasberry-pi/rasberry-pi-013/</guid>
      <pubDate>Fri, 29 May 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에 GPIO와 파이선을 이용해서 LED를 켜보자&lt;br&gt;이번에 소개할 내용은 라즈베리파이에 GPIO를 이용해서 LED를 켜보자 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에-GPIO와-파이선을-이용해서-LED를-켜보자"><a href="#라즈베리파이에-GPIO와-파이선을-이용해서-LED를-켜보자" class="headerlink" title="라즈베리파이에 GPIO와 파이선을 이용해서 LED를 켜보자"></a>라즈베리파이에 GPIO와 파이선을 이용해서 LED를 켜보자</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 라즈베리파이에 GPIO를 이용해서 LED를 켜보자 입니다.</p><p>우선 준비물이 필요 합니다.</p><p>라즈베리파이 본체 OS설치와 Python설치가 끝난 상태</p><p>저의 경우는 라즈베리파이 제로를 이용해서 테스트를 했습니다.</p><blockquote><ul><li>플레이트 보드</li><li>LED와 저항1KΩ</li><li>점퍼와이어 암,수가 붙어있는걸로 합니다.</li></ul></blockquote><p>이렇게 준비물이 갖춰져 있는지 확인 하시고 본격적으로 LED켜보기를 하겠습니다.</p><p><img src="002-300x161.jpg"></p><p><img src="003-300x192.jpg"></p><p><img src="004-520x402.jpg"></p><p><img src="005.jpg"></p><p><img src="006-e1590850911270.jpg"></p><p>본격적으로 라즈베리파이에서 LED를 켜보기에 앞서</p><p>LED가 연결한다고 혼자서 저절로 켜지는게 아니기때문에 코딩을 해주셔야만 합니다.</p><p>샘플 소스를 보시고 따라만 하셔도 문제없이 LED를 켜보실수가 있습니다.</p><p>컴퓨터에 개발환경이 구축이 되어있으시면 개발환경에서 하셔도 되며</p><p>개발환경이 구축이 안되어 있는 분은 가장 간단한 방법으로 메모장을 이용해서</p><p>코딩하는 방법을 알아보도록 하겠습니다.</p><p>일단 텍스트 문서파일을 추가 합니다.</p><p><img src="001_1.png"></p><p><img src="001_2.png"></p><p>파일명을 확장자까지 아래와같이 변경해 주세요.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpio_led_turn_on.py</span><br></pre></td></tr></table></figure><p><img src="001_3.png"></p><p>파일을 메모장으로 여시면 당연히 아무것도 없는 상태이므로 이제부터 코딩을 해보도록 합니다.</p><p><img src="001_4.png"></p><p>소스코드를 입력하신후 저장을 합니다.</p><p><img src="001_5-1.png"></p><p>아래는 LED를 점등하기 위한 소스코드 입니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"></span><br><span class="line">pinNum = <span class="number">18</span> <span class="comment"># PIN번호</span></span><br><span class="line">GPIO.setmode(GPIO.BCM)</span><br><span class="line">GPIO.setup(pinNum, GPIO.OUT)</span><br><span class="line"></span><br><span class="line">cnt = <span class="number">15</span> <span class="comment"># 카운트 15회</span></span><br><span class="line">flag = <span class="literal">True</span> <span class="comment"># 플래그 True</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;LED is ON&quot;</span>) <span class="comment"># 콘솔에 출력할 내용</span></span><br><span class="line">GPIO.output(pinNum, flag) <span class="comment"># 핀번호에 플래그를 설정</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> cnt &gt; <span class="number">0</span>: <span class="comment"># 카운트가 0보다 크면 루프를 돌립니다.</span></span><br><span class="line"></span><br><span class="line">    cnt -= <span class="number">1</span> <span class="comment"># 카운트를 1씩 차감</span></span><br><span class="line">    time.sleep(<span class="number">1</span>) <span class="comment"># 1초동안 다음처리를 하지 않습니다.</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;LED is OFF&quot;</span>) <span class="comment"># 콘솔에 출력할 내용</span></span><br><span class="line">GPIO.cleanup() <span class="comment"># GPIO를 초기화 합니다.</span></span><br></pre></td></tr></table></figure><p>그리고 두번째 소스파일을 준비합니다.</p><p>두번째 소스파일은 파일명을 확장자까지 아래와같이 변경해 주세요.</p><p><img src="001_6.png"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpio_led.py</span><br></pre></td></tr></table></figure><p>추가하신 파일도 메모장으로 여신후 아래의 소스코드를 입력해 주세요.</p><p><img src="001_7.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"></span><br><span class="line">pinNum = <span class="number">18</span> <span class="comment"># PIN번호</span></span><br><span class="line">GPIO.setmode(GPIO.BCM)</span><br><span class="line">GPIO.setup(pinNum, GPIO.OUT)</span><br><span class="line"></span><br><span class="line">cnt = <span class="number">15</span> <span class="comment"># 카운트 15</span></span><br><span class="line">flag = <span class="literal">True</span> <span class="comment"># 플래그 True</span></span><br><span class="line"><span class="keyword">while</span> cnt &gt; <span class="number">0</span>: <span class="comment"># 카운트가 0보다 크면</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> flag: <span class="comment"># 플래그가 True인 경우</span></span><br><span class="line">        print(<span class="string">&quot;LED is ON&quot;</span>) <span class="comment"># LED가 켜졌다는 내용을 콘솔에 출력</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>: <span class="comment"># 위의 조건외의 경우</span></span><br><span class="line">        print(<span class="string">&quot;LED is OFF&quot;</span>) <span class="comment"># LED가 꺼졌다는 내용을 콘솔에 출력</span></span><br><span class="line"></span><br><span class="line">    GPIO.output(pinNum, flag) <span class="comment"># 핀번호에 플래그를 설정</span></span><br><span class="line">    cnt -= <span class="number">1</span> <span class="comment"># 카운트를 1씩 감소합니다.</span></span><br><span class="line">    flag = <span class="keyword">not</span> flag <span class="comment"># 플래그를 반대로 설정합니다.</span></span><br><span class="line">    time.sleep(<span class="number">0.5</span>) <span class="comment"># 0.5초동안 잠시 대기</span></span><br><span class="line"></span><br><span class="line">GPIO.cleanup() <span class="comment"># 루프가 종료되면 GPIO를 초기화 합니다.</span></span><br></pre></td></tr></table></figure><p>저장한 소스파일은 삼바를 통해서 라즈베리파이의 임의의 폴더에 소스파일을 배치해 주세요.</p><p>삼바가 설정이 안되어 있으신 분은 삼바 연결설정을 하시고 다음단계를 진행해 주세요.</p><p>점퍼케이블을 알맞은 PIN에 연결하기 위해선 우선</p><p>라즈베리파이에서 GPIO를 사용하기전 알아두어야 할 사항을 확인해주시기 바랍니다.</p><p>저는 PIN번호 18번 GPIO 24번에 빨간색 점퍼케이블을 연결을 했습니다.</p><p>두번째 점퍼 케이블은 GND와 연결을 해주시면 되겠습다.</p><p>저의 경우는 PIN번호 34번에 있는 GND에 연결을 했습니다.</p><p>플레이트 보드에 LED와 저항과 점퍼케이블 연결이 끝나셨으면</p><p>VNC를 이용해 라즈베리파이에 접속하신후 터미널을 실행 하십니다.</p><p>터미널을 여신후 라즈베리파이에 넣어두신 소스파일이 있는 경로까지 이동 하십니다.</p><p><img src="001-9.png"></p><p>첨 실행해 볼것은 15초동안 LED가 점등되는 gpio_led_turn_on.py를 실행을 합니다.</p><p>아래와 같이 콘솔에 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo python ./gpio_led_turn_on.py</span><br></pre></td></tr></table></figure><p><img src="004-6.png"></p><p>LED점등 프로그램을 기동하시면 아래의 사진과 같이 잘 안보이시겠지만 미묘하게</p><p>15초동안 불이 켜지는것을 확인 하실수 있습니다.</p><p><img src="007-e1590850952194.jpg"></p><p><img src="008-e1590850971744.jpg"></p><p>이번에는 두번째 소스파일을 실행 합니다.</p><p><img src="006-5.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo python ./gpio_led.py</span><br></pre></td></tr></table></figure><p>두번째 LED점등 소스파일을 실행하시면</p><p>0.5초간격으로 15번 LED가 켜졌다 꺼졌다를 반복하는것을 확인 하실수 있습니다.</p><p>시작은 간단한 LED키고 끄는것을 해보았습니다.</p><p>다음에는 좀더 복잡한것을 가지고 오도록 하겠습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Python/">Python</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/PIN/">PIN</category>
      
      <category domain="https://playneko.github.io/tags/GPIO-LED/">GPIO - LED</category>
      
      <category domain="https://playneko.github.io/tags/Python/">Python</category>
      
      
      <comments>https://playneko.github.io/2020/05/30/rasberry-pi/rasberry-pi-013/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA프로그램에서 하드디스크 정보 보기</title>
      <link>https://playneko.github.io/2020/05/29/java/java-002/</link>
      <guid>https://playneko.github.io/2020/05/29/java/java-002/</guid>
      <pubDate>Thu, 28 May 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;JAVA프로그램에서 하드디스크 정보 보기&lt;br&gt;이번에 소개할 내용은 JAVA에서 하드디스크 용량을 확인하는 방법을 소개해 드리겠습니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="JAVA프로그램에서-하드디스크-정보-보기"><a href="#JAVA프로그램에서-하드디스크-정보-보기" class="headerlink" title="JAVA프로그램에서 하드디스크 정보 보기"></a>JAVA프로그램에서 하드디스크 정보 보기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 JAVA에서 하드디스크 용량을 확인하는 방법을 소개해 드리겠습니다.</p><p>웹페이지나 콘솔프로그램을 개발하고 원격으로 하드디스크의 잔량을 확인이 필요한 경우가 있을것 입니다.</p><p>그럴경우 간단하게 자바코딩으로 하드디스크 정보를 읽어오는것이 가능한 프로그램을 만들수 있습니다.</p><p>JAVA에서 하드디스크 정보를 보는 방법 입니다.</p><p>개발을 하다보시면 콘솔로 먼가 시스템 정보를 출력이 필요한 경우가 생길수가 있습니다.</p><p>그때 하드디스크 용량이 얼마나 남았는지 체크하는 방법을 소개해 드리도록 하겠습니다.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">listRoots() : 파일 시스템 루트의 리스트를 반환한다. (C:\, D:\ ......)</span><br><span class="line">getTotalSpace() : 하드디스크 총 용량</span><br><span class="line">getUsableSpace() : 하드디스크 사용 공간</span><br><span class="line">getFreeSpace() : 남은 용량</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">String drive;</span><br><span class="line"><span class="keyword">double</span> totalSize, freeSize, useSize;</span><br><span class="line">File[] roots = File.listRoots();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (File root : roots) &#123;</span><br><span class="line">drive = root.getAbsolutePath();</span><br><span class="line">totalSize = root.getTotalSpace() / Math.pow(<span class="number">1024</span>, <span class="number">3</span>);</span><br><span class="line">useSize = root.getUsableSpace() / Math.pow(<span class="number">1024</span>, <span class="number">3</span>);</span><br><span class="line">freeSize = totalSize - useSize;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;드라이브 정보 : &quot;</span> + drive + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;전체 용량 : &quot;</span> + totalSize + <span class="string">&quot; GB \n&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;사용 용량 : &quot;</span> + freeSize + <span class="string">&quot; GB \n&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;남은 용량 : &quot;</span> + useSize + <span class="string">&quot; GB \n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://docs.oracle.com/javase/7/docs/api/">JAVA DOC</a></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Java/">Java</category>
      
      
      <category domain="https://playneko.github.io/tags/Java/">Java</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9E%90%EB%B0%94/">자바</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%98%EC%86%94/">콘솔</category>
      
      <category domain="https://playneko.github.io/tags/System/">System</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8B%9C%EC%8A%A4%ED%85%9C/">시스템</category>
      
      <category domain="https://playneko.github.io/tags/getFreeSpace/">getFreeSpace</category>
      
      <category domain="https://playneko.github.io/tags/getTotalSpace/">getTotalSpace</category>
      
      <category domain="https://playneko.github.io/tags/getUsableSpace/">getUsableSpace</category>
      
      <category domain="https://playneko.github.io/tags/HDD/">HDD</category>
      
      <category domain="https://playneko.github.io/tags/listRoots/">listRoots</category>
      
      <category domain="https://playneko.github.io/tags/%ED%95%98%EB%93%9C%EB%94%94%EC%8A%A4%ED%81%AC/">하드디스크</category>
      
      
      <comments>https://playneko.github.io/2020/05/29/java/java-002/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>.htaccess를 수정해서 URL 리다이렉트(Redirect) 처리하기</title>
      <link>https://playneko.github.io/2020/05/28/rasberry-pi/rasberry-pi-012/</link>
      <guid>https://playneko.github.io/2020/05/28/rasberry-pi/rasberry-pi-012/</guid>
      <pubDate>Wed, 27 May 2020 17:00:01 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;.htaccess를 수정해서 URL 리다이렉트(Redirect) 처리하기&lt;br&gt;이번에 소개할 내용은 .htaccess를 수정해서 URL 리다이렉트 처리하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="htaccess를-수정해서-URL-리다이렉트-Redirect-처리하기"><a href="#htaccess를-수정해서-URL-리다이렉트-Redirect-처리하기" class="headerlink" title=".htaccess를 수정해서 URL 리다이렉트(Redirect) 처리하기"></a>.htaccess를 수정해서 URL 리다이렉트(Redirect) 처리하기</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 .htaccess를 수정해서 URL 리다이렉트 처리하기 입니다.</p><p>사이트를 운영을 하시다 보면 특정 URL로 접속을 하거나 할경우 다른페이지로 이동을 시키고 싶은경우</p><p>아니면 웹서버를 호스팅서버로 이용을 하고 있어서 Apache 또는 Nginx서버를 직접 수정할수 없는 경우</p><p>그럴경우를 위해서 각 사이트별로 간단하게 리다이렉트 처리를 할수있는 방법을 알려드리도록 하겠습니다.</p><p>.htaccess를 수정해서 URL 리다이렉트 처리를 위해선</p><p>기본적으로 각 웹서버에서 도메인이 연결된 홈디렉토리의 root디렉토리에</p><p>.htaccess파일이 없을경우 추가해 주시기 바랍니다.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">www.test.<span class="keyword">com</span> URL로 접속할경우 www.playneko.<span class="keyword">com</span>으로 리다이렉트처리</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteCond %&#123;HTTP_HOST&#125; ^(www\.test\.<span class="keyword">com</span>)</span><br><span class="line">RewriteRule (.*) http://www.playneko.<span class="keyword">com</span>/$<span class="number">1</span> [L]</span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">www.test.<span class="keyword">com</span>또는 test.<span class="keyword">com</span> URL로 접속할경우 www.playneko.<span class="keyword">com</span>으로 리다이렉트처리</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteCond %&#123;HTTP_HOST&#125; ^(www\.test\.<span class="keyword">com</span>|test\.<span class="keyword">com</span>)</span><br><span class="line">RewriteRule (.*) http://www.playneko.<span class="keyword">com</span>/$<span class="number">1</span> [L]</span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test.<span class="keyword">com</span>에 www가 없을경우 www를 붙이게끔 하기</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteCond %&#123;HTTP_HOST&#125; ^(test\.<span class="keyword">com</span>)</span><br><span class="line">RewriteRule (.*) http://www.test.<span class="keyword">com</span>/$<span class="number">1</span> [L]</span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test.<span class="keyword">com</span>을 test.<span class="keyword">com</span>/xxx로 확장 변경하기</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteCond %&#123;HTTP_HOST&#125; ^(test\.<span class="keyword">com</span>|www\.test\.<span class="keyword">com</span>)</span><br><span class="line">RewriteRule (.*) /xxx/$<span class="number">1</span> [L]</span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">test.<span class="keyword">com</span>/xxx로 접속한 하위 주소까지 playneko.<span class="keyword">com</span>로 리다이렉트 처리(영구이동)</span><br><span class="line"># test.<span class="keyword">com</span>/xxx/ 하위 폴더안에 .htaccess파일을 추가 합니다.</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteRule (.*) http://www.playneko.<span class="keyword">com</span>/$<span class="number">1</span> [R=<span class="number">301</span>,L]</span><br><span class="line"></span><br><span class="line">다른방법으로는 아래와 같습니다.</span><br><span class="line"># test.<span class="keyword">com</span>/ 하위 폴더안에 .htaccess파일을 추가 합니다.</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteRule ^xxx/(.*) http://www.playneko.<span class="keyword">com</span>/$<span class="number">1</span> [R=<span class="number">301</span>,L]</span><br><span class="line"></span><br><span class="line"># R=<span class="number">301</span>은 해당 도메인으로 영구적으로 리다이렉트를 나타내며</span><br><span class="line"># 이럴경우 도메인이 변경되었을때도 검색봇들이 변경을 인지하고</span><br><span class="line"># 기존 도메인에서 새로운 도메인으로 갱신을 하게 됩니다.</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">test.<span class="keyword">com</span>을 포함하는 서브도메인을 포함한 URL의 경우 playneko.<span class="keyword">com</span>으로 접속</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteCond %&#123;HTTP_HOST&#125; test\.<span class="keyword">com</span></span><br><span class="line">RewriteRule ^(.+) %&#123;HTTP_HOST&#125;$<span class="number">1</span> [C]</span><br><span class="line">RewriteRule ^([^.]+)\.test\.<span class="keyword">com</span>(.*) http://$<span class="number">1</span>.playneko.<span class="keyword">com</span>/$<span class="number">2</span> [L]</span><br><span class="line">RewriteRule ^test\.<span class="keyword">com</span>(.*) http://playneko.<span class="keyword">com</span>/$<span class="number">1</span> [L]</span><br><span class="line"></span><br><span class="line">#해당 라인에서 끝이란 표현으로 [L]을 추가 합니다.</span><br><span class="line">#그리고 그 이후 나오는 모든 구문은 무시하는 형식 (break;)와 동일합니다.</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Linux/">Linux</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/linux/">linux</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A6%AC%EB%88%85%EC%8A%A4/">리눅스</category>
      
      <category domain="https://playneko.github.io/tags/apache-htaccess/">apache - htaccess</category>
      
      <category domain="https://playneko.github.io/tags/nginx/">nginx</category>
      
      <category domain="https://playneko.github.io/tags/redirect/">redirect</category>
      
      <category domain="https://playneko.github.io/tags/webserver/">webserver</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EC%84%9C%EB%B2%84/">웹서버</category>
      
      
      <comments>https://playneko.github.io/2020/05/28/rasberry-pi/rasberry-pi-012/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에서 파이썬을 이용한 GPIO 개발 준비</title>
      <link>https://playneko.github.io/2020/05/28/rasberry-pi/rasberry-pi-011/</link>
      <guid>https://playneko.github.io/2020/05/28/rasberry-pi/rasberry-pi-011/</guid>
      <pubDate>Wed, 27 May 2020 17:00:01 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에서 파이썬을 이용한 GPIO 개발 준비&lt;br&gt;이번에 소개할 내용은 라즈베리파이에 GPIO를 이용하여 코딩을 위해 파이썬 준비 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에서-파이썬을-이용한-GPIO-개발-준비"><a href="#라즈베리파이에서-파이썬을-이용한-GPIO-개발-준비" class="headerlink" title="라즈베리파이에서 파이썬을 이용한 GPIO 개발 준비"></a>라즈베리파이에서 파이썬을 이용한 GPIO 개발 준비</h2><p>일단 라즈베리파이에 VNC로 접속후 터미널을 실행 합니다.</p><p>터미널에서 아래의 명령어를 실행 합니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br></pre></td></tr></table></figure><p><img src="001-8.png"></p><p>최신버전으로 업데이트를 하게 됩니다.</p><p><img src="002-8-e1590627633446.png"></p><p><img src="003-8-e1590627697120.png"></p><p>파이썬을 설치하기 위해 아래의 명령어를 입력합니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install -y python-dev python-setuptools</span><br></pre></td></tr></table></figure><p><img src="004-5.png"></p><p><img src="005-6.png"></p><p>설치가 완료 되었습니다.</p><p>이렇게해서 라즈베리파이에서 파이썬을 사용할수 있는 준비가 되었습니다.</p><p>라즈베리파이 공식 사이트</p><p><a href="https://www.raspberrypi.org/">https://www.raspberrypi.org/</a></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Python/">Python</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC-apt/">파이썬 - apt</category>
      
      <category domain="https://playneko.github.io/tags/apt-get/">apt-get</category>
      
      <category domain="https://playneko.github.io/tags/GPIO/">GPIO</category>
      
      <category domain="https://playneko.github.io/tags/python/">python</category>
      
      <category domain="https://playneko.github.io/tags/sudo/">sudo</category>
      
      
      <comments>https://playneko.github.io/2020/05/28/rasberry-pi/rasberry-pi-011/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>PHP로 다른서버와 Socket(소켓) 통신하기</title>
      <link>https://playneko.github.io/2020/05/28/php/php-006/</link>
      <guid>https://playneko.github.io/2020/05/28/php/php-006/</guid>
      <pubDate>Wed, 27 May 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;PHP로 다른서버와 Socket(소켓) 통신하기&lt;br&gt;이번에 소개할 내용은 PHP를 이용해서 다른서버와 Socket(소켓) 통신하기 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="PHP로-다른서버와-Socket-소켓-통신하기"><a href="#PHP로-다른서버와-Socket-소켓-통신하기" class="headerlink" title="PHP로 다른서버와 Socket(소켓) 통신하기"></a>PHP로 다른서버와 Socket(소켓) 통신하기</h2><p>안녕하세요. AkibaTV입니다.</p><p>이번에 소개할 내용은 PHP를 이용해서 다른서버와 Socket(소켓) 통신하기 입니다.</p><p>여기서 다른서버는 소켓으로 들어온 데이터를 처리하는 서버로 PHP로 개발되지 않고 JAVA(자바)로 만들어져 있습니다.</p><p>이부분에 대해서는 다음시간에 소개를 해드리도록 하겠습니다.</p><p>일단 간단하게 예제형식으로 진행을 해드리는것이기에 자체적으로 APM이 설치되어 있는 서버 또는 웹호스팅을 가지고 계시거나</p><p>개인컴퓨터를 PHP가 동작이 되도록 설치를 해두신후 테스트를 해보셔도 되겠습니다만.</p><p>이번에 소개는 PHP로 송신하는 기능만 소개를 하기에 수신하는 기능이 없습니다.</p><p>그래서 이번에는 송신하는것에 대해서만 소개를 해드리도록 하겠습니다.</p><p>일단 간략하게 왜 PHP로만 송신하냐 수신은 왜 안하는지 궁금해 하시는 분들도 계시지만</p><p>일단 PHP로는 멀티 스레드 기능을 구현을 하실수가 없습니다.</p><p>그렇기때문에 송신은 가능해도 다량의 접속자에 대한 수신처리를 PHP로는 힘들기에 송신 기능만 구현하고</p><p>수신기능에 대해선 멀티 스레드가 지원되는 자바 또는 파이선을 이용해서 진행을 하도록 하겠습니다.</p><p>서론이 길어졌습니다만 이제부터 샘플소스와 함께 설명을 제공해 드리겠습니다.</p><p>서로다른 서버끼리 소켓통신을 공부중이신 분들에게는 유용하게 사용하실수 있겠습니다.</p><p>우선은  Visual Studio Code(비주얼 스튜디오 코드)를 실행을 해주시기 바랍니다.</p><p><img src="https://playneko.com/wp-content/uploads/2020/06/001.png" alt="image"></p><p>파일을 추가를 해주시기 바랍니다.</p><p>파일명은 socket_send.php 이며 확장자는 php를 꼭 붙여주시기 바랍니다.</p><p><img src="https://playneko.com/wp-content/uploads/2020/06/002.png" alt="image"></p><p>아래의 소스코드를 작성 합니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    error_reporting(E_ALL);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$address</span> = <span class="string">&quot;0.0.0.0&quot;</span>; <span class="comment">// 접속할 IP</span></span><br><span class="line">    <span class="variable">$port</span> = <span class="number">7778</span>; <span class="comment">// 접속할 PORT</span></span><br><span class="line">    <span class="variable">$socket</span> = socket_create(AF_INET, SOCK_STREAM, SOL_TCP); <span class="comment">// TCP 통신용 소켓 생성</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$socket</span> === <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;socket_create() 실패! 이유: &quot;</span> . socket_strerror(socket_last_error()) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;socket 성공적으로 생성.\n&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;다음 IP &#x27;<span class="subst">$address</span>&#x27; 와 Port &#x27;<span class="subst">$port</span>&#x27; 으로 접속중...&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 소켓 연결 및 $result에 접속값 지정</span></span><br><span class="line">    <span class="variable">$result</span> = socket_connect(<span class="variable">$socket</span>, <span class="variable">$address</span>, <span class="variable">$port</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span> === <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;socket_connect() 실패.\nReason: (<span class="subst">$result</span>) &quot;</span> . socket_strerror(socket_last_error(<span class="variable">$socket</span>)) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;다음 주소로 연결 성공 : <span class="subst">$address</span>.\n&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sendData</span> = <span class="keyword">array</span>(<span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">    <span class="variable">$json</span> = json_encode(<span class="variable">$sendData</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;서버로 보내는 전문 : <span class="subst">$json</span>\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 실제로 소켓으로 보내는 명령어</span></span><br><span class="line">    socket_write(<span class="variable">$socket</span>, <span class="variable">$i</span>, strlen(<span class="variable">$i</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 소켓으로 부터 받은 REQUEST 정보를 $input에 지정</span></span><br><span class="line">    <span class="variable">$input</span> = socket_read(<span class="variable">$socket</span>, <span class="number">1024</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Could not read from Socket\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//REQUEST 정보 출력</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$input</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 소켓 클로즈</span></span><br><span class="line">    socket_close(<span class="variable">$socket</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>이렇게해서 PHP에서 자바서버로 메세지를 송신하는 소스코드가 완성 되었습니다.</p><p>저는 메세지를 JSON형태로 변환하여 서버로 전송을 하게끔 해두었습니다.</p><p>이부분에 대해선 자신이 원하는 방법으로 바꾸셔서 사용하셔도 되겠습니다.</p><p>저는 자바서버에서 JSON를 받아서 파싱후 처리를 하게끔 되게 만들어 두었기에 JSON으로 전송을 하겠습니다.</p><p>소스코드를 웹서버에 올려주시고 URL로 접속을 하시게 되면 수신서버가 활성화가 되어 있는 상태이면 문제없이 접속이 되며</p><p>메세지를 보낸후 수신서버에서 받은 메세지에 대해서 다시 리퀘스트 정보를 보내오게 됩니다.</p><p>우선은 수신서버의 아이피주소를 0.0.0.0으로 설정후 접속이 안되는 부분을 먼저 보여드리도록 하겠습니다.</p><p><img src="https://playneko.com/wp-content/uploads/2020/06/003.png" alt="image"></p><p>알수없는 아이피를 설정후 실행을 하시면 아래와 같이</p><p>소켓서버에 연결이 실패했다고 나오면서 에러가 나는것을 확인하실수 있습니다.</p><p><img src="https://playneko.com/wp-content/uploads/2020/06/004.png" alt="image"></p><p>이번에는 정상적인 서버 아이피로 변경후 Hello, AkibaTV!라고 나오시면 정상적으로 되신것 입니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/categories/PHP/Rasberry-Pi/">Rasberry Pi</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/linux/">linux</category>
      
      <category domain="https://playneko.github.io/tags/nginx/">nginx</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EC%84%9C%EB%B2%84/">웹서버</category>
      
      <category domain="https://playneko.github.io/tags/Visual-Studio-Code/">Visual Studio Code</category>
      
      <category domain="https://playneko.github.io/tags/%EB%B9%84%EC%A3%BC%EC%96%BC-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%BD%94%EB%93%9C/">비주얼 스튜디오 코드</category>
      
      <category domain="https://playneko.github.io/tags/apache/">apache</category>
      
      <category domain="https://playneko.github.io/tags/chown/">chown</category>
      
      <category domain="https://playneko.github.io/tags/NPM/">NPM</category>
      
      <category domain="https://playneko.github.io/tags/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/tags/root/">root</category>
      
      <category domain="https://playneko.github.io/tags/zero/">zero</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80/">웹브라우저</category>
      
      <category domain="https://playneko.github.io/tags/%EC%BD%94%EB%94%A9/">코딩</category>
      
      <category domain="https://playneko.github.io/tags/localhost/">localhost</category>
      
      <category domain="https://playneko.github.io/tags/www/">www</category>
      
      <category domain="https://playneko.github.io/tags/Socket/">Socket</category>
      
      <category domain="https://playneko.github.io/tags/%ED%86%B5%EC%8B%A0/">통신</category>
      
      <category domain="https://playneko.github.io/tags/JSON/">JSON</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A6%AC%ED%80%98%EC%8A%A4%ED%8A%B8/">리퀘스트</category>
      
      <category domain="https://playneko.github.io/tags/%EC%86%8C%EC%BC%93/">소켓</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8A%A4%EB%A0%88%EB%93%9C/">스레드</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9B%B9%ED%98%B8%EC%8A%A4%ED%8C%85/">웹호스팅</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9E%90%EB%B0%94%EC%84%9C%EB%B2%84/">자바서버</category>
      
      
      <comments>https://playneko.github.io/2020/05/28/php/php-006/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 GPIO Pin I2C 제어하기를 사용하기 전 주의사항</title>
      <link>https://playneko.github.io/2020/05/28/rasberry-pi/rasberry-pi-010/</link>
      <guid>https://playneko.github.io/2020/05/28/rasberry-pi/rasberry-pi-010/</guid>
      <pubDate>Wed, 27 May 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리 파이 GPIO I2C 제어하기를 사용하기전 알아두어야 할 사항&lt;br&gt;이번에 소개할 내용은 라즈베리파이에서 GPIO를 사용하기전 알아두어야 할 사항을 작성해 보았습니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리-파이-GPIO-I2C-제어하기를-사용하기전-알아두어야-할-사항"><a href="#라즈베리-파이-GPIO-I2C-제어하기를-사용하기전-알아두어야-할-사항" class="headerlink" title="라즈베리 파이 GPIO I2C 제어하기를 사용하기전 알아두어야 할 사항"></a>라즈베리 파이 GPIO I2C 제어하기를 사용하기전 알아두어야 할 사항</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 라즈베리파이에서 GPIO를 사용하기전 알아두어야 할 사항을 작성해 보았습니다.</p><p>GPIO는 General Purpose Input / Output 으로 말 그대로 범용 입출력 인터페이스입니다.</p><p>PCB, ICT보드 등 다양한 전자기판에서 내부 회로 이외 외부적으로 물리적으로 소통할 수 있는 장치로,</p><p>이를 이용해서 LED, Servo Motor 등 다양한 물리적 외부 장치들에 대해서 배선하고 연결하여 제어 할수 있습니다.</p><p>아래는 GPIO 배치도 입니다.</p><p>무엇을 만드냐에 따라 PIN PORT에 연결하여 제어를 하실수 있습니다.</p><p><img src="RasPiLED.png"></p><p>아래의 명령어로 자신의 라즈베리파이의 GPIO pin을 확인 하실수 있습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gpio readall</span><br></pre></td></tr></table></figure><p>라즈베리파이 공식 사이트</p><p><a href="https://www.raspberrypi.org/">https://www.raspberrypi.org/</a></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/GPIO-ICT/">GPIO - ICT</category>
      
      <category domain="https://playneko.github.io/tags/LED/">LED</category>
      
      <category domain="https://playneko.github.io/tags/PCB/">PCB</category>
      
      <category domain="https://playneko.github.io/tags/PIN/">PIN</category>
      
      <category domain="https://playneko.github.io/tags/PORT/">PORT</category>
      
      <category domain="https://playneko.github.io/tags/Servo-Motor/">Servo Motor</category>
      
      
      <comments>https://playneko.github.io/2020/05/28/rasberry-pi/rasberry-pi-010/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>PHP 날짜시간 함수 사용하기(date/strtotime/mktime) Function</title>
      <link>https://playneko.github.io/2020/05/28/php/php-001/</link>
      <guid>https://playneko.github.io/2020/05/28/php/php-001/</guid>
      <pubDate>Wed, 27 May 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;PHP 날짜시간 함수 사용하기(date/strtotime/mktime) Function&lt;br&gt;이번에 소개할 내용은 PHP 날짜시간 관련으로 사용하는 함수 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="PHP-날짜시간-함수-사용하기-date-strtotime-mktime-Function"><a href="#PHP-날짜시간-함수-사용하기-date-strtotime-mktime-Function" class="headerlink" title="PHP 날짜시간 함수 사용하기(date/strtotime/mktime) Function"></a>PHP 날짜시간 함수 사용하기(date/strtotime/mktime) Function</h2><p>안녕하세요.</p><p>이번에 소개할 내용은 PHP 날짜시간 관련으로 사용하는 함수 입니다.</p><p>날짜시간 관련 함수는 주로 많이 사용되는 함수이므로 참고를 해두시면</p><p>앞으로 코딩을 하면서 날짜시간 관련 개발을 할때 유용한 정보가 될수가 있겠습니다.</p><p>대충 한번이라도 봐두시면 나중에 반듯이 생각이나는 경우가 있겠습니다.</p><blockquote><p>time : int time(void)<br>현재 시간을 timestamp로 반환</p><p>strtotime : int strtotime ( string $time [, int $now = time() ] )<br>string을 timestamp로 반환</p><p>date : string date ( string $format [, int $timestamp ] )<br>정수형으로 주어지는 timestamp나, timestamp가 주어지지 않았을 경우에는<br>현재 로컬시간을 사용하여, 주어진 포맷 문자열에 따라 형식화한 문자열을 반환합니다.<br>즉 timestamp는 선택적이고 기본값은 time()의 값입니다.</p></blockquote><h5 id="아래는-date-format-형식"><a href="#아래는-date-format-형식" class="headerlink" title="아래는 date format 형식"></a>아래는 date format 형식</h5><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">d : 일, 앞에 0이 붙는 2 숫자(01에서 31)</span><br><span class="line">D : 요일 글자 표현, 3문자(Mon에서 Sun)</span><br><span class="line">j : 앞에 0이 붙지 않는 일(1에서 31)</span><br><span class="line">l : 요일의 완전한 글자 표현(Sunday에서 Saturday)</span><br><span class="line">N : 요일의 ISO-8601 숫자 표현(1(월요일)에서 7(일요일))</span><br><span class="line">w : 요일 숫자 표현(0(일요일)에서 6(토요일))</span><br><span class="line">W : ISO-8601 주차, 주는 월요이에 시작(42(그 해의 42번째 주))</span><br><span class="line">F : January나 March 같은 월의 완전한 글자 표현(Januray에서 December)</span><br><span class="line">m : 0이 붙는 월 숫자 표현(01에서 12)</span><br><span class="line">M : 월의 축약 글자 표현, 3문자(Jan에서 Dec)</span><br><span class="line">n : 0이 붙지 않는 월 숫자 표현(1에서 12)</span><br><span class="line">t : 주어진 월의 일 수(28에서 31)</span><br><span class="line">L : 윤년 여부(윤년엔 1, 그 외엔 0)</span><br><span class="line">Y : 연도의 완전한 숫자 표현, 4 숫자(1999나 2012)</span><br><span class="line">y : 연도의 두 숫자 표현(99나 12)</span><br><span class="line">a : 오전과 오후의 소문자(am 또는 pm)</span><br><span class="line">A : 오전과 오후의 대문자(AM 또는 PM)</span><br><span class="line">g : 0이 붙지 않는 12시간 형식 시(1에서 12)</span><br><span class="line">G : 0이 붙지 않는 24시간 형식 시(1에서 24)</span><br><span class="line">h : 0이 붙는 12시간 형식 시(01에서 12)</span><br><span class="line">H : 0이 붙는 24시간 형식 시(00에서 24)</span><br><span class="line">i : 0이 붙는 분(00에서 59)</span><br><span class="line">s : 초, 0이 붙음(00에서 59)</span><br></pre></td></tr></table></figure><blockquote><p>mktime : int mktime ([ int $hour = date(“H”) [, int $minute = date(“i”) [, int $second = date(“s”) [, int $month = date(“n”) [, int $day = date(“j”) [, int $year = date(“Y”) [, int $is_dst = -1 ]]]]]]] )</p></blockquote><h5 id="아래의-인자값을-대입하면-timestamp를-반환-합니다"><a href="#아래의-인자값을-대입하면-timestamp를-반환-합니다" class="headerlink" title="아래의 인자값을 대입하면 timestamp를 반환 합니다."></a>아래의 인자값을 대입하면 timestamp를 반환 합니다.</h5><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hour : 시간</span><br><span class="line">minute : 분</span><br><span class="line">second : 초</span><br><span class="line">month : 월</span><br><span class="line">day : 일</span><br><span class="line">year : 년도</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$nextWeek</span> = time() + (<span class="number">7</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span>); <span class="comment">// 현재시간에 7일에 해당하는 시간을 더한다</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;현재 날짜 : &quot;</span> . date(<span class="string">&#x27;Y-m-d&#x27;</span>) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;다음주 날짜 : &quot;</span> . date(<span class="string">&#x27;Y-m-d&#x27;</span>, <span class="variable">$nextWeek</span>) .<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;다음주 날짜 : &quot;</span> . date(<span class="string">&#x27;Y-m-d&#x27;</span>, strtotime(<span class="string">&#x27;+1 week&#x27;</span>)) .<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">결과값 :</span><br><span class="line">현재 날짜 : 2020-05-28</span><br><span class="line">다음주 날짜 : 2020-06-04</span><br><span class="line">다음주 날짜 : 2020-06-04</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$recentdate</span> = mktime(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">28</span>, <span class="number">2020</span>);</span><br><span class="line"><span class="variable">$year</span>=date(<span class="string">&#x27;Y&#x27;</span>, <span class="variable">$recentdate</span>);</span><br><span class="line"><span class="variable">$month</span>=date(<span class="string">&#x27;m&#x27;</span>, <span class="variable">$recentdate</span>);</span><br><span class="line"><span class="variable">$day</span>=date(<span class="string">&#x27;d&#x27;</span>, <span class="variable">$recentdate</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;현재 : &quot;</span> . <span class="variable">$year</span> . <span class="string">&quot;년 &quot;</span> . <span class="variable">$month</span> . <span class="string">&quot;월 &quot;</span> . <span class="variable">$day</span> . <span class="string">&quot;일&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">결과값 :</span><br><span class="line">현재 : 2020년 05월 28일</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;현재: &quot;</span> . date(<span class="string">&#x27;Y-m-d&#x27;</span>, strtotime(<span class="string">&quot;now&quot;</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;날짜: &quot;</span> . date(<span class="string">&#x27;Y-m-d&#x27;</span>, strtotime(<span class="string">&quot;10 September 2000&quot;</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;날짜: &quot;</span> . date(<span class="string">&#x27;Y-m-d&#x27;</span>, strtotime(<span class="string">&quot;+1 day&quot;</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;날짜: &quot;</span> . date(<span class="string">&#x27;Y-m-d&#x27;</span>, strtotime(<span class="string">&quot;+1 week&quot;</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;날짜: &quot;</span> . date(<span class="string">&#x27;Y-m-d&#x27;</span>, strtotime(<span class="string">&quot;+1 week 2 days&quot;</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;날짜: &quot;</span> . date(<span class="string">&#x27;Y-m-d&#x27;</span>, strtotime(<span class="string">&quot;next Thursday&quot;</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;날짜: &quot;</span> . date(<span class="string">&#x27;Y-m-d&#x27;</span>, strtotime(<span class="string">&quot;last Monday&quot;</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">결과값 :</span><br><span class="line">현재: 2020-05-28</span><br><span class="line">날짜: 2000-09-10</span><br><span class="line">날짜: 2020-05-29</span><br><span class="line">날짜: 2020-06-04</span><br><span class="line">날짜: 2020-06-06</span><br><span class="line">날짜: 2020-06-04</span><br><span class="line">날짜: 2020-05-25</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/PHP/">PHP</category>
      
      
      <category domain="https://playneko.github.io/tags/PHP/">PHP</category>
      
      <category domain="https://playneko.github.io/tags/date/">date</category>
      
      <category domain="https://playneko.github.io/tags/mktime/">mktime</category>
      
      <category domain="https://playneko.github.io/tags/strtotime/">strtotime</category>
      
      <category domain="https://playneko.github.io/tags/time/">time</category>
      
      <category domain="https://playneko.github.io/tags/timestamp/">timestamp</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8B%9C%EA%B0%84/">시간</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8B%9C%EA%B0%84%EA%B4%80%EB%A0%A8/">시간관련</category>
      
      <category domain="https://playneko.github.io/tags/%ED%95%A8%EC%88%98/">함수</category>
      
      
      <comments>https://playneko.github.io/2020/05/28/php/php-001/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 또는 리눅스에서 TOUCH를 이용해 날짜 변경하기</title>
      <link>https://playneko.github.io/2020/05/27/rasberry-pi/rasberry-pi-009/</link>
      <guid>https://playneko.github.io/2020/05/27/rasberry-pi/rasberry-pi-009/</guid>
      <pubDate>Tue, 26 May 2020 16:00:01 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 또는 리눅스에서 TOUCH를 이용해 날짜 변경하기&lt;br&gt;라즈베리파이 또는 리눅스상에서 파일을 업로드후 최신 날짜로 변경이 필요한 경우가 있습니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-또는-리눅스에서-TOUCH를-이용해-날짜-변경하기"><a href="#라즈베리파이-또는-리눅스에서-TOUCH를-이용해-날짜-변경하기" class="headerlink" title="라즈베리파이 또는 리눅스에서 TOUCH를 이용해 날짜 변경하기"></a>라즈베리파이 또는 리눅스에서 TOUCH를 이용해 날짜 변경하기</h2><p>라즈베리파이 또는 리눅스상에서 파일을 업로드후 최신 날짜로 변경이 필요한 경우가 있습니다.</p><p>예를들어 자바 클래스 파일을 업로드 했는데 계속 예전에 올렸던 소스로 반영이 된다던지</p><p>그럴경우 날짜를 최신날자로 변경을 해주어야 최신소스로 인식을 하는 경우가 있습니다.</p><p>그럴경우 TOUCH명령어를 통해서 날짜를 자유롭게 변경하실수 있습니다.</p><p><img src="001-7.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-rwxrw-rw-  1 pi pi    0  5月 24 12:00 test.txt</span><br></pre></td></tr></table></figure><p>위와같이 test.txt파일이 있으며 날짜는 5월24일로 설정이 되어있습니다.</p><p>TOUCH를 이용해 날짜를 5월23일로 변경을 해보도록 하겠습니다.</p><p>날짜 이외에도 시분초도 변경이 가능하니 5월23일 15시30초로 변경을 해보도록 하겠습니다.</p><p><img src="002-7.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ touch -t 202005231530 ./test.txt</span><br></pre></td></tr></table></figure><p>명령어를 치고 아래와같이 날짜와 시간이 변경된것을 확인하실수 있습니다.</p><p><img src="003-7.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-rwxrw-rw-  1 pi pi    0  5月 23 15:30 test.txt</span><br></pre></td></tr></table></figure><p><a href="https://docs.oracle.com/javase/7/docs/api/">JAVA DOC</a></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Linux/">Linux</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/linux-%EB%A6%AC%EB%88%85%EC%8A%A4/">linux - 리눅스</category>
      
      <category domain="https://playneko.github.io/tags/TOUCH-%EB%82%A0%EC%A7%9C%EB%B3%80%EA%B2%BD/">TOUCH - 날짜변경</category>
      
      
      <comments>https://playneko.github.io/2020/05/27/rasberry-pi/rasberry-pi-009/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA에서 시스템 정보(System info) 취득하기</title>
      <link>https://playneko.github.io/2020/05/27/java/java-001/</link>
      <guid>https://playneko.github.io/2020/05/27/java/java-001/</guid>
      <pubDate>Tue, 26 May 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;JAVA에서 시스템 정보 취득하기&lt;br&gt;Java프로그램을 개발을 하던중 서버환경의 시스템의 정보를 가져오고 싶을경우가 있습니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="JAVA에서-시스템-정보-취득하기"><a href="#JAVA에서-시스템-정보-취득하기" class="headerlink" title="JAVA에서 시스템 정보 취득하기"></a>JAVA에서 시스템 정보 취득하기</h2><p>Java프로그램을 개발을 하던중 서버환경의 시스템의 정보를 가져오고 싶을경우가 있습니다.</p><p>그래서 준비했습니다. 자바에서 환경정보를 취득하는 방법</p><p>System 클래스의 getPoperty(String key) 메소드를 이용하면 됩니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">getSystemInfo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String osName = <span class="string">&quot;os.name&quot;</span>;</span><br><span class="line">        String osVersion = <span class="string">&quot;os.version&quot;</span>;</span><br><span class="line">        String osArch = <span class="string">&quot;os.arch&quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;Server System Info&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;OS Name : &quot;</span> + System.getProperty(osName));</span><br><span class="line">        System.out.println(<span class="string">&quot;OS Version : &quot;</span> + System.getProperty(osVersion));</span><br><span class="line">        System.out.println(<span class="string">&quot;OS Architecture : &quot;</span> + System.getProperty(osArch));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://docs.oracle.com/javase/7/docs/api/">JAVA DOC</a></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Java/">Java</category>
      
      
      <category domain="https://playneko.github.io/tags/Java/">Java</category>
      
      <category domain="https://playneko.github.io/tags/getPoperty/">getPoperty</category>
      
      <category domain="https://playneko.github.io/tags/System/">System</category>
      
      <category domain="https://playneko.github.io/tags/%EC%84%9C%EB%B2%84%ED%99%98%EA%B2%BD/">서버환경</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8B%9C%EC%8A%A4%ED%85%9C/">시스템</category>
      
      <category domain="https://playneko.github.io/tags/%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%A0%95%EB%B3%B4/">시스템정보</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9E%90%EB%B0%94%EC%A0%95%EB%B3%B4/">자바정보</category>
      
      
      <comments>https://playneko.github.io/2020/05/27/java/java-001/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 또는 리눅스 find 명령어로 오래된 파일 삭제하기</title>
      <link>https://playneko.github.io/2020/05/26/rasberry-pi/rasberry-pi-008/</link>
      <guid>https://playneko.github.io/2020/05/26/rasberry-pi/rasberry-pi-008/</guid>
      <pubDate>Mon, 25 May 2020 17:00:01 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 또는 리눅스 find 명령어로 오래된 파일 삭제하기&lt;br&gt;라즈베리파이 또는 리눅스 서버를 운영하다보면 일정시간이 지나면…&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-또는-리눅스-find-명령어로-오래된-파일-삭제하기"><a href="#라즈베리파이-또는-리눅스-find-명령어로-오래된-파일-삭제하기" class="headerlink" title="라즈베리파이 또는 리눅스 find 명령어로 오래된 파일 삭제하기"></a>라즈베리파이 또는 리눅스 find 명령어로 오래된 파일 삭제하기</h2><p>라즈베리파이 또는 리눅스 서버를 운영하다보면 일정시간이 지나면</p><p>불필요한 파일이나 로그파일을 삭제하고싶지만 자동으로 하는방법을 설명해 드리겠습니다.</p><p>일정 시간이 지난 파일을 찾는 방법 : find 명령어</p><p>find명령어에 여러가지 옵션이 많이 있습니다만 일단 파일삭제에 필요한 옵션만 이용해 보도록 하겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ find 명령어를 통해 변경된지 하루가 넘은 파일을 찾기 위해서는 다음과 같이 옵션이 주어져야 합니다.</span><br><span class="line">$ find /home/pi/Documents/* -mtime +1</span><br></pre></td></tr></table></figure><p>다음과 같이 리스트 파일을 출력해 보신후 파일이 존재한다고 가정했을때</p><p><img src="001-6.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-rwxrw-rw-  1 pi pi    0  5月 24 12:00 txt1.txt</span><br><span class="line">-rwxrw-rw-  1 pi pi    0  5月 23 12:00 txt2.txt</span><br></pre></td></tr></table></figure><p>현재 날짜가 5월 26일 이라고 하면..</p><p>txt1.txt파일은 약1일 전에 만들어진 파일 입니다.</p><p>txt2.txt파일은 2일 전에 만들어진 파일 입니다.</p><p><img src="002-6.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ find /home/pi/Documents/* -mtime +1 명령어를 통해서 txt2.txt가 검색이 됩니다.</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-mtime은 수정된 시간을 기준으로 합니다.</span><br><span class="line">-atime은 접근 시간을 기준으로 합니다.</span><br><span class="line">-ctime은 변경된 시간을 기준으로 합니다.</span><br><span class="line">-amin, -cmin, -mmin은 분을 기준으로 사용합니다.</span><br></pre></td></tr></table></figure><p>일정 시간이 지난 파일을 지우는 방법 : find + exec + rm명령어</p><p>일정 시간이 지난 파일을 찾아서 지우는것도 역시 find 명령어를 사용하는데요.</p><p>이번에는 exec라는 옵션을 사용하면 됩니다.</p><p><img src="003-6.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ find /home/pi/Documents/* -mtime +1 -<span class="built_in">exec</span> rm &#123;&#125; \;</span><br></pre></td></tr></table></figure><p>txt2.txt 파일이 삭제된것을 확인 하실수 있습니다.</p><p><img src="004-4.png"></p><p>PHP공식사이트</p><p><a href="https://www.php.net/">https://www.php.net/</a></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/Linux/">Linux</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/exec/">exec</category>
      
      <category domain="https://playneko.github.io/tags/find/">find</category>
      
      <category domain="https://playneko.github.io/tags/linux/">linux</category>
      
      <category domain="https://playneko.github.io/tags/mtime/">mtime</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A6%AC%EB%88%85%EC%8A%A4/">리눅스</category>
      
      <category domain="https://playneko.github.io/tags/rm/">rm</category>
      
      
      <comments>https://playneko.github.io/2020/05/26/rasberry-pi/rasberry-pi-008/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>소소한 자전거 여행 – 아키하바라 (Akihabara)</title>
      <link>https://playneko.github.io/2020/05/26/akihabara/akihabara-001/</link>
      <guid>https://playneko.github.io/2020/05/26/akihabara/akihabara-001/</guid>
      <pubDate>Mon, 25 May 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;소소한 자전거 여행 – 아키하바라 (Akihabara)&lt;br&gt;소소하게 자전거로 여행을 해보았습니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="소소한-자전거-여행-–-아키하바라-Akihabara"><a href="#소소한-자전거-여행-–-아키하바라-Akihabara" class="headerlink" title="소소한 자전거 여행 – 아키하바라 (Akihabara)"></a>소소한 자전거 여행 – 아키하바라 (Akihabara)</h2><p><a href="https://youtu.be/vOorY_f13mw"><img src="http://img.youtube.com/vi/vOorY_f13mw/0.jpg" alt="AkibaTV"></a></p><p>소소하게 자전거로 여행을 해보았습니다.</p><p>카메라 흔들림이 조금 있습니다.</p><p>야간의 아키하바라 도로를 주행하는 영상 입니다.</p><p><a href="https://www.youtube.com/watch?v=vOorY_f13mw">아키바티비 채널</a></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%95%84%ED%82%A4%EB%B0%94-%EC%A0%95%EB%B3%B4/">아키바 정보</category>
      
      
      <category domain="https://playneko.github.io/tags/%EC%95%84%ED%82%A4%ED%95%98%EB%B0%94%EB%9D%BC/">아키하바라</category>
      
      <category domain="https://playneko.github.io/tags/akihabara/">akihabara</category>
      
      <category domain="https://playneko.github.io/tags/%E7%A7%8B%E8%91%89%E5%8E%9F/">秋葉原</category>
      
      <category domain="https://playneko.github.io/tags/%EC%86%8C%EC%86%8C%ED%95%9C/">소소한</category>
      
      <category domain="https://playneko.github.io/tags/%EC%9E%90%EC%A0%84%EA%B1%B0/">자전거</category>
      
      <category domain="https://playneko.github.io/tags/%EC%97%AC%ED%96%89/">여행</category>
      
      
      <comments>https://playneko.github.io/2020/05/26/akihabara/akihabara-001/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Raspberry Pi 3 Model B+ 설치</title>
      <link>https://playneko.github.io/2020/05/26/rasberry-pi/rasberry-pi-007/</link>
      <guid>https://playneko.github.io/2020/05/26/rasberry-pi/rasberry-pi-007/</guid>
      <pubDate>Mon, 25 May 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Raspberry Pi 3 Model B+ 설치&lt;br&gt;라즈베리파이 3 모델 B+를 설치하는 영상 입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="Raspberry-Pi-3-Model-B-설치"><a href="#Raspberry-Pi-3-Model-B-설치" class="headerlink" title="Raspberry Pi 3 Model B+ 설치"></a>Raspberry Pi 3 Model B+ 설치</h2><p>라즈베리파이 3 모델 B+를 설치하는 영상 입니다.</p><p>많은 분들이 영상을 참고하고 라즈베리파이를 좀더 쉽게 사용할수 있도록 하겠습니다.</p><p>많은 시청 바랍니다.</p><p>라즈베리파이 공식 사이트</p><p><a href="https://www.raspberrypi.org/">https://www.raspberrypi.org/</a></p><p><a href="https://youtu.be/rna-nl-Bw8E"><img src="hqdefault.jpg"></a></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      
      <comments>https://playneko.github.io/2020/05/26/rasberry-pi/rasberry-pi-007/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 ngrok으로 외부에서 로컬서버 접속 환경 구성</title>
      <link>https://playneko.github.io/2020/05/25/rasberry-pi/rasberry-pi-006/</link>
      <guid>https://playneko.github.io/2020/05/25/rasberry-pi/rasberry-pi-006/</guid>
      <pubDate>Sun, 24 May 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에서 ngrok을 이용한 외부에서 로컬서버 접속환경 구성 방법 입니다.&lt;br&gt;공식사이트에서 ngrok은 NAT와 방화벽 뒤에 있는 로컬 서버를 안전한 터널을 통해…&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이에서-ngrok을-이용한-외부에서-로컬서버-접속환경-구성-방법-입니다"><a href="#라즈베리파이에서-ngrok을-이용한-외부에서-로컬서버-접속환경-구성-방법-입니다" class="headerlink" title="라즈베리파이에서 ngrok을 이용한 외부에서 로컬서버 접속환경 구성 방법 입니다."></a>라즈베리파이에서 ngrok을 이용한 외부에서 로컬서버 접속환경 구성 방법 입니다.</h2><p>공식사이트에서 ngrok은 NAT와 방화벽 뒤에 있는 로컬 서버를 안전한 터널을 통해</p><p>공개 인터넷에 노출시켜 주는 도구라고 설명되어 있습니다.</p><p><img src="001-5.png"></p><p>프로그램은 아래의 공식사이트에서 다운로드 하실수 있습니다.</p><p><a href="https://ngrok.com/download">https://ngrok.com/download</a></p><p>다운로드 하신 파일을 라즈베리파이의 임의 폴더에 압축울 푸신고 넣어주시기 바랍니다.</p><p><img src="002-5-1536x503.png"></p><p>다운로드한 ngrok파일을 라즈베리파이의 임의의 장소에 배치를 해두었습니다.</p><p><img src="003-5.png"></p><p>콘솔창을 실행하신후 ngrok이 위치한 경로까지 이동합니다.</p><p>저는 콘솔창이 열리자 마자 ngrok이 나오게 배치를 해두었습니다.</p><p><img src="005-5.png"></p><p>아래의 명령어를 치시면 되겠습니다.</p><p>포트번호는 자신이 원하는 포트번호를 입력해 주시면 되겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./ngrok http 8099(포트번호는 임의로 지정)</span><br></pre></td></tr></table></figure><p>실행이 되시면 아래와 같이 고유 URL주소를 발급받게 됩니다.</p><p>8시간정도마다 랜덤으로 바뀌기때문에 고정주소를 원하시는 분은 유료로 가입하시면 고정으로 유지하실 수 있습니다.</p><p>ngrok을 이용해서 URL을 생성하시면 단점은 랜덤주소이지만 장점은 http, https를 모두 사용하실수 있게 됩니다.</p><p><img src="006-4.png"></p><p><img src="008-4.png"></p><p>발급받은 주소를 이용해서 실제 웹페이지가 표시가 되는지 확인 해보도록 하겠습니다.</p><p>저의 라즈베리파이에는 웹서버가 구축이 되어 있는 상태입니다.</p><p>웹서버 구축에 대해서는 차후에 게시하도록 하겠습니다.</p><p>발급받은 주소로 접속하니 정상적으로 내부의 라즈베리파이의 웹서버로 접속된것을 확인 하실수 있습니다.</p><p><img src="007-5.png"></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/ngrok/">ngrok</category>
      
      <category domain="https://playneko.github.io/tags/%EA%B3%A0%EC%A0%95ip/">고정ip</category>
      
      <category domain="https://playneko.github.io/tags/%EB%A1%9C%EC%BB%AC%EC%84%9C%EB%B2%84/">로컬서버</category>
      
      
      <comments>https://playneko.github.io/2020/05/25/rasberry-pi/rasberry-pi-006/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 고정 IP Address 설정</title>
      <link>https://playneko.github.io/2020/05/24/rasberry-pi/rasberry-pi-005/</link>
      <guid>https://playneko.github.io/2020/05/24/rasberry-pi/rasberry-pi-005/</guid>
      <pubDate>Sat, 23 May 2020 19:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이에서 유선랜 IP를 고정 IP 할당 설정방법 입니다.&lt;br&gt;라즈베리파이 제로를 사용하시는 분들같이 랜카드가 없으신 경우에는 저렴하게 이용하는 방법 입니다…&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-고정-IP-Address-설정"><a href="#라즈베리파이-고정-IP-Address-설정" class="headerlink" title="라즈베리파이 고정 IP Address 설정"></a>라즈베리파이 고정 IP Address 설정</h2><p>라즈베리파이 제로를 사용하시는 분들같이 랜카드가 없으신 경우에는 저렴하게</p><p>USB용 이더넷 어뎁터를 구매하신후 이용할실수 있습니다.</p><p>VNC로 라즈베리파이 서버로 접속하고 콘솔창을 여시기 바랍니다.</p><p><img src="001-4.png"></p><p>공유기의 게이트 정보를 얻기위해서 아래의 명령어를 입력해 주세요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ netstat -nr</span><br></pre></td></tr></table></figure><p><img src="003-4.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/dhcpcd.conf</span><br></pre></td></tr></table></figure><p>아래와 같이 나오시면</p><p><img src="002-4.png"></p><p><img src="004-3.png"></p><p><img src="005-4.png"></p><p>위의 부분이 나올때까지 커서를 내려주시기 바랍니다.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Example static IP configuration;</span><br><span class="line">#intercafe eth0</span><br><span class="line">#static ip_address=<span class="number">192.168</span>.<span class="number">0.10</span>/<span class="number">24</span></span><br><span class="line">#static ip6_address=fd51:<span class="number">42</span>f8:caae:d92e::ff/<span class="number">64</span></span><br><span class="line">#static routers=<span class="number">192.168</span>.<span class="number">0.1</span></span><br><span class="line">#static domain_name_servers=<span class="number">192.168</span>.<span class="number">0.1</span> <span class="number">8.8</span>.<span class="number">8.8</span> fd51:<span class="number">42</span>f8:caae:d92e::<span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="006-3.png"></p><p><img src="007-4.png"></p><p>위와같이 4줄에 대해서 #(주석)을 해제하시고</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Example static IP configuration;</span><br><span class="line">intercafe eth0</span><br><span class="line">static ip_address=<span class="number">10.0</span>.<span class="number">1.30</span>/<span class="number">24</span></span><br><span class="line">#static ip6_address=fd51:<span class="number">42</span>f8:caae:d92e::ff/<span class="number">64</span></span><br><span class="line">static routers=<span class="number">10.0</span>.<span class="number">1.1</span></span><br><span class="line">static domain_name_servers=<span class="number">10.0</span>.<span class="number">1.1</span> <span class="number">8.8</span>.<span class="number">8.8</span> fd51:<span class="number">42</span>f8:caae:d92e::<span class="number">1</span></span><br></pre></td></tr></table></figure><p>static ip_address 부분에 고정하실 아이피로 수정해 주시기 바랍니다.</p><p>static routers 부분에는 공유기 게이트 정보를 입력해 주시기 바랍니다.</p><p>static domain_name_servers 부분의 첫번째 아이피도 공유기의 게이트 정보를 입력해 주시기 바랍니다.</p><p>저장후 빠져나옵니다.</p><p><img src="008-3.png"></p><p>설정 정보를 반영하기위해서 재가동이 필요합니다.</p><p>아래의 명령어를 입력해 주시기 바랍니다.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo reboot</span><br></pre></td></tr></table></figure><p><img src="009-4.png"></p><p>재기동이 끝난후 새로 바꾼 아이피로 접속을 하시기 바랍니다.</p><p>콘솔창에 아래의 명령어를 입력해 주시기 바랍니다.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ifconfig</span><br></pre></td></tr></table></figure><p><img src="010-3.png"></p><p>아이피 정보가 고정된 정보로 바뀐것을 확인 하실수 있습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/vi/">vi</category>
      
      <category domain="https://playneko.github.io/tags/vim/">vim</category>
      
      
      <comments>https://playneko.github.io/2020/05/24/rasberry-pi/rasberry-pi-005/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에서 vi editor 입력 오류 해결방법</title>
      <link>https://playneko.github.io/2020/05/24/rasberry-pi/rasberry-pi-004/</link>
      <guid>https://playneko.github.io/2020/05/24/rasberry-pi/rasberry-pi-004/</guid>
      <pubDate>Sat, 23 May 2020 18:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;라즈베리파이 vi 입력오류 해결방법&lt;br&gt;라즈베리파이에서 vi를 사용하다보면 방향키와 입력시 글이 밀린다는지 여러가지 짜증난다는 분들이 많으실 겁니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="라즈베리파이-vi-입력오류-해결방법"><a href="#라즈베리파이-vi-입력오류-해결방법" class="headerlink" title="라즈베리파이 vi 입력오류 해결방법"></a>라즈베리파이 vi 입력오류 해결방법</h2><p>라즈베리파이에서 vi를 사용하다보면 방향키와 입력시 글이 밀린다는지 여러가지 짜증난다는 분들이 많으실 겁니다.</p><p>그것을 해결하는 방법을 소개해 드리겠습니다.</p><p>일단 VIM부터 설치부터 하겠습니다만</p><p>일단 VNC로 라즈베리파이 서버로 접속하고 콘솔창을 여시기 바랍니다.</p><p>그리고 아래의 명령어를 차례대로 입력하시기 바랍니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update 엔터</span><br><span class="line"></span><br><span class="line">$ sudo apt-get install vim 엔터</span><br><span class="line"></span><br><span class="line">$ sudo vim ~/.vimrc</span><br><span class="line"></span><br><span class="line">(vim 설정 파일. 하이라이팅, 인덱스, 공백 칸 수동으로 설정을 할수 있습니다.)</span><br></pre></td></tr></table></figure><p><img src="001-3.png"></p><p><img src="002-3.png"></p><p><img src="003-3.png"></p><p><img src="005-3.png"></p><p><img src="007-3.png"></p><p>아래의 내용을 입력해 주시기 바랍니다.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">number</span>                     # 줄 번호 표시</span><br><span class="line"><span class="keyword">set</span> tabstop=<span class="number">4</span>                  # <span class="keyword">tab</span>을 <span class="number">4</span>칸으로</span><br><span class="line"><span class="keyword">set</span> ignorecase                 # 검색시 대소문자 구별하지 않음</span><br><span class="line"><span class="keyword">set</span> hlsearch                   # 검색시 하이라이트</span><br><span class="line"><span class="keyword">set</span> fileencodings=utf-<span class="number">8</span>,euc-kr # 파일인코딩 형식</span><br><span class="line"><span class="keyword">set</span> bs=<span class="built_in">indent</span>,eol,start        # backspace 키 사용</span><br><span class="line"><span class="keyword">set</span> ruler                      # 상태표시줄 커서 위치 표시</span><br><span class="line"><span class="keyword">set</span> title                      # 제목 표시</span><br><span class="line"><span class="keyword">set</span> showmatch                  # 매칭되는 괄호 표시</span><br><span class="line"><span class="keyword">set</span> nowrap                     # 자동 줄바꿈 해제</span><br><span class="line"><span class="keyword">set</span> wmnu                       # <span class="keyword">tab</span> 자동완성시 가능한 목록 표시</span><br><span class="line"><span class="keyword">syntax</span> <span class="keyword">on</span>                      # 문법 하이라이트</span><br></pre></td></tr></table></figure><p><img src="009-3.png"></p><p>이걸로 설정이 끝났습니다.</p><p>이젠 vi, vim으로 입력시 짜증나는건 모두 해결이 됩니다.</p><p>vim 공식 사이트 입니다.</p><p><a href="https://www.vim.org/">https://www.vim.org/</a></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/vi/">vi</category>
      
      <category domain="https://playneko.github.io/tags/vim/">vim</category>
      
      
      <comments>https://playneko.github.io/2020/05/24/rasberry-pi/rasberry-pi-004/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 삼바 연결설정</title>
      <link>https://playneko.github.io/2020/05/24/rasberry-pi/rasberry-pi-003/</link>
      <guid>https://playneko.github.io/2020/05/24/rasberry-pi/rasberry-pi-003/</guid>
      <pubDate>Sat, 23 May 2020 17:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;삼바(Samba)란?&lt;br&gt;삼바는 리눅스(UNIX-like)와 윈도우간에 파일 및 프린터를 공유 할 수 있게 해주는 패키지입니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="삼바-Samba-란"><a href="#삼바-Samba-란" class="headerlink" title="삼바(Samba)란?"></a>삼바(Samba)란?</h2><p>삼바는 리눅스(UNIX-like)와 윈도우간에 파일 및 프린터를 공유 할 수 있게 해주는 패키지입니다.</p><p>컴퓨터 간 파일 공유등의 서비스를 구현하는데 SMB/CIFS 프로토콜를 사용하여, UNIX-like 시스템뿐 아니라 OpenVMS, OS/2, AmigaDOS,</p><p>그리고 Netware같은 다양한 플랫폼에서 지원됩니다. 삼바를 통해 리눅스 서버를 타운영체제와 파일을 공유할 수 있는 파일서버로도 사용할 수 있습니다.</p><p>라즈베리파이를 NAS 대용으로 사용하게 만들어주는 기능이라고 볼 수 있습니다.</p><p>삼바 공식 사이트</p><p><a href="https://www.samba.org/">https://www.samba.org/</a></p><blockquote><p>라즈베리파이에 삼바 연결하기</p></blockquote><p>VNC로 라즈베리파이에 접속을 한뒤 콘솔창을 실행합니다.</p><p><img src="001-2.png"></p><p>첫 단계로 다음 apt 명령어를 사용하여 삼바(samba) 패키지를 설치합니다.</p><p>콘솔창에 아래의 명령을 입력합니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install samba samba-common-bin</span><br></pre></td></tr></table></figure><p><img src="002-2.png"></p><p>패키지 다운로드에 71메가 정도 용량을 사용해도 되는 물어보는 메세지가 나옵니다.</p><p>다운로드를 할건지 Y/n가 나올경우 Y를 입력후 엔터를 치시기 바랍니다.</p><p><img src="003-2.png"></p><p>다운로드를 시작합니다.</p><p><img src="004-2.png"></p><p>당신의 컴퓨터가 네트워크의 DHCP서버로부터 IP정보를 취득하고있을경우 DHCP서버는 네트워크의 WINS서버</p><p>(NetBIOS 네임서버)에 들어있는 정보를 공유하는게 가능합니다. DHCP에서 smb.conf파일의 변경이 필요한경우가 있습니다.</p><p>이 기능을 사용을 위해선 dhcp-client 패키지가 인스톨이 되어 있어야만 합니다.</p><p>DHCP에서 WINS설정을 사용해서 smb.conf를 변경하시겠습니까?라고 나옵니다만</p><p>알기 어려운 내용이기에 NO를 선택후 엔터를 칩니다.</p><p><img src="005-2.png"></p><p>일단 계속해서 패키지 설치가 진행됩니다.</p><p><img src="006-2.png"></p><p>한참 기다리시면 아래와 같이 나오며 설치가 완료 되었습니다.</p><p><img src="007-2.png"></p><p>설치가 완료되면 smbpasswd로 삼바를 사용할 id를 추가합니다.</p><p>이때 설정한 ID를 사용하여 같은 네트워크에 있는 컴퓨터에서 라즈베리파이로 삼바를 접속할때 사용하게 됩니다.</p><p>이때 설정할 ID와 비밀번호는 라즈베리파이와 똑같이 사용하지 않으셔도 됩니다.</p><p>일단 저는 라즈베리파이와 동일하게 ID를 pi를 사용하며 비밀번호도 동일하게 설정을 하도록 하겠습니다.</p><p>콘솔창에 아래의 명령어를 입력하시고 엔터를 치십시오. (아이디 부분은 원하시는 아이디를 입력해 주세요.)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo smbpasswd -a pi(아이디/ユーザーID)</span><br></pre></td></tr></table></figure><p><img src="008-2.png"></p><p>아이디와 비밀번호를 세팅하시면 일반 접속정보는 설정이 완료 되었습니다.</p><p>이제는 삼바 설정을 해야합니다. 삼바 설정 파일인 smb.conf 편집합니다.</p><p>아래의 명령어를 입력하신후 엔터를 치십시오.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/samba/smb.conf</span><br></pre></td></tr></table></figure><p><img src="009-2.png"></p><p>커서를 가장 아래까지 내려간뒤 키보드의 a키를 누르시면 입력가능하게 바뀌게 됩니다.</p><p><img src="010-2.png"></p><p>아래의 내용을 입력하시기 바랍니다.</p><p>꼭 아래와 같이 하실필요 없이 자신이 원하는 설정으로 하시면 되겠습니다.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[pi]</span><br><span class="line">   comment = pi shared folder</span><br><span class="line">   path = /home/pi</span><br><span class="line">   valid users = pi</span><br><span class="line">   browseable = yes</span><br><span class="line">   guest ok = <span class="keyword">no</span></span><br><span class="line">   <span class="keyword">read</span> <span class="keyword">only</span> = <span class="keyword">no</span></span><br><span class="line">   create mask = <span class="number">0777</span></span><br></pre></td></tr></table></figure><p><img src="011-2.png"></p><p>입력을 끝내셨으면 :키를 누르신후 wq를 입력후 저장과 동시에 vi입력창에서 빠져나오게 됩니다.</p><p><img src="012-2.png"></p><p><img src="013-2.png"></p><p>설정 완료 후에는 samba를 재시작 합니다.</p><p>아래의 명령어를 입력후 엔터를 치십시오.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /etc/init.d/smbd restart</span><br></pre></td></tr></table></figure><p><img src="014-2.png"></p><p>이제 윈도우 탐색기에서 \\10.0.1.16\pi 와 같이 접속합니다.</p><p>주소 형식 : \\[라즈베리파이 IP 주소][삼바 계정 id]</p><p>본인 환경에 따라 주소를 입력하시면 됩니다.</p><p>입력 주소를 윈도우 탐색기에서 입력하면 아래와같이 계정 정보를 입력 메뉴가 실행됩니다.</p><p><img src="015-1.png"></p><p>라즈베리파이 서버로 접속이 되면 아래와 같이 폴더가 표시되게 됩니다.</p><p>일단 파일 읽기와 쓰기가 모두 되면 권한 설정이 정상입니다.</p><p>읽기와 쓰기에 권한 문제가 발생하면 smb.conf 파일에 설정을 점검이 필요합니다.</p><p><img src="017-1.png"></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      <category domain="https://playneko.github.io/tags/samba/">samba</category>
      
      <category domain="https://playneko.github.io/tags/server/">server</category>
      
      <category domain="https://playneko.github.io/tags/%EC%82%BC%EB%B0%94/">삼바</category>
      
      <category domain="https://playneko.github.io/tags/%EC%84%9C%EB%B2%84/">서버</category>
      
      
      <comments>https://playneko.github.io/2020/05/24/rasberry-pi/rasberry-pi-003/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이 VNC설정</title>
      <link>https://playneko.github.io/2020/05/24/rasberry-pi/rasberry-pi-002/</link>
      <guid>https://playneko.github.io/2020/05/24/rasberry-pi/rasberry-pi-002/</guid>
      <pubDate>Sat, 23 May 2020 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;VNC Viewer를 이용해서 라즈베리파이를 접속방법을 소개해 드리겠습니다.&lt;br&gt;그전에 라즈베리파이 OS를 설치하지 않으셨으면 먼저 라즈베리파이 OS부터 설치해 주세요.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="VNC-Viewer를-이용해서-라즈베리파이를-접속방법을-소개해-드리겠습니다"><a href="#VNC-Viewer를-이용해서-라즈베리파이를-접속방법을-소개해-드리겠습니다" class="headerlink" title="VNC Viewer를 이용해서 라즈베리파이를 접속방법을 소개해 드리겠습니다."></a>VNC Viewer를 이용해서 라즈베리파이를 접속방법을 소개해 드리겠습니다.</h2><p>그전에 라즈베리파이 OS를 설치하지 않으셨으면 아래의 링크를 클릭하신후 먼저 라즈베리파이 OS부터 설치해 주세요.</p><p><a href="https://akibatv.net/archives/373">https://akibatv.net/archives/373</a></p><p>VNC Viewer는 아래의 사이트에서 다운로드 받을수 있습니다.</p><p><a href="https://www.realvnc.com/en/connect/download/viewer/">https://www.realvnc.com/en/connect/download/viewer/</a></p><p><img src="20200524_172558.png"></p><p>VNC Viewer를 설치후 실행을 합니다.</p><p>파일-&gt;New connection을 선택합니다.</p><p><img src="001-1.png"></p><p>라즈베리파이의 아이피주소와 이름을 적고 OK를 눌러주세요.</p><p>다른설정은 건들일 필요는 없습니다.</p><p><img src="002-1.png"></p><p>추가한 서버를 선택하면 아이디와 비밀번호 입력창이 나오게 됩니다.</p><p>아이디와 비밀번호를 입력하신후 OK를 눌러주세요.</p><p><img src="003-1.png"></p><p>접속이 되시면 아래의 화면이 나오게 됩니다.</p><p>아래의 화면까지 나오면 일단 기본적인 VNC설정은 끝나게 됩니다.</p><p>라즈베리파이를 처음 접속하시면 기본 설정을 하라는 메세지가 나오게 되며</p><p>설정을 원하시는 분은 다음버튼 필요 없으신 분은 캔슬을 눌러주세요.</p><p><img src="004-1.png"></p><p>다음 버튼을 누르면 스크린설정이 나오지만 다음 버튼을 눌러서 넘어갑니다.</p><p><img src="009-1.png"></p><p>비밀번호 설정창이 나오면 새비밀번호를 입력하시고 다음버튼을 눌러주세요.</p><p><img src="008-1.png"></p><p>국가와 언어를 설정을 하시고 다음버튼을 눌러주세요.</p><p>저의 경우는 일본어 키보드를 설정하고 있기에 국가와 언어를 일본어로 설정하겠습니다.</p><p><img src="005-1.png"></p><p>와이파이 설정 화면입니다.</p><p>와이파이 설정이 필요하신경우 설정을 해주시고 필요가 없으시면 스킵을 해주세요.</p><p><img src="010-1.png"></p><p>소프트웨어를 최신버전으로 업데이트 하겠냐고 물어봅니다.</p><p>일단 최신상태로 해두는게 좋기에 다음을 눌러주시는걸 추천합니다.</p><p><img src="011-1.png"></p><p>업데이트가 진행되고 있습니다.</p><p>각종 프로그램들을 최신버전으로 업데이트하기에 시간이 좀 많이 걸리겠습니다.</p><p><img src="012-1.png"></p><p>드디어 업데이트가 끝났습니다.</p><p>OK버튼을 눌러주시기 바랍니다.</p><p><img src="013-1.png"></p><p>업데이트가 끝나고 재시동을 할것인지 다음에 할것인지 선택하시면</p><p>라즈베리의 기본 업데이트까지는 완료됩니다.</p><p><img src="014-1.png"></p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      
      <comments>https://playneko.github.io/2020/05/24/rasberry-pi/rasberry-pi-002/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>모니터없이 라즈베리파이3 B 설치하기</title>
      <link>https://playneko.github.io/2020/05/24/rasberry-pi/rasberry-pi-001/</link>
      <guid>https://playneko.github.io/2020/05/24/rasberry-pi/rasberry-pi-001/</guid>
      <pubDate>Sat, 23 May 2020 15:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;모니터없이 라즈베리파이3 B 설치하기를 설명하겠습니다.&lt;br&gt;라즈베리파이3 B에 라즈베리파이 OS를 설치하기 위해선…&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id="모니터없이-라즈베리파이3-B-설치하기를-설명하겠습니다"><a href="#모니터없이-라즈베리파이3-B-설치하기를-설명하겠습니다" class="headerlink" title="모니터없이 라즈베리파이3 B 설치하기를 설명하겠습니다."></a>모니터없이 라즈베리파이3 B 설치하기를 설명하겠습니다.</h2><p>라즈베리파이3 B에 라즈베리파이 OS를 설치하기 위해선</p><ul><li>준비물<ul><li>라즈베리파이 3B 또는 라즈베리파이 Zero</li><li>SD카드(8기가 이상)</li><li>컴퓨터</li><li>인터넷</li></ul></li></ul><p>준비물이 준비되어 있으면<br>아래의 링크에서 라즈베리파이 OS를 다운로드 합니다.<br><a href="https://www.raspberrypi.org/downloads/">https://www.raspberrypi.org/downloads/</a></p><p><img src="001.png"></p><p>Raspbian을 클릭하면 다운로드 페이지로 이동하게 됩니다.</p><p><img src="002.png"></p><p>Raspbian Stretch with desktop : strach, sonic Pi 등 일부 소프트웨어가 제외된 파일입니다.</p><p>python, VLC media player 등의 소프트웨어는 설치되어 있습니다.</p><p>Raspbian Stretch Lite : Desktop GUI가 없는 파일이기 때문에 text ccommand로만 동작 가능합니다.</p><p>zero 모델처럼 저사양에 프로그램만 기능하게 하는 용도로 주로 사용한다고 합니다.</p><p>원하는 버전을 토렌트 또는 압축파일로 선택해서 다운로드 하실수 있습니다.</p><p>저의 경우 Raspbian Stretch with desktop를 다운로드 합니다.</p><p>SD카드에 OS를 설치하기 위해 balenaEtcher이라는 프로그램을 설치했습니다.</p><p><a href="https://www.balena.io/etcher/">https://www.balena.io/etcher/</a></p><p><img src="003.png"></p><p><img src="004.png"></p><p>OS에 맞는걸 다운로드 하시면 되겠습니다.</p><p><img src="005.png"></p><p>설치프로그램을 실행후 설치를 진행하시면 됩니다.</p><p><img src="006.png"></p><p>설치가 완료되었으면 프로그램을 기동하시고 SD카드를 컴퓨터에 삽입 합니다.</p><p><img src="007.png"></p><p>다운로드한 라즈베리파이 OS IMG파일을 선택하시면 번개마크가 활성화가 되며 Flash!버튼을 클릭하시면</p><p>데이터가 SD카드에 넣기 시작합니다.</p><p><img src="008.png"></p><p><img src="009.png"></p><p>조금 시간이 걸리니 느긋하게 기다리시면 됩니다.</p><p><img src="010.png"></p><p><img src="011.png"></p><p>설치가 완료 되었습니다.</p><p>SD카드를 추출하고 다시 삽입을 해주시기 바랍니다.</p><p>원격으로 SSH로 라즈베리파이를 접속하기 위해선 2가지 방법이 있습니다.</p><ol><li>유선랜으로 접속방법 네트워크의 내부 IP를 미리 파악해 두셔야만 합니다.</li><li>무선랜을 설정후 접속방법</li></ol><p>아래의 설정은 무선랜으로 라즈베리파이에 접속법을 설명 합니다.</p><p><img src="012.png"></p><p>SSH접속 설정을 위해선 우선 SD카드안에 텍스트 문서를 추가 합니다.</p><p><img src="013.png"></p><p>추가된 텍스트 문서를 여시고</p><p><img src="014.png"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span><br><span class="line">update_config=1 network=&#123; ssid=&quot;wifi ssid&quot;   psk=&quot;wifi password&quot;   key_mgmt=WPA-PSK &#125;</span><br></pre></td></tr></table></figure><p>텍스트 문서 파일의 이름을 wpa_supplicant.conf로 변경합니다.</p><p><img src="015.png"></p><p>여기까지가 무선랜을 이용한 설정법 입니다.</p><p>이후의 설정은 유선, 무선 모두 해당하는 내용 입니다.</p><p>이젠 SSH파일이 있어야 유선랜 또는 무선랜에서 wpa_supplicant.conf에 설정한 값대로 SSH 기능을 활성화시킵니다.</p><p>추가로 텍스트 문서를 추가 합니다.</p><p><img src="016.png"></p><p>폴더안의 숨겨진 확장자를 전부 보이게 합니다.</p><p><img src="019.png"></p><p><img src="020.png"></p><p>새로 추가한 SSH파일의 확장자를 삭제 합니다.</p><p>이제 기본준비는 모두 끝났으니 SD카드를 추출하시고</p><p>라즈베리파이에 삽입하시고 전원을 넣어주세요.</p><p>라즈베리파이에 할당된 아이피의 확인은 사용중이신 공유기에서 확인하시면 됩니다.</p><p>SSH접속을 위해 접속프로그램이 필요합니다.</p><p>이미 설치된 프로그램 또는 설치가 필요하신 경우 저는 putty를 이용하고 있습니다.</p><p><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/">https://www.chiark.greenend.org.uk/~sgtatham/putty/</a></p><p><img src="024.png"></p><p>Download it hear.링크를 클릭 합니다.</p><p><img src="025.png"></p><p>각 환경에 맞는 프로그램을 다운로드 하시면 됩니다.</p><p><img src="022.png"></p><p>Putty를 실행하시면 위와같은 화면이 나오게 되며 아이피를 입력하신후 오픈을 클릭해 주세요.</p><p><img src="023.png"></p><p>접속이 되시면 아래의 초기 아이디와 비밀번호를 입력해 주세요.</p><ul><li>ID : pi</li><li>PW : raspberry</li></ul><p>정상적으로 접속이 되셨으면 기본적인 세팅을 통해 항상 SSH또는 VNC를 활성화 시켜줍니다.</p><p>sudo raspi-config를 입력해 주세요.</p><p><img src="026.png"></p><p><img src="027.png"></p><p>설정화면이 나오면 우선 비밀번호를 재설정 합니다.</p><p>이대로 엔터를 치시기 바랍니다.</p><p><img src="028.png"></p><p>다시한번 엔터</p><p><img src="029.png"></p><p>새로운 비밀번호와 확인 비밀번호를 입력합니다.</p><p><img src="030.png"></p><p>설정이 완료되었다고 나왔으니 엔터</p><p><img src="031.png"></p><p>SSH와 VNC설정을 위해서 5번메뉴로 이동하시고 엔터</p><p><img src="032.png"></p><p>항상 SSH가 활성화를 위해 SSH항목에서 엔터</p><p><img src="033.png"></p><p><YES>에 놓고 엔터를 칩니다.</p><p><img src="034.png"></p><p>활성화 설정이 완료 되었습니다.</p><p><img src="035.png"></p><p>이번에는 VNC항목에서 엔터</p><p><img src="036.png"></p><p><YES>에 놓고 엔터를 칩니다.</p><p><img src="037.png"></p><p>활성화 설정이 완료 되었습니다.</p><p><img src="038.png"></p><p>최신 업데이트를 위해서 업데이트 항목에서 엔터를 칩니다.</p><p><img src="039.png"></p><p>업데이트에 필요한 파일을 다운로드와 설치를 진행하게 됩니다.</p><p><img src="040.png"></p><p>이렇게해서 라즈베리파이 OS설치와 기본설정이 완료 되었습니다.</p>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/Rasberry-Pi/">Rasberry Pi</category>
      
      
      <category domain="https://playneko.github.io/tags/Rasberry-Pi/">Rasberry Pi</category>
      
      <category domain="https://playneko.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://playneko.github.io/tags/VNC/">VNC</category>
      
      <category domain="https://playneko.github.io/tags/%E3%83%A9%E3%82%BA%E3%83%99%E3%83%AA%E3%83%BC%E3%83%91%E3%82%A4/">ラズベリーパイ</category>
      
      <category domain="https://playneko.github.io/tags/%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4/">라즈베리파이</category>
      
      
      <comments>https://playneko.github.io/2020/05/24/rasberry-pi/rasberry-pi-001/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title></title>
      <link>https://playneko.github.io/2019/11/30/akihabara/akihabara-014/</link>
      <guid>https://playneko.github.io/2019/11/30/akihabara/akihabara-014/</guid>
      <pubDate>Fri, 29 Nov 2019 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p><a href="">link</a></p><p><img src="001.png" alt="image"></p><p><a href="https://youtu.be/"><img src="http://img.youtube.com/vi/xxxx/0.jpg" alt="AkibaTV"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bash</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%95%84%ED%82%A4%EB%B0%94-%EC%A0%95%EB%B3%B4/">아키바 정보</category>
      
      
      
      <comments>https://playneko.github.io/2019/11/30/akihabara/akihabara-014/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title></title>
      <link>https://playneko.github.io/2019/11/30/akihabara/akihabara-015/</link>
      <guid>https://playneko.github.io/2019/11/30/akihabara/akihabara-015/</guid>
      <pubDate>Fri, 29 Nov 2019 16:00:00 GMT</pubDate>
      
      <description>&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;</description>
      
      
      
      <content:encoded><![CDATA[<!-- excerpt --><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p><a href="">link</a></p><p><img src="001.png" alt="image"></p><p><a href="https://youtu.be/"><img src="http://img.youtube.com/vi/xxxx/0.jpg" alt="AkibaTV"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bash</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://playneko.github.io/categories/%EC%95%84%ED%82%A4%EB%B0%94-%EC%A0%95%EB%B3%B4/">아키바 정보</category>
      
      
      
      <comments>https://playneko.github.io/2019/11/30/akihabara/akihabara-015/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
